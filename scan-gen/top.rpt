
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33 (git sha1 2584903a060, clang 14.0.3 -fPIC -Os)


-- Executing script file `top.ys' --

1. Executing RTLIL frontend.
Input filename: top.il

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \top.pin_clk_if_0
Used module:     \top.pin_data_0__D14
Used module:     \top.pin_data_0__D13
Used module:     \top.pin_data_0__D12
Used module:     \top.pin_data_0__D11
Used module:     \top.pin_data_0__D10
Used module:     \top.pin_data_0__D9
Used module:     \top.pin_data_0__D8
Used module:     \top.pin_data_0__D7
Used module:     \top.pin_data_0__D6
Used module:     \top.pin_data_0__D5
Used module:     \top.pin_data_0__D4
Used module:     \top.pin_data_0__D3
Used module:     \top.pin_data_0__D2
Used module:     \top.pin_data_0__D1
Used module:     \top.pin_power_ok_0
Used module:     \top.pin_control_0__D24
Used module:     \top.pin_control_0__D23
Used module:     \top.pin_control_0__D22
Used module:     \top.pin_control_0__D21
Used module:     \top.pin_control_0__D20
Used module:     \top.pin_control_0__D19
Used module:     \top.pin_control_0__D18
Used module:     \top.pin_control_0__D17
Used module:     \top.pin_port_b_6__oe
Used module:     \top.pin_port_b_6__io
Used module:     \top.pin_port_b_7__oe
Used module:     \top.pin_port_b_7__io
Used module:     \top.pin_port_b_5__oe
Used module:     \top.pin_port_b_5__io
Used module:     \top.pin_port_b_4__oe
Used module:     \top.pin_port_b_4__io
Used module:     \top.pin_port_b_3__oe
Used module:     \top.pin_port_b_3__io
Used module:     \top.pin_port_b_2__oe
Used module:     \top.pin_port_b_2__io
Used module:     \top.pin_port_b_1__oe
Used module:     \top.pin_port_b_1__io
Used module:     \top.pin_port_b_0__oe
Used module:     \top.pin_port_b_0__io
Used module:     \top.pin_port_a_7__oe
Used module:     \top.pin_port_a_7__io
Used module:     \top.pin_port_a_6__oe
Used module:     \top.pin_port_a_6__io
Used module:     \top.pin_port_a_5__oe
Used module:     \top.pin_port_a_5__io
Used module:     \top.pin_port_a_4__oe
Used module:     \top.pin_port_a_4__io
Used module:     \top.pin_port_a_3__oe
Used module:     \top.pin_port_a_3__io
Used module:     \top.pin_port_a_2__oe
Used module:     \top.pin_port_a_2__io
Used module:     \top.pin_port_a_1__oe
Used module:     \top.pin_port_a_1__io
Used module:     \top.pin_port_a_0__oe
Used module:     \top.pin_port_a_0__io
Used module:     \top.pin_fx2_0__fd
Used module:     \top.pin_fx2_0__flag
Used module:     \top.pin_fx2_0__fifoadr
Used module:     \top.pin_fx2_0__pktend
Used module:     \top.pin_fx2_0__slwr
Used module:     \top.pin_fx2_0__slrd
Used module:     \top.pin_fx2_0__sloe
Used module:     \top.pin_i2c_0__sda
Used module:     \top.pin_i2c_0__scl
Used module:     \top.pin_unused_0
Used module:     \top.cd_sync
Used module:     \top.multiplexer
Used module:         \top.multiplexer.U$$0
Used module:             \top.multiplexer.U$$0.ConfigHdlr
Used module:             \top.multiplexer.U$$0.MuxBus
Used module:                 \top.multiplexer.U$$0.MuxBus.sample_clock
Used module:                 \top.multiplexer.U$$0.MuxBus.a_adc
Used module:                 \top.multiplexer.U$$0.MuxBus.y_dac
Used module:                 \top.multiplexer.U$$0.MuxBus.x_dac
Used module:             \top.multiplexer.U$$0.ModeCtrl
Used module:                 \top.multiplexer.U$$0.ModeCtrl.ByteReplace
Used module:                 \top.multiplexer.U$$0.ModeCtrl.DwellAvgr
Used module:                 \top.multiplexer.U$$0.ModeCtrl.YInt
Used module:                 \top.multiplexer.U$$0.ModeCtrl.XInt
Used module:                 \top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl
Used module:                     \top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter
Used module:                     \top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader
Used module:                 \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl
Used module:                     \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen
Used module:                         \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter
Used module:                         \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter
Used module:                     \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader
Used module:                     \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter
Used module:                     \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter
Used module:                 \top.multiplexer.U$$0.ModeCtrl.BeamController
Used module:     \top.fx2_crossbar
Used module:         \top.fx2_crossbar.out_fifo_0
Used module:             \top.fx2_crossbar.out_fifo_0.skid
Used module:             \top.fx2_crossbar.out_fifo_0.inner
Used module:         \top.fx2_crossbar.in_fifo_0
Used module:             \top.fx2_crossbar.in_fifo_0.inner
Used module:         \top.fx2_crossbar.bus
Used module:     \top.registers
Used module:     \top.i2c_target
Used module:         \top.i2c_target.bus
Used module:             \top.i2c_target.bus.U$$1
Used module:             \top.i2c_target.bus.U$$0

2.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \top.pin_clk_if_0
Used module:     \top.pin_data_0__D14
Used module:     \top.pin_data_0__D13
Used module:     \top.pin_data_0__D12
Used module:     \top.pin_data_0__D11
Used module:     \top.pin_data_0__D10
Used module:     \top.pin_data_0__D9
Used module:     \top.pin_data_0__D8
Used module:     \top.pin_data_0__D7
Used module:     \top.pin_data_0__D6
Used module:     \top.pin_data_0__D5
Used module:     \top.pin_data_0__D4
Used module:     \top.pin_data_0__D3
Used module:     \top.pin_data_0__D2
Used module:     \top.pin_data_0__D1
Used module:     \top.pin_power_ok_0
Used module:     \top.pin_control_0__D24
Used module:     \top.pin_control_0__D23
Used module:     \top.pin_control_0__D22
Used module:     \top.pin_control_0__D21
Used module:     \top.pin_control_0__D20
Used module:     \top.pin_control_0__D19
Used module:     \top.pin_control_0__D18
Used module:     \top.pin_control_0__D17
Used module:     \top.pin_port_b_6__oe
Used module:     \top.pin_port_b_6__io
Used module:     \top.pin_port_b_7__oe
Used module:     \top.pin_port_b_7__io
Used module:     \top.pin_port_b_5__oe
Used module:     \top.pin_port_b_5__io
Used module:     \top.pin_port_b_4__oe
Used module:     \top.pin_port_b_4__io
Used module:     \top.pin_port_b_3__oe
Used module:     \top.pin_port_b_3__io
Used module:     \top.pin_port_b_2__oe
Used module:     \top.pin_port_b_2__io
Used module:     \top.pin_port_b_1__oe
Used module:     \top.pin_port_b_1__io
Used module:     \top.pin_port_b_0__oe
Used module:     \top.pin_port_b_0__io
Used module:     \top.pin_port_a_7__oe
Used module:     \top.pin_port_a_7__io
Used module:     \top.pin_port_a_6__oe
Used module:     \top.pin_port_a_6__io
Used module:     \top.pin_port_a_5__oe
Used module:     \top.pin_port_a_5__io
Used module:     \top.pin_port_a_4__oe
Used module:     \top.pin_port_a_4__io
Used module:     \top.pin_port_a_3__oe
Used module:     \top.pin_port_a_3__io
Used module:     \top.pin_port_a_2__oe
Used module:     \top.pin_port_a_2__io
Used module:     \top.pin_port_a_1__oe
Used module:     \top.pin_port_a_1__io
Used module:     \top.pin_port_a_0__oe
Used module:     \top.pin_port_a_0__io
Used module:     \top.pin_fx2_0__fd
Used module:     \top.pin_fx2_0__flag
Used module:     \top.pin_fx2_0__fifoadr
Used module:     \top.pin_fx2_0__pktend
Used module:     \top.pin_fx2_0__slwr
Used module:     \top.pin_fx2_0__slrd
Used module:     \top.pin_fx2_0__sloe
Used module:     \top.pin_i2c_0__sda
Used module:     \top.pin_i2c_0__scl
Used module:     \top.pin_unused_0
Used module:     \top.cd_sync
Used module:     \top.multiplexer
Used module:         \top.multiplexer.U$$0
Used module:             \top.multiplexer.U$$0.ConfigHdlr
Used module:             \top.multiplexer.U$$0.MuxBus
Used module:                 \top.multiplexer.U$$0.MuxBus.sample_clock
Used module:                 \top.multiplexer.U$$0.MuxBus.a_adc
Used module:                 \top.multiplexer.U$$0.MuxBus.y_dac
Used module:                 \top.multiplexer.U$$0.MuxBus.x_dac
Used module:             \top.multiplexer.U$$0.ModeCtrl
Used module:                 \top.multiplexer.U$$0.ModeCtrl.ByteReplace
Used module:                 \top.multiplexer.U$$0.ModeCtrl.DwellAvgr
Used module:                 \top.multiplexer.U$$0.ModeCtrl.YInt
Used module:                 \top.multiplexer.U$$0.ModeCtrl.XInt
Used module:                 \top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl
Used module:                     \top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter
Used module:                     \top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader
Used module:                 \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl
Used module:                     \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen
Used module:                         \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter
Used module:                         \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter
Used module:                     \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader
Used module:                     \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter
Used module:                     \top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter
Used module:                 \top.multiplexer.U$$0.ModeCtrl.BeamController
Used module:     \top.fx2_crossbar
Used module:         \top.fx2_crossbar.out_fifo_0
Used module:             \top.fx2_crossbar.out_fifo_0.skid
Used module:             \top.fx2_crossbar.out_fifo_0.inner
Used module:         \top.fx2_crossbar.in_fifo_0
Used module:             \top.fx2_crossbar.in_fifo_0.inner
Used module:         \top.fx2_crossbar.bus
Used module:     \top.registers
Used module:     \top.i2c_target
Used module:         \top.i2c_target.bus
Used module:             \top.i2c_target.bus.U$$1
Used module:             \top.i2c_target.bus.U$$0
Removed 0 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $group_2 in module top.cd_sync.
Marked 1 switch rules as full_case in process $group_158 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_156 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_120 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_119 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_116 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_115 in module top.multiplexer.U$$0.
Marked 2 switch rules as full_case in process $group_8 in module top.multiplexer.U$$0.ConfigHdlr.
Marked 1 switch rules as full_case in process $group_0 in module top.multiplexer.U$$0.MuxBus.sample_clock.
Marked 1 switch rules as full_case in process $group_30 in module top.multiplexer.U$$0.ModeCtrl.
Marked 1 switch rules as full_case in process $group_29 in module top.multiplexer.U$$0.ModeCtrl.
Marked 1 switch rules as full_case in process $group_28 in module top.multiplexer.U$$0.ModeCtrl.
Marked 1 switch rules as full_case in process $group_26 in module top.multiplexer.U$$0.ModeCtrl.
Marked 1 switch rules as full_case in process $group_18 in module top.multiplexer.U$$0.ModeCtrl.
Marked 1 switch rules as full_case in process $group_1 in module top.multiplexer.U$$0.ModeCtrl.ByteReplace.
Marked 1 switch rules as full_case in process $group_4 in module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.
Marked 1 switch rules as full_case in process $group_1 in module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.
Marked 1 switch rules as full_case in process $group_0 in module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.
Marked 1 switch rules as full_case in process $group_4 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.
Marked 1 switch rules as full_case in process $group_2 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.
Marked 1 switch rules as full_case in process $group_8 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.
Marked 1 switch rules as full_case in process $group_7 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.
Marked 2 switch rules as full_case in process $group_3 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.
Marked 2 switch rules as full_case in process $group_2 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.
Marked 2 switch rules as full_case in process $group_3 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.
Marked 2 switch rules as full_case in process $group_2 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.
Marked 1 switch rules as full_case in process $group_1 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.
Marked 1 switch rules as full_case in process $group_0 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.
Marked 1 switch rules as full_case in process $group_4 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.
Marked 1 switch rules as full_case in process $group_6 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.
Marked 2 switch rules as full_case in process $group_5 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.
Marked 1 switch rules as full_case in process $group_4 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.
Marked 1 switch rules as full_case in process $group_2 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.
Marked 1 switch rules as full_case in process $group_1 in module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.
Marked 1 switch rules as full_case in process $group_8 in module top.multiplexer.U$$0.ModeCtrl.BeamController.
Marked 1 switch rules as full_case in process $group_7 in module top.multiplexer.U$$0.ModeCtrl.BeamController.
Marked 1 switch rules as full_case in process $group_6 in module top.multiplexer.U$$0.ModeCtrl.BeamController.
Marked 2 switch rules as full_case in process $group_5 in module top.multiplexer.U$$0.ModeCtrl.BeamController.
Marked 1 switch rules as full_case in process $group_17 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_16 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_15 in module top.fx2_crossbar.
Marked 7 switch rules as full_case in process $group_14 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_13 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_11 in module top.fx2_crossbar.
Marked 2 switch rules as full_case in process $group_9 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_6 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_4 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_2 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_1 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_5 in module top.fx2_crossbar.out_fifo_0.
Marked 1 switch rules as full_case in process $group_4 in module top.fx2_crossbar.out_fifo_0.
Marked 1 switch rules as full_case in process $group_3 in module top.fx2_crossbar.out_fifo_0.
Marked 2 switch rules as full_case in process $group_5 in module top.registers.
Marked 2 switch rules as full_case in process $group_4 in module top.registers.
Marked 1 switch rules as full_case in process $group_2 in module top.registers.
Marked 1 switch rules as full_case in process $group_11 in module top.i2c_target.
Marked 1 switch rules as full_case in process $group_5 in module top.i2c_target.
Marked 1 switch rules as full_case in process $group_4 in module top.i2c_target.
Marked 3 switch rules as full_case in process $group_0 in module top.i2c_target.
Removed a total of 0 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 268 redundant assignments.
Promoted 255 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$181'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$175'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$170'.
  Set init value: \Q = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Found async reset \R in `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Found async reset \S in `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Found async reset \R in `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Found async reset \S in `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Found async reset \R in `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Found async reset \S in `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Found async reset \R in `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176'.

2.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~698 debug messages>

2.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Creating decoders for process `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:922$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Creating decoders for process `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Creating decoders for process `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Creating decoders for process `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Creating decoders for process `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Creating decoders for process `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Creating decoders for process `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:311$171'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Creating decoders for process `\SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Creating decoders for process `\top.$group_1'.
Creating decoders for process `\top.$group_0'.
Creating decoders for process `\top.cd_sync.$group_4'.
Creating decoders for process `\top.cd_sync.$group_3'.
Creating decoders for process `\top.cd_sync.$group_2'.
     1/1: \timer$next
Creating decoders for process `\top.cd_sync.$group_1'.
     1/1: \ready$next
Creating decoders for process `\top.cd_sync.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.$group_160'.
     1/1: \r_en$82
Creating decoders for process `\top.multiplexer.U$$0.$group_159'.
     1/1: \w_en$67
Creating decoders for process `\top.multiplexer.U$$0.$group_158'.
     1/1: \w_data
Creating decoders for process `\top.multiplexer.U$$0.$group_157'.
Creating decoders for process `\top.multiplexer.U$$0.$group_156'.
     1/1: \ModeCtrl_write_happened
Creating decoders for process `\top.multiplexer.U$$0.$group_155'.
     1/1: \ConfigHdlr_write_happened
Creating decoders for process `\top.multiplexer.U$$0.$group_154'.
Creating decoders for process `\top.multiplexer.U$$0.$group_153'.
Creating decoders for process `\top.multiplexer.U$$0.$group_152'.
Creating decoders for process `\top.multiplexer.U$$0.$group_151'.
     1/1: \ModeCtrl_adc_data
Creating decoders for process `\top.multiplexer.U$$0.$group_150'.
     1/1: \ModeCtrl_adc_data_strobe
Creating decoders for process `\top.multiplexer.U$$0.$group_149'.
     1/1: \pins_o
Creating decoders for process `\top.multiplexer.U$$0.$group_148'.
Creating decoders for process `\top.multiplexer.U$$0.$group_147'.
Creating decoders for process `\top.multiplexer.U$$0.$group_146'.
Creating decoders for process `\top.multiplexer.U$$0.$group_145'.
Creating decoders for process `\top.multiplexer.U$$0.$group_144'.
Creating decoders for process `\top.multiplexer.U$$0.$group_143'.
Creating decoders for process `\top.multiplexer.U$$0.$group_142'.
Creating decoders for process `\top.multiplexer.U$$0.$group_141'.
Creating decoders for process `\top.multiplexer.U$$0.$group_140'.
Creating decoders for process `\top.multiplexer.U$$0.$group_139'.
Creating decoders for process `\top.multiplexer.U$$0.$group_138'.
Creating decoders for process `\top.multiplexer.U$$0.$group_137'.
Creating decoders for process `\top.multiplexer.U$$0.$group_136'.
Creating decoders for process `\top.multiplexer.U$$0.$group_135'.
Creating decoders for process `\top.multiplexer.U$$0.$group_134'.
Creating decoders for process `\top.multiplexer.U$$0.$group_133'.
Creating decoders for process `\top.multiplexer.U$$0.$group_132'.
Creating decoders for process `\top.multiplexer.U$$0.$group_131'.
Creating decoders for process `\top.multiplexer.U$$0.$group_130'.
Creating decoders for process `\top.multiplexer.U$$0.$group_129'.
Creating decoders for process `\top.multiplexer.U$$0.$group_128'.
Creating decoders for process `\top.multiplexer.U$$0.$group_127'.
Creating decoders for process `\top.multiplexer.U$$0.$group_126'.
Creating decoders for process `\top.multiplexer.U$$0.$group_125'.
Creating decoders for process `\top.multiplexer.U$$0.$group_124'.
Creating decoders for process `\top.multiplexer.U$$0.$group_123'.
     1/1: \sdfg$next
Creating decoders for process `\top.multiplexer.U$$0.$group_122'.
     1/1: \asdf$next
Creating decoders for process `\top.multiplexer.U$$0.$group_121'.
     1/1: \eflnp$next
Creating decoders for process `\top.multiplexer.U$$0.$group_120'.
     1/1: \write_strobe
Creating decoders for process `\top.multiplexer.U$$0.$group_119'.
     1/1: \ModeCtrl_mode
Creating decoders for process `\top.multiplexer.U$$0.$group_118'.
Creating decoders for process `\top.multiplexer.U$$0.$group_117'.
Creating decoders for process `\top.multiplexer.U$$0.$group_116'.
     1/1: \config_flag_latched$next
Creating decoders for process `\top.multiplexer.U$$0.$group_115'.
     1/1: \ConfigHdlr_configuration_flag
Creating decoders for process `\top.multiplexer.U$$0.$group_114'.
Creating decoders for process `\top.multiplexer.U$$0.$group_113'.
Creating decoders for process `\top.multiplexer.U$$0.$group_112'.
Creating decoders for process `\top.multiplexer.U$$0.$group_111'.
Creating decoders for process `\top.multiplexer.U$$0.$group_110'.
Creating decoders for process `\top.multiplexer.U$$0.$group_109'.
Creating decoders for process `\top.multiplexer.U$$0.$group_108'.
Creating decoders for process `\top.multiplexer.U$$0.$group_107'.
Creating decoders for process `\top.multiplexer.U$$0.$group_106'.
Creating decoders for process `\top.multiplexer.U$$0.$group_105'.
Creating decoders for process `\top.multiplexer.U$$0.$group_104'.
Creating decoders for process `\top.multiplexer.U$$0.$group_103'.
Creating decoders for process `\top.multiplexer.U$$0.$group_102'.
Creating decoders for process `\top.multiplexer.U$$0.$group_101'.
Creating decoders for process `\top.multiplexer.U$$0.$group_100'.
Creating decoders for process `\top.multiplexer.U$$0.$group_99'.
Creating decoders for process `\top.multiplexer.U$$0.$group_98'.
Creating decoders for process `\top.multiplexer.U$$0.$group_97'.
Creating decoders for process `\top.multiplexer.U$$0.$group_96'.
Creating decoders for process `\top.multiplexer.U$$0.$group_95'.
Creating decoders for process `\top.multiplexer.U$$0.$group_94'.
Creating decoders for process `\top.multiplexer.U$$0.$group_93'.
     1/1: \data_0__D14__o
Creating decoders for process `\top.multiplexer.U$$0.$group_92'.
     1/1: \data_0__D14__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_91'.
     1/1: \data_0__D13__o
Creating decoders for process `\top.multiplexer.U$$0.$group_90'.
     1/1: \data_0__D13__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_89'.
     1/1: \data_0__D12__o
Creating decoders for process `\top.multiplexer.U$$0.$group_88'.
     1/1: \data_0__D12__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_87'.
     1/1: \data_0__D11__o
Creating decoders for process `\top.multiplexer.U$$0.$group_86'.
     1/1: \data_0__D11__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_85'.
     1/1: \data_0__D10__o
Creating decoders for process `\top.multiplexer.U$$0.$group_84'.
     1/1: \data_0__D10__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_83'.
     1/1: \data_0__D9__o
Creating decoders for process `\top.multiplexer.U$$0.$group_82'.
     1/1: \data_0__D9__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_81'.
     1/1: \data_0__D8__o
Creating decoders for process `\top.multiplexer.U$$0.$group_80'.
     1/1: \data_0__D8__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_79'.
     1/1: \data_0__D7__o
Creating decoders for process `\top.multiplexer.U$$0.$group_78'.
     1/1: \data_0__D7__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_77'.
     1/1: \data_0__D6__o
Creating decoders for process `\top.multiplexer.U$$0.$group_76'.
     1/1: \data_0__D6__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_75'.
     1/1: \data_0__D5__o
Creating decoders for process `\top.multiplexer.U$$0.$group_74'.
     1/1: \data_0__D5__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_73'.
     1/1: \data_0__D4__o
Creating decoders for process `\top.multiplexer.U$$0.$group_72'.
     1/1: \data_0__D4__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_71'.
     1/1: \data_0__D3__o
Creating decoders for process `\top.multiplexer.U$$0.$group_70'.
     1/1: \data_0__D3__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_69'.
     1/1: \data_0__D2__o
Creating decoders for process `\top.multiplexer.U$$0.$group_68'.
     1/1: \data_0__D2__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_67'.
     1/1: \data_0__D1__o
Creating decoders for process `\top.multiplexer.U$$0.$group_66'.
     1/1: \data_0__D1__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_65'.
Creating decoders for process `\top.multiplexer.U$$0.$group_64'.
Creating decoders for process `\top.multiplexer.U$$0.$group_63'.
Creating decoders for process `\top.multiplexer.U$$0.$group_62'.
Creating decoders for process `\top.multiplexer.U$$0.$group_61'.
Creating decoders for process `\top.multiplexer.U$$0.$group_60'.
Creating decoders for process `\top.multiplexer.U$$0.$group_59'.
Creating decoders for process `\top.multiplexer.U$$0.$group_58'.
Creating decoders for process `\top.multiplexer.U$$0.$group_57'.
Creating decoders for process `\top.multiplexer.U$$0.$group_56'.
Creating decoders for process `\top.multiplexer.U$$0.$group_55'.
Creating decoders for process `\top.multiplexer.U$$0.$group_54'.
Creating decoders for process `\top.multiplexer.U$$0.$group_53'.
Creating decoders for process `\top.multiplexer.U$$0.$group_52'.
Creating decoders for process `\top.multiplexer.U$$0.$group_51'.
Creating decoders for process `\top.multiplexer.U$$0.$group_50'.
Creating decoders for process `\top.multiplexer.U$$0.$group_49'.
Creating decoders for process `\top.multiplexer.U$$0.$group_48'.
Creating decoders for process `\top.multiplexer.U$$0.$group_47'.
Creating decoders for process `\top.multiplexer.U$$0.$group_46'.
Creating decoders for process `\top.multiplexer.U$$0.$group_45'.
Creating decoders for process `\top.multiplexer.U$$0.$group_44'.
Creating decoders for process `\top.multiplexer.U$$0.$group_43'.
Creating decoders for process `\top.multiplexer.U$$0.$group_42'.
Creating decoders for process `\top.multiplexer.U$$0.$group_41'.
Creating decoders for process `\top.multiplexer.U$$0.$group_40'.
Creating decoders for process `\top.multiplexer.U$$0.$group_39'.
Creating decoders for process `\top.multiplexer.U$$0.$group_38'.
Creating decoders for process `\top.multiplexer.U$$0.$group_37'.
Creating decoders for process `\top.multiplexer.U$$0.$group_36'.
Creating decoders for process `\top.multiplexer.U$$0.$group_35'.
Creating decoders for process `\top.multiplexer.U$$0.$group_34'.
Creating decoders for process `\top.multiplexer.U$$0.$group_33'.
Creating decoders for process `\top.multiplexer.U$$0.$group_32'.
Creating decoders for process `\top.multiplexer.U$$0.$group_31'.
Creating decoders for process `\top.multiplexer.U$$0.$group_30'.
Creating decoders for process `\top.multiplexer.U$$0.$group_29'.
Creating decoders for process `\top.multiplexer.U$$0.$group_28'.
Creating decoders for process `\top.multiplexer.U$$0.$group_27'.
Creating decoders for process `\top.multiplexer.U$$0.$group_26'.
Creating decoders for process `\top.multiplexer.U$$0.$group_25'.
Creating decoders for process `\top.multiplexer.U$$0.$group_24'.
Creating decoders for process `\top.multiplexer.U$$0.$group_23'.
Creating decoders for process `\top.multiplexer.U$$0.$group_22'.
Creating decoders for process `\top.multiplexer.U$$0.$group_21'.
Creating decoders for process `\top.multiplexer.U$$0.$group_20'.
Creating decoders for process `\top.multiplexer.U$$0.$group_19'.
Creating decoders for process `\top.multiplexer.U$$0.$group_18'.
Creating decoders for process `\top.multiplexer.U$$0.$group_17'.
Creating decoders for process `\top.multiplexer.U$$0.$group_16'.
Creating decoders for process `\top.multiplexer.U$$0.$group_15'.
Creating decoders for process `\top.multiplexer.U$$0.$group_14'.
Creating decoders for process `\top.multiplexer.U$$0.$group_13'.
Creating decoders for process `\top.multiplexer.U$$0.$group_12'.
Creating decoders for process `\top.multiplexer.U$$0.$group_11'.
Creating decoders for process `\top.multiplexer.U$$0.$group_10'.
Creating decoders for process `\top.multiplexer.U$$0.$group_9'.
Creating decoders for process `\top.multiplexer.U$$0.$group_8'.
Creating decoders for process `\top.multiplexer.U$$0.$group_7'.
Creating decoders for process `\top.multiplexer.U$$0.$group_6'.
Creating decoders for process `\top.multiplexer.U$$0.$group_5'.
Creating decoders for process `\top.multiplexer.U$$0.$group_4'.
Creating decoders for process `\top.multiplexer.U$$0.$group_3'.
Creating decoders for process `\top.multiplexer.U$$0.$group_2'.
Creating decoders for process `\top.multiplexer.U$$0.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_10'.
     1/1: \l
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_9'.
     1/1: \config_flag_released
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_8'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_7'.
     1/1: \in_fifo_w_data
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_6'.
     1/1: \step_size_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_5'.
     1/1: \eight_bit_output_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_4'.
     1/1: \y_full_frame_resolution_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_3'.
     1/1: \x_full_frame_resolution_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_2'.
     1/1: \roi_registers_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_1'.
     1/1: \config_data_valid
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_0'.
     1/1: \writing_config
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_9'.
     1/1: \a_adc_sampling
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_8'.
     1/1: \y_dac_sampling
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_7'.
     1/1: \x_dac_sampling
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_6'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_5'.
     1/1: \is_done
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_4'.
     1/1: \is_a
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_3'.
     1/1: \is_y
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_2'.
     1/1: \is_x
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.sample_clock.$group_1'.
     1/1: \clock$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.sample_clock.$group_0'.
     1/1: \timer$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.a_adc.$group_3'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.a_adc.$group_2'.
     1/1: \released
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.a_adc.$group_1'.
     1/1: \le
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.a_adc.$group_0'.
     1/1: \oe
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.y_dac.$group_3'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.y_dac.$group_2'.
     1/1: \released
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.y_dac.$group_1'.
     1/1: \le
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.y_dac.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.x_dac.$group_3'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.x_dac.$group_2'.
     1/1: \released
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.x_dac.$group_1'.
     1/1: \le
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.x_dac.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_44'.
     1/1: \VectorModeCtrl_out_fifo_r_data
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_43'.
     1/1: \VectorModeCtrl_write_happened
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_42'.
     1/1: \VectorModeCtrl_adc_data_avgd
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_41'.
     1/1: \beam_controller_end_of_dwell$211
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_40'.
     1/1: \VectorModeCtrl_write_this_point
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_39'.
     1/1: \VectorModeCtrl_load_next_point
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_38'.
     1/1: \VectorModeCtrl_read_happened
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_37'.
     1/1: \RasterModeCtrl_read_happened
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_36'.
     1/1: \RasterModeCtrl_out_fifo_r_data
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_35'.
     1/1: \reader_data_fresh
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_34'.
     1/1: \reader_data_complete
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_33'.
     1/1: \BeamController_next_dwell
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_32'.
     1/1: \RasterModeCtrl_write_this_point
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_31'.
     1/1: \RasterModeCtrl_load_next_point
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_30'.
     1/1: \RasterModeCtrl_write_happened$3
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_29'.
     1/1: \writer_data_complete
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_28'.
     1/1: \writer_data_valid
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_27'.
     1/1: \RasterModeCtrl_write_happened
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_26'.
     1/1: \in_fifo_w_data
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_25'.
     1/1: \RasterModeCtrl_adc_data_avgd
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_24'.
     1/1: \beam_controller_end_of_dwell
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_23'.
     1/1: \YInt_input
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_22'.
     1/1: \XInt_input
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_21'.
     1/1: \RasterModeCtrl_y_full_frame_resolution
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_20'.
     1/1: \RasterModeCtrl_x_full_frame_resolution
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_19'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_18'.
     1/1: \dwelling
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_17'.
     1/1: \write_this_point
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_16'.
     1/1: \data_stale$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_15'.
     1/1: \start_new_average
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_14'.
     1/1: \load_next_point
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_13'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_12'.
     1/1: \BeamController_lock_new_point
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_11'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_10'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_9'.
     1/1: \RasterModeCtrl_xy_scan_gen_increment
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_8'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_7'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_6'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_5'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_4'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_3'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_2'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_4'.
     1/1: \s$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_3'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_2'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_1'.
     1/2: \processed_point_data [15:8]
     2/2: \processed_point_data [7:0]
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_4'.
     1/1: \start_new_average_s$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_3'.
     1/1: \prev_pixel$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_2'.
     1/1: \running_average_s$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_1'.
     1/1: \pixel_in_s$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_0'.
     1/1: \running_average
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.YInt.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.XInt.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_3'.
     1/1: \beam_controller_next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_2'.
     1/1: \VectorReader_data_used
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_0'.
     1/1: \VectorWriter_strobe_in
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_7'.
     1/1: \lf
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_6'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_5'.
     1/1: \f
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_4'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_3'.
     1/1: \data$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_2'.
     1/1: \in_fifo_w_data
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_1'.
     1/1: \data_valid
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_0'.
     1/1: \w
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_5'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_4'.
     1/1: \s
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_3'.
     1/1: \data_fresh
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_2'.
     1/6: \data_c [47:40]
     2/6: \data_c [31:24]
     3/6: \data_c [23:16]
     4/6: \data_c [15:8]
     5/6: \data_c [7:0]
     6/6: \data_c [39:32]
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_1'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_0'.
     1/6: \data$next [47:40]
     2/6: \data$next [39:32]
     3/6: \data$next [31:24]
     4/6: \data$next [23:16]
     5/6: \data$next [15:8]
     6/6: \data$next [7:0]
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_7'.
     1/1: \RasterReader_data_used
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_6'.
     1/3: \beam_controller_next [47:32]
     2/3: \beam_controller_next [31:16]
     3/3: \beam_controller_next [15:0]
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_5'.
     1/1: \inner_xy_scan_gen_increment
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_4'.
     1/1: \RasterWriter_strobe_in
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_3'.
     1/1: \Raster1byteWriter_strobe_in
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_2'.
     1/1: \RasterWriter_data_c
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_1'.
     1/1: \Raster1byteWriter_data_c
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_0'.
     1/1: \XYScanGen_increment
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_14'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_13'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_12'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_11'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_10'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_9'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_8'.
     1/1: \y_counter_upper_limit
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_7'.
     1/1: \x_counter_upper_limit
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_6'.
     1/1: \y_bigger
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_5'.
     1/1: \x_bigger
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_4'.
     1/1: \full_frame_size
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_3'.
     1/1: \y_counter_reset
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_2'.
     1/1: \x_counter_reset
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_1'.
     1/1: \y_counter_increment
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_0'.
     1/1: \x_counter_increment
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_3'.
     1/1: \next_count
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_2'.
     1/1: \current_count$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_3'.
     1/1: \next_count
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_2'.
     1/1: \current_count$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_5'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_4'.
     1/1: \s
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_3'.
     1/1: \data_fresh
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_2'.
     1/2: \data_c [15:8]
     2/2: \data_c [7:0]
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_1'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_0'.
     1/2: \data$next [15:8]
     2/2: \data$next [7:0]
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_7'.
     1/1: \lf
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_6'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_5'.
     1/1: \f
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_4'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_3'.
     1/1: \data$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_2'.
     1/1: \in_fifo_w_data
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_1'.
     1/1: \data_valid
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_0'.
     1/1: \w
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_6'.
     1/1: \lf
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_5'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_4'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_3'.
     1/1: \data$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_2'.
     1/1: \in_fifo_w_data
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_1'.
     1/1: \data_valid
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_0'.
     1/1: \w
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_9'.
     1/1: \true_counter$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_8'.
     1/1: \dwell_time$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_7'.
     1/1: \y_position$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_6'.
     1/1: \x_position$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_5'.
     1/1: \counter$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_4'.
     1/1: \prev_dwelling_changed$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_3'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_2'.
     1/1: \prev_dwelling$next
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_0'.
     1/1: \at_dwell
Creating decoders for process `\top.fx2_crossbar.$group_17'.
     1/1: \bus_slrd
Creating decoders for process `\top.fx2_crossbar.$group_16'.
     1/1: \bus_pend
Creating decoders for process `\top.fx2_crossbar.$group_15'.
     1/1: \bus_slwr
Creating decoders for process `\top.fx2_crossbar.$group_14'.
     1/1: \fsm_state$next
Creating decoders for process `\top.fx2_crossbar.$group_13'.
     1/1: \bus_addr$next
Creating decoders for process `\top.fx2_crossbar.$group_12'.
     1/1: \bus_data__oe$next
Creating decoders for process `\top.fx2_crossbar.$group_11'.
     1/1: \bus_sloe$next
Creating decoders for process `\top.fx2_crossbar.$group_9'.
     1/2: \w_en$20
     2/2: \out_fifo_0_w_en
Creating decoders for process `\top.fx2_crossbar.$group_8'.
     1/1: \bus_nrdy_i
Creating decoders for process `\top.fx2_crossbar.$group_6'.
     1/2: \flushed
     2/2: \in_fifo_0_flushed
Creating decoders for process `\top.fx2_crossbar.$group_4'.
     1/2: \r_en$15
     2/2: \in_fifo_0_r_en
Creating decoders for process `\top.fx2_crossbar.$group_2'.
     1/2: \w_data$14
     2/2: \out_fifo_0_w_data
Creating decoders for process `\top.fx2_crossbar.$group_1'.
     1/1: \bus_data__o
Creating decoders for process `\top.fx2_crossbar.$group_0'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_5'.
     1/1: \skid_w_en
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_4'.
     1/1: \skid_w_data
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_3'.
     1/1: \w_rdy$9
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_2'.
     1/1: \skid_r_en
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_1'.
     1/1: \inner_w_en
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_0'.
     1/1: \inner_w_data
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_11'.
     1/1: \level$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_10'.
     1/1: \consume$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_9'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_8'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_7'.
     1/1: \produce$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_6'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_5'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_4'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_3'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_2'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_1'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_0'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_14'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_13'.
     1/1: \r_rdy$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_12'.
     1/1: \inner_level$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_11'.
     1/1: \consume$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_10'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_9'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_8'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_7'.
     1/1: \produce$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_6'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_5'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_4'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_3'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_2'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_1'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_0'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.$group_3'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.$group_2'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.$group_1'.
     1/1: \_pending$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.$group_0'.
     1/1: \queued$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_14'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_13'.
     1/1: \r_rdy$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_12'.
     1/1: \inner_level$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_11'.
     1/1: \consume$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_10'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_9'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_8'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_7'.
     1/1: \produce$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_6'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_5'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_4'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_3'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_2'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_1'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_0'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_23'.
     1/1: \nrdy_o$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_22'.
     1/1: \nrdy_r$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_21'.
     1/1: \slrd_p$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_20'.
     1/1: \slrd_r$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_19'.
     1/1: \addr_p$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_18'.
     1/1: \addr_r$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_17'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_16'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_15'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_14'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_13'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_12'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_11'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_10'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_9'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_8'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_7'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_6'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_5'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_4'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_3'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_2'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_1'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_0'.
Creating decoders for process `\top.registers.$group_5'.
     1/28: $45
     2/28: $signal$15$next
     3/28: $signal$14$next
     4/28: $signal$31$next
     5/28: $signal$28$next
     6/28: $signal$12$next
     7/28: $signal$1$next
     8/28: $signal$next
     9/28: $44
    10/28: $43
    11/28: $signal$13$next
    12/28: $42
    13/28: $41
    14/28: $40
    15/28: $signal$11$next
    16/28: $signal$24$next
    17/28: $signal$10$next
    18/28: $signal$9$next
    19/28: $signal$8$next
    20/28: $signal$23$next
    21/28: $signal$7$next
    22/28: $signal$6$next
    23/28: $signal$5$next
    24/28: $signal$4$next
    25/28: $signal$3$next
    26/28: $signal$2$next
    27/28: $39
    28/28: $signal$16$next
Creating decoders for process `\top.registers.$group_4'.
     1/1: \reg_data$next
Creating decoders for process `\top.registers.$group_3'.
     1/1: \reg_addr$next
Creating decoders for process `\top.registers.$group_2'.
     1/1: \ack_o
Creating decoders for process `\top.registers.$group_1'.
     1/1: \latch_addr$next
Creating decoders for process `\top.registers.$group_0'.
Creating decoders for process `\top.i2c_target.$group_11'.
     1/1: \bus_scl_o$next
Creating decoders for process `\top.i2c_target.$group_10'.
     1/1: \write$next
Creating decoders for process `\top.i2c_target.$group_9'.
     1/1: \data_i$next
Creating decoders for process `\top.i2c_target.$group_8'.
     1/1: \read
Creating decoders for process `\top.i2c_target.$group_7'.
     1/1: \shreg_o$next
Creating decoders for process `\top.i2c_target.$group_6'.
     1/1: \restart
Creating decoders for process `\top.i2c_target.$group_5'.
     1/1: \stop
Creating decoders for process `\top.i2c_target.$group_4'.
     1/1: \bus_sda_o$next
Creating decoders for process `\top.i2c_target.$group_3'.
     1/1: \start
Creating decoders for process `\top.i2c_target.$group_2'.
     1/1: \shreg_i$next
Creating decoders for process `\top.i2c_target.$group_1'.
     1/1: \bitno$next
Creating decoders for process `\top.i2c_target.$group_0'.
     1/1: \fsm_state$next
Creating decoders for process `\top.i2c_target.bus.$group_9'.
     1/1: \sda_r$next
Creating decoders for process `\top.i2c_target.bus.$group_8'.
     1/1: \scl_r$next
Creating decoders for process `\top.i2c_target.bus.$group_7'.
Creating decoders for process `\top.i2c_target.bus.$group_6'.
Creating decoders for process `\top.i2c_target.bus.$group_5'.
Creating decoders for process `\top.i2c_target.bus.$group_4'.
Creating decoders for process `\top.i2c_target.bus.$group_3'.
Creating decoders for process `\top.i2c_target.bus.$group_2'.
Creating decoders for process `\top.i2c_target.bus.$group_1'.
Creating decoders for process `\top.i2c_target.bus.$group_0'.
Creating decoders for process `\top.i2c_target.bus.U$$1.$group_2'.
Creating decoders for process `\top.i2c_target.bus.U$$1.$group_1'.
Creating decoders for process `\top.i2c_target.bus.U$$1.$group_0'.
Creating decoders for process `\top.i2c_target.bus.U$$0.$group_2'.
Creating decoders for process `\top.i2c_target.bus.U$$0.$group_1'.
Creating decoders for process `\top.i2c_target.bus.U$$0.$group_0'.

2.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
  created $adff cell `$procdff$2904' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
  created $dff cell `$procdff$2905' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
  created $adff cell `$procdff$2906' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
  created $dff cell `$procdff$2907' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
  created $adff cell `$procdff$2908' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
  created $dff cell `$procdff$2909' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
  created $adff cell `$procdff$2910' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211'.
  created $dff cell `$procdff$2911' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:922$209'.
  created $dff cell `$procdff$2912' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:882$207'.
  created $dff cell `$procdff$2913' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
  created $adff cell `$procdff$2914' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196'.
  created $dff cell `$procdff$2915' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
  created $adff cell `$procdff$2916' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185'.
  created $dff cell `$procdff$2917' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182'.
  created $adff cell `$procdff$2918' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179'.
  created $dff cell `$procdff$2919' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176'.
  created $adff cell `$procdff$2920' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173'.
  created $dff cell `$procdff$2921' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:311$171'.
  created $dff cell `$procdff$2922' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:271$169'.
  created $dff cell `$procdff$2923' with positive edge clock.

2.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Removing empty process `SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Removing empty process `SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Removing empty process `SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Removing empty process `SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Removing empty process `SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Removing empty process `SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Removing empty process `SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176'.
Removing empty process `SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Removing empty process `SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Removing empty process `top.$group_1'.
Removing empty process `top.$group_0'.
Removing empty process `top.cd_sync.$group_4'.
Removing empty process `top.cd_sync.$group_3'.
Found and cleaned up 1 empty switch in `\top.cd_sync.$group_2'.
Removing empty process `top.cd_sync.$group_2'.
Found and cleaned up 1 empty switch in `\top.cd_sync.$group_1'.
Removing empty process `top.cd_sync.$group_1'.
Removing empty process `top.cd_sync.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_160'.
Removing empty process `top.multiplexer.U$$0.$group_160'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_159'.
Removing empty process `top.multiplexer.U$$0.$group_159'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_158'.
Removing empty process `top.multiplexer.U$$0.$group_158'.
Removing empty process `top.multiplexer.U$$0.$group_157'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_156'.
Removing empty process `top.multiplexer.U$$0.$group_156'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_155'.
Removing empty process `top.multiplexer.U$$0.$group_155'.
Removing empty process `top.multiplexer.U$$0.$group_154'.
Removing empty process `top.multiplexer.U$$0.$group_153'.
Removing empty process `top.multiplexer.U$$0.$group_152'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_151'.
Removing empty process `top.multiplexer.U$$0.$group_151'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_150'.
Removing empty process `top.multiplexer.U$$0.$group_150'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_149'.
Removing empty process `top.multiplexer.U$$0.$group_149'.
Removing empty process `top.multiplexer.U$$0.$group_148'.
Removing empty process `top.multiplexer.U$$0.$group_147'.
Removing empty process `top.multiplexer.U$$0.$group_146'.
Removing empty process `top.multiplexer.U$$0.$group_145'.
Removing empty process `top.multiplexer.U$$0.$group_144'.
Removing empty process `top.multiplexer.U$$0.$group_143'.
Removing empty process `top.multiplexer.U$$0.$group_142'.
Removing empty process `top.multiplexer.U$$0.$group_141'.
Removing empty process `top.multiplexer.U$$0.$group_140'.
Removing empty process `top.multiplexer.U$$0.$group_139'.
Removing empty process `top.multiplexer.U$$0.$group_138'.
Removing empty process `top.multiplexer.U$$0.$group_137'.
Removing empty process `top.multiplexer.U$$0.$group_136'.
Removing empty process `top.multiplexer.U$$0.$group_135'.
Removing empty process `top.multiplexer.U$$0.$group_134'.
Removing empty process `top.multiplexer.U$$0.$group_133'.
Removing empty process `top.multiplexer.U$$0.$group_132'.
Removing empty process `top.multiplexer.U$$0.$group_131'.
Removing empty process `top.multiplexer.U$$0.$group_130'.
Removing empty process `top.multiplexer.U$$0.$group_129'.
Removing empty process `top.multiplexer.U$$0.$group_128'.
Removing empty process `top.multiplexer.U$$0.$group_127'.
Removing empty process `top.multiplexer.U$$0.$group_126'.
Removing empty process `top.multiplexer.U$$0.$group_125'.
Removing empty process `top.multiplexer.U$$0.$group_124'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_123'.
Removing empty process `top.multiplexer.U$$0.$group_123'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_122'.
Removing empty process `top.multiplexer.U$$0.$group_122'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_121'.
Removing empty process `top.multiplexer.U$$0.$group_121'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_120'.
Removing empty process `top.multiplexer.U$$0.$group_120'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_119'.
Removing empty process `top.multiplexer.U$$0.$group_119'.
Removing empty process `top.multiplexer.U$$0.$group_118'.
Removing empty process `top.multiplexer.U$$0.$group_117'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.$group_116'.
Removing empty process `top.multiplexer.U$$0.$group_116'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_115'.
Removing empty process `top.multiplexer.U$$0.$group_115'.
Removing empty process `top.multiplexer.U$$0.$group_114'.
Removing empty process `top.multiplexer.U$$0.$group_113'.
Removing empty process `top.multiplexer.U$$0.$group_112'.
Removing empty process `top.multiplexer.U$$0.$group_111'.
Removing empty process `top.multiplexer.U$$0.$group_110'.
Removing empty process `top.multiplexer.U$$0.$group_109'.
Removing empty process `top.multiplexer.U$$0.$group_108'.
Removing empty process `top.multiplexer.U$$0.$group_107'.
Removing empty process `top.multiplexer.U$$0.$group_106'.
Removing empty process `top.multiplexer.U$$0.$group_105'.
Removing empty process `top.multiplexer.U$$0.$group_104'.
Removing empty process `top.multiplexer.U$$0.$group_103'.
Removing empty process `top.multiplexer.U$$0.$group_102'.
Removing empty process `top.multiplexer.U$$0.$group_101'.
Removing empty process `top.multiplexer.U$$0.$group_100'.
Removing empty process `top.multiplexer.U$$0.$group_99'.
Removing empty process `top.multiplexer.U$$0.$group_98'.
Removing empty process `top.multiplexer.U$$0.$group_97'.
Removing empty process `top.multiplexer.U$$0.$group_96'.
Removing empty process `top.multiplexer.U$$0.$group_95'.
Removing empty process `top.multiplexer.U$$0.$group_94'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_93'.
Removing empty process `top.multiplexer.U$$0.$group_93'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_92'.
Removing empty process `top.multiplexer.U$$0.$group_92'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_91'.
Removing empty process `top.multiplexer.U$$0.$group_91'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_90'.
Removing empty process `top.multiplexer.U$$0.$group_90'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_89'.
Removing empty process `top.multiplexer.U$$0.$group_89'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_88'.
Removing empty process `top.multiplexer.U$$0.$group_88'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_87'.
Removing empty process `top.multiplexer.U$$0.$group_87'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_86'.
Removing empty process `top.multiplexer.U$$0.$group_86'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_85'.
Removing empty process `top.multiplexer.U$$0.$group_85'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_84'.
Removing empty process `top.multiplexer.U$$0.$group_84'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_83'.
Removing empty process `top.multiplexer.U$$0.$group_83'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_82'.
Removing empty process `top.multiplexer.U$$0.$group_82'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_81'.
Removing empty process `top.multiplexer.U$$0.$group_81'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_80'.
Removing empty process `top.multiplexer.U$$0.$group_80'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_79'.
Removing empty process `top.multiplexer.U$$0.$group_79'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_78'.
Removing empty process `top.multiplexer.U$$0.$group_78'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_77'.
Removing empty process `top.multiplexer.U$$0.$group_77'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_76'.
Removing empty process `top.multiplexer.U$$0.$group_76'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_75'.
Removing empty process `top.multiplexer.U$$0.$group_75'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_74'.
Removing empty process `top.multiplexer.U$$0.$group_74'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_73'.
Removing empty process `top.multiplexer.U$$0.$group_73'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_72'.
Removing empty process `top.multiplexer.U$$0.$group_72'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_71'.
Removing empty process `top.multiplexer.U$$0.$group_71'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_70'.
Removing empty process `top.multiplexer.U$$0.$group_70'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_69'.
Removing empty process `top.multiplexer.U$$0.$group_69'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_68'.
Removing empty process `top.multiplexer.U$$0.$group_68'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_67'.
Removing empty process `top.multiplexer.U$$0.$group_67'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_66'.
Removing empty process `top.multiplexer.U$$0.$group_66'.
Removing empty process `top.multiplexer.U$$0.$group_65'.
Removing empty process `top.multiplexer.U$$0.$group_64'.
Removing empty process `top.multiplexer.U$$0.$group_63'.
Removing empty process `top.multiplexer.U$$0.$group_62'.
Removing empty process `top.multiplexer.U$$0.$group_61'.
Removing empty process `top.multiplexer.U$$0.$group_60'.
Removing empty process `top.multiplexer.U$$0.$group_59'.
Removing empty process `top.multiplexer.U$$0.$group_58'.
Removing empty process `top.multiplexer.U$$0.$group_57'.
Removing empty process `top.multiplexer.U$$0.$group_56'.
Removing empty process `top.multiplexer.U$$0.$group_55'.
Removing empty process `top.multiplexer.U$$0.$group_54'.
Removing empty process `top.multiplexer.U$$0.$group_53'.
Removing empty process `top.multiplexer.U$$0.$group_52'.
Removing empty process `top.multiplexer.U$$0.$group_51'.
Removing empty process `top.multiplexer.U$$0.$group_50'.
Removing empty process `top.multiplexer.U$$0.$group_49'.
Removing empty process `top.multiplexer.U$$0.$group_48'.
Removing empty process `top.multiplexer.U$$0.$group_47'.
Removing empty process `top.multiplexer.U$$0.$group_46'.
Removing empty process `top.multiplexer.U$$0.$group_45'.
Removing empty process `top.multiplexer.U$$0.$group_44'.
Removing empty process `top.multiplexer.U$$0.$group_43'.
Removing empty process `top.multiplexer.U$$0.$group_42'.
Removing empty process `top.multiplexer.U$$0.$group_41'.
Removing empty process `top.multiplexer.U$$0.$group_40'.
Removing empty process `top.multiplexer.U$$0.$group_39'.
Removing empty process `top.multiplexer.U$$0.$group_38'.
Removing empty process `top.multiplexer.U$$0.$group_37'.
Removing empty process `top.multiplexer.U$$0.$group_36'.
Removing empty process `top.multiplexer.U$$0.$group_35'.
Removing empty process `top.multiplexer.U$$0.$group_34'.
Removing empty process `top.multiplexer.U$$0.$group_33'.
Removing empty process `top.multiplexer.U$$0.$group_32'.
Removing empty process `top.multiplexer.U$$0.$group_31'.
Removing empty process `top.multiplexer.U$$0.$group_30'.
Removing empty process `top.multiplexer.U$$0.$group_29'.
Removing empty process `top.multiplexer.U$$0.$group_28'.
Removing empty process `top.multiplexer.U$$0.$group_27'.
Removing empty process `top.multiplexer.U$$0.$group_26'.
Removing empty process `top.multiplexer.U$$0.$group_25'.
Removing empty process `top.multiplexer.U$$0.$group_24'.
Removing empty process `top.multiplexer.U$$0.$group_23'.
Removing empty process `top.multiplexer.U$$0.$group_22'.
Removing empty process `top.multiplexer.U$$0.$group_21'.
Removing empty process `top.multiplexer.U$$0.$group_20'.
Removing empty process `top.multiplexer.U$$0.$group_19'.
Removing empty process `top.multiplexer.U$$0.$group_18'.
Removing empty process `top.multiplexer.U$$0.$group_17'.
Removing empty process `top.multiplexer.U$$0.$group_16'.
Removing empty process `top.multiplexer.U$$0.$group_15'.
Removing empty process `top.multiplexer.U$$0.$group_14'.
Removing empty process `top.multiplexer.U$$0.$group_13'.
Removing empty process `top.multiplexer.U$$0.$group_12'.
Removing empty process `top.multiplexer.U$$0.$group_11'.
Removing empty process `top.multiplexer.U$$0.$group_10'.
Removing empty process `top.multiplexer.U$$0.$group_9'.
Removing empty process `top.multiplexer.U$$0.$group_8'.
Removing empty process `top.multiplexer.U$$0.$group_7'.
Removing empty process `top.multiplexer.U$$0.$group_6'.
Removing empty process `top.multiplexer.U$$0.$group_5'.
Removing empty process `top.multiplexer.U$$0.$group_4'.
Removing empty process `top.multiplexer.U$$0.$group_3'.
Removing empty process `top.multiplexer.U$$0.$group_2'.
Removing empty process `top.multiplexer.U$$0.$group_1'.
Removing empty process `top.multiplexer.U$$0.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ConfigHdlr.$group_10'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_10'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_9'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_9'.
Found and cleaned up 25 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_8'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_8'.
Found and cleaned up 20 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_7'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_7'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_6'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_6'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_5'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_5'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_4'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_4'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_3'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_3'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_2'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_2'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ConfigHdlr.$group_1'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ConfigHdlr.$group_0'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_0'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.$group_9'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_9'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.$group_8'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_8'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.$group_7'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_7'.
Found and cleaned up 9 empty switches in `\top.multiplexer.U$$0.MuxBus.$group_6'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_6'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.$group_5'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_5'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.$group_4'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_4'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.$group_3'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_0'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.MuxBus.sample_clock.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.sample_clock.$group_1'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.MuxBus.sample_clock.$group_0'.
Removing empty process `top.multiplexer.U$$0.MuxBus.sample_clock.$group_0'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.MuxBus.a_adc.$group_3'.
Removing empty process `top.multiplexer.U$$0.MuxBus.a_adc.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.a_adc.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.a_adc.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.a_adc.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.a_adc.$group_1'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.a_adc.$group_0'.
Removing empty process `top.multiplexer.U$$0.MuxBus.a_adc.$group_0'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.MuxBus.y_dac.$group_3'.
Removing empty process `top.multiplexer.U$$0.MuxBus.y_dac.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.y_dac.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.y_dac.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.y_dac.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.y_dac.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.y_dac.$group_0'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.MuxBus.x_dac.$group_3'.
Removing empty process `top.multiplexer.U$$0.MuxBus.x_dac.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.x_dac.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.x_dac.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.x_dac.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.x_dac.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.x_dac.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_44'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_44'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_43'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_43'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_42'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_42'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_41'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_41'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_40'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_40'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_39'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_39'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_38'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_38'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_37'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_37'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_36'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_36'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_35'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_35'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_34'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_34'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_33'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_33'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_32'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_32'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_31'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_31'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_30'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_30'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_29'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_29'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_28'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_28'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_27'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_27'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_26'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_26'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_25'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_25'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_24'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_24'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_23'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_23'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_22'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_22'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_21'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_21'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_20'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_20'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_19'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_19'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_18'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_18'.
Found and cleaned up 6 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_17'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_17'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_16'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_16'.
Found and cleaned up 6 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_15'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_15'.
Found and cleaned up 6 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_14'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_14'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_13'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.$group_12'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_12'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_11'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_10'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.$group_9'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_9'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_8'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_7'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_6'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.$group_0'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_2'.
Found and cleaned up 12 empty switches in `\top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.ByteReplace.$group_0'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_4'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_3'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_2'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_1'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.DwellAvgr.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.YInt.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.XInt.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_7'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_7'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_6'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_6'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_5'.
Found and cleaned up 7 empty switches in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_4'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_5'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_4'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_2'.
Found and cleaned up 11 empty switches in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_1'.
Found and cleaned up 11 empty switches in `\top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_7'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_7'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_6'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_6'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_5'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_4'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_2'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_14'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_13'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_12'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_11'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_10'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_9'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_8'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_8'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_7'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_7'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_6'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_6'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_5'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_4'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_2'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.$group_0'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_3'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.$group_0'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_3'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_5'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_4'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_2'.
Found and cleaned up 7 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_1'.
Found and cleaned up 7 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_7'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_7'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_6'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_6'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_5'.
Found and cleaned up 7 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_4'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_6'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_6'.
Found and cleaned up 6 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_5'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_4'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_3'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_1'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.$group_0'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_9'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_9'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_8'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_8'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_7'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_7'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_6'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_6'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_5'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_5'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_4'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_2'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ModeCtrl.BeamController.$group_0'.
Removing empty process `top.multiplexer.U$$0.ModeCtrl.BeamController.$group_0'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.$group_17'.
Removing empty process `top.fx2_crossbar.$group_17'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.$group_16'.
Removing empty process `top.fx2_crossbar.$group_16'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.$group_15'.
Removing empty process `top.fx2_crossbar.$group_15'.
Found and cleaned up 10 empty switches in `\top.fx2_crossbar.$group_14'.
Removing empty process `top.fx2_crossbar.$group_14'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.$group_13'.
Removing empty process `top.fx2_crossbar.$group_13'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.$group_12'.
Removing empty process `top.fx2_crossbar.$group_12'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.$group_11'.
Removing empty process `top.fx2_crossbar.$group_11'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.$group_9'.
Removing empty process `top.fx2_crossbar.$group_9'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.$group_8'.
Removing empty process `top.fx2_crossbar.$group_8'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.$group_6'.
Removing empty process `top.fx2_crossbar.$group_6'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.$group_4'.
Removing empty process `top.fx2_crossbar.$group_4'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.$group_2'.
Removing empty process `top.fx2_crossbar.$group_2'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.$group_1'.
Removing empty process `top.fx2_crossbar.$group_1'.
Removing empty process `top.fx2_crossbar.$group_0'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.out_fifo_0.$group_5'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_5'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.out_fifo_0.$group_4'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_4'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.out_fifo_0.$group_3'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_3'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.out_fifo_0.$group_2'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_2'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.out_fifo_0.$group_1'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_1'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.out_fifo_0.$group_0'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_0'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.out_fifo_0.skid.$group_11'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_11'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.skid.$group_10'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_10'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_9'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_8'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.skid.$group_7'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_7'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_6'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_5'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_4'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_3'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_2'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_1'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_0'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_14'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.inner.$group_13'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_13'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.out_fifo_0.inner.$group_12'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_12'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.inner.$group_11'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_11'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_10'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_9'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_8'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.inner.$group_7'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_7'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_6'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_5'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_4'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_3'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_2'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_1'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_0'.
Removing empty process `top.fx2_crossbar.in_fifo_0.$group_3'.
Removing empty process `top.fx2_crossbar.in_fifo_0.$group_2'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.in_fifo_0.$group_1'.
Removing empty process `top.fx2_crossbar.in_fifo_0.$group_1'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.in_fifo_0.$group_0'.
Removing empty process `top.fx2_crossbar.in_fifo_0.$group_0'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_14'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.in_fifo_0.inner.$group_13'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_13'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.in_fifo_0.inner.$group_12'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_12'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.in_fifo_0.inner.$group_11'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_11'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_10'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_9'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_8'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.in_fifo_0.inner.$group_7'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_7'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_6'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_5'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_4'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_3'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_2'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_1'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_0'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_23'.
Removing empty process `top.fx2_crossbar.bus.$group_23'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_22'.
Removing empty process `top.fx2_crossbar.bus.$group_22'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_21'.
Removing empty process `top.fx2_crossbar.bus.$group_21'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_20'.
Removing empty process `top.fx2_crossbar.bus.$group_20'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_19'.
Removing empty process `top.fx2_crossbar.bus.$group_19'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_18'.
Removing empty process `top.fx2_crossbar.bus.$group_18'.
Removing empty process `top.fx2_crossbar.bus.$group_17'.
Removing empty process `top.fx2_crossbar.bus.$group_16'.
Removing empty process `top.fx2_crossbar.bus.$group_15'.
Removing empty process `top.fx2_crossbar.bus.$group_14'.
Removing empty process `top.fx2_crossbar.bus.$group_13'.
Removing empty process `top.fx2_crossbar.bus.$group_12'.
Removing empty process `top.fx2_crossbar.bus.$group_11'.
Removing empty process `top.fx2_crossbar.bus.$group_10'.
Removing empty process `top.fx2_crossbar.bus.$group_9'.
Removing empty process `top.fx2_crossbar.bus.$group_8'.
Removing empty process `top.fx2_crossbar.bus.$group_7'.
Removing empty process `top.fx2_crossbar.bus.$group_6'.
Removing empty process `top.fx2_crossbar.bus.$group_5'.
Removing empty process `top.fx2_crossbar.bus.$group_4'.
Removing empty process `top.fx2_crossbar.bus.$group_3'.
Removing empty process `top.fx2_crossbar.bus.$group_2'.
Removing empty process `top.fx2_crossbar.bus.$group_1'.
Removing empty process `top.fx2_crossbar.bus.$group_0'.
Found and cleaned up 4 empty switches in `\top.registers.$group_5'.
Removing empty process `top.registers.$group_5'.
Found and cleaned up 5 empty switches in `\top.registers.$group_4'.
Removing empty process `top.registers.$group_4'.
Found and cleaned up 3 empty switches in `\top.registers.$group_3'.
Removing empty process `top.registers.$group_3'.
Found and cleaned up 3 empty switches in `\top.registers.$group_2'.
Removing empty process `top.registers.$group_2'.
Found and cleaned up 3 empty switches in `\top.registers.$group_1'.
Removing empty process `top.registers.$group_1'.
Removing empty process `top.registers.$group_0'.
Found and cleaned up 5 empty switches in `\top.i2c_target.$group_11'.
Removing empty process `top.i2c_target.$group_11'.
Found and cleaned up 4 empty switches in `\top.i2c_target.$group_10'.
Removing empty process `top.i2c_target.$group_10'.
Found and cleaned up 4 empty switches in `\top.i2c_target.$group_9'.
Removing empty process `top.i2c_target.$group_9'.
Found and cleaned up 5 empty switches in `\top.i2c_target.$group_8'.
Removing empty process `top.i2c_target.$group_8'.
Found and cleaned up 8 empty switches in `\top.i2c_target.$group_7'.
Removing empty process `top.i2c_target.$group_7'.
Found and cleaned up 6 empty switches in `\top.i2c_target.$group_6'.
Removing empty process `top.i2c_target.$group_6'.
Found and cleaned up 8 empty switches in `\top.i2c_target.$group_5'.
Removing empty process `top.i2c_target.$group_5'.
Found and cleaned up 13 empty switches in `\top.i2c_target.$group_4'.
Removing empty process `top.i2c_target.$group_4'.
Found and cleaned up 4 empty switches in `\top.i2c_target.$group_3'.
Removing empty process `top.i2c_target.$group_3'.
Found and cleaned up 4 empty switches in `\top.i2c_target.$group_2'.
Removing empty process `top.i2c_target.$group_2'.
Found and cleaned up 6 empty switches in `\top.i2c_target.$group_1'.
Removing empty process `top.i2c_target.$group_1'.
Found and cleaned up 18 empty switches in `\top.i2c_target.$group_0'.
Removing empty process `top.i2c_target.$group_0'.
Found and cleaned up 1 empty switch in `\top.i2c_target.bus.$group_9'.
Removing empty process `top.i2c_target.bus.$group_9'.
Found and cleaned up 1 empty switch in `\top.i2c_target.bus.$group_8'.
Removing empty process `top.i2c_target.bus.$group_8'.
Removing empty process `top.i2c_target.bus.$group_7'.
Removing empty process `top.i2c_target.bus.$group_6'.
Removing empty process `top.i2c_target.bus.$group_5'.
Removing empty process `top.i2c_target.bus.$group_4'.
Removing empty process `top.i2c_target.bus.$group_3'.
Removing empty process `top.i2c_target.bus.$group_2'.
Removing empty process `top.i2c_target.bus.$group_1'.
Removing empty process `top.i2c_target.bus.$group_0'.
Removing empty process `top.i2c_target.bus.U$$1.$group_2'.
Removing empty process `top.i2c_target.bus.U$$1.$group_1'.
Removing empty process `top.i2c_target.bus.U$$1.$group_0'.
Removing empty process `top.i2c_target.bus.U$$0.$group_2'.
Removing empty process `top.i2c_target.bus.U$$0.$group_1'.
Removing empty process `top.i2c_target.bus.U$$0.$group_0'.
Cleaned up 699 empty switches.

2.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
Optimizing module top.pin_clk_if_0.
Optimizing module top.pin_data_0__D14.
Optimizing module top.pin_data_0__D13.
Optimizing module top.pin_data_0__D12.
Optimizing module top.pin_data_0__D11.
Optimizing module top.pin_data_0__D10.
Optimizing module top.pin_data_0__D9.
Optimizing module top.pin_data_0__D8.
Optimizing module top.pin_data_0__D7.
Optimizing module top.pin_data_0__D6.
Optimizing module top.pin_data_0__D5.
Optimizing module top.pin_data_0__D4.
Optimizing module top.pin_data_0__D3.
Optimizing module top.pin_data_0__D2.
Optimizing module top.pin_data_0__D1.
Optimizing module top.pin_power_ok_0.
Optimizing module top.pin_control_0__D24.
Optimizing module top.pin_control_0__D23.
Optimizing module top.pin_control_0__D22.
Optimizing module top.pin_control_0__D21.
Optimizing module top.pin_control_0__D20.
Optimizing module top.pin_control_0__D19.
Optimizing module top.pin_control_0__D18.
Optimizing module top.pin_control_0__D17.
Optimizing module top.pin_port_b_6__oe.
Optimizing module top.pin_port_b_6__io.
Optimizing module top.pin_port_b_7__oe.
Optimizing module top.pin_port_b_7__io.
Optimizing module top.pin_port_b_5__oe.
Optimizing module top.pin_port_b_5__io.
Optimizing module top.pin_port_b_4__oe.
Optimizing module top.pin_port_b_4__io.
Optimizing module top.pin_port_b_3__oe.
Optimizing module top.pin_port_b_3__io.
Optimizing module top.pin_port_b_2__oe.
Optimizing module top.pin_port_b_2__io.
Optimizing module top.pin_port_b_1__oe.
Optimizing module top.pin_port_b_1__io.
Optimizing module top.pin_port_b_0__oe.
Optimizing module top.pin_port_b_0__io.
Optimizing module top.pin_port_a_7__oe.
Optimizing module top.pin_port_a_7__io.
Optimizing module top.pin_port_a_6__oe.
Optimizing module top.pin_port_a_6__io.
Optimizing module top.pin_port_a_5__oe.
Optimizing module top.pin_port_a_5__io.
Optimizing module top.pin_port_a_4__oe.
Optimizing module top.pin_port_a_4__io.
Optimizing module top.pin_port_a_3__oe.
Optimizing module top.pin_port_a_3__io.
Optimizing module top.pin_port_a_2__oe.
Optimizing module top.pin_port_a_2__io.
Optimizing module top.pin_port_a_1__oe.
Optimizing module top.pin_port_a_1__io.
Optimizing module top.pin_port_a_0__oe.
Optimizing module top.pin_port_a_0__io.
Optimizing module top.pin_fx2_0__fd.
Optimizing module top.pin_fx2_0__flag.
Optimizing module top.pin_fx2_0__fifoadr.
Optimizing module top.pin_fx2_0__pktend.
Optimizing module top.pin_fx2_0__slwr.
Optimizing module top.pin_fx2_0__slrd.
Optimizing module top.pin_fx2_0__sloe.
Optimizing module top.pin_i2c_0__sda.
Optimizing module top.pin_i2c_0__scl.
Optimizing module top.pin_unused_0.
Optimizing module top.cd_sync.
Optimizing module top.multiplexer.
Optimizing module top.multiplexer.U$$0.
<suppressed ~14 debug messages>
Optimizing module top.multiplexer.U$$0.ConfigHdlr.
<suppressed ~11 debug messages>
Optimizing module top.multiplexer.U$$0.MuxBus.
<suppressed ~4 debug messages>
Optimizing module top.multiplexer.U$$0.MuxBus.sample_clock.
Optimizing module top.multiplexer.U$$0.MuxBus.a_adc.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.MuxBus.y_dac.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.MuxBus.x_dac.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.
<suppressed ~12 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.ByteReplace.
<suppressed ~14 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.DwellAvgr.
<suppressed ~4 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.YInt.
Optimizing module top.multiplexer.U$$0.ModeCtrl.XInt.
Optimizing module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.
Optimizing module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.
<suppressed ~5 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.
Optimizing module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.
Optimizing module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.
Optimizing module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.
<suppressed ~5 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.
<suppressed ~8 debug messages>
Optimizing module top.multiplexer.U$$0.ModeCtrl.BeamController.
<suppressed ~2 debug messages>
Optimizing module top.fx2_crossbar.
<suppressed ~50 debug messages>
Optimizing module top.fx2_crossbar.out_fifo_0.
Optimizing module top.fx2_crossbar.out_fifo_0.skid.
<suppressed ~1 debug messages>
Optimizing module top.fx2_crossbar.out_fifo_0.inner.
<suppressed ~1 debug messages>
Optimizing module top.fx2_crossbar.in_fifo_0.
<suppressed ~1 debug messages>
Optimizing module top.fx2_crossbar.in_fifo_0.inner.
<suppressed ~1 debug messages>
Optimizing module top.fx2_crossbar.bus.
Optimizing module top.registers.
<suppressed ~5 debug messages>
Optimizing module top.i2c_target.
<suppressed ~19 debug messages>
Optimizing module top.i2c_target.bus.
Optimizing module top.i2c_target.bus.U$$1.
Optimizing module top.i2c_target.bus.U$$0.

2.4. Executing FLATTEN pass (flatten design).
Deleting now unused module top.pin_clk_if_0.
Deleting now unused module top.pin_data_0__D14.
Deleting now unused module top.pin_data_0__D13.
Deleting now unused module top.pin_data_0__D12.
Deleting now unused module top.pin_data_0__D11.
Deleting now unused module top.pin_data_0__D10.
Deleting now unused module top.pin_data_0__D9.
Deleting now unused module top.pin_data_0__D8.
Deleting now unused module top.pin_data_0__D7.
Deleting now unused module top.pin_data_0__D6.
Deleting now unused module top.pin_data_0__D5.
Deleting now unused module top.pin_data_0__D4.
Deleting now unused module top.pin_data_0__D3.
Deleting now unused module top.pin_data_0__D2.
Deleting now unused module top.pin_data_0__D1.
Deleting now unused module top.pin_power_ok_0.
Deleting now unused module top.pin_control_0__D24.
Deleting now unused module top.pin_control_0__D23.
Deleting now unused module top.pin_control_0__D22.
Deleting now unused module top.pin_control_0__D21.
Deleting now unused module top.pin_control_0__D20.
Deleting now unused module top.pin_control_0__D19.
Deleting now unused module top.pin_control_0__D18.
Deleting now unused module top.pin_control_0__D17.
Deleting now unused module top.pin_port_b_6__oe.
Deleting now unused module top.pin_port_b_6__io.
Deleting now unused module top.pin_port_b_7__oe.
Deleting now unused module top.pin_port_b_7__io.
Deleting now unused module top.pin_port_b_5__oe.
Deleting now unused module top.pin_port_b_5__io.
Deleting now unused module top.pin_port_b_4__oe.
Deleting now unused module top.pin_port_b_4__io.
Deleting now unused module top.pin_port_b_3__oe.
Deleting now unused module top.pin_port_b_3__io.
Deleting now unused module top.pin_port_b_2__oe.
Deleting now unused module top.pin_port_b_2__io.
Deleting now unused module top.pin_port_b_1__oe.
Deleting now unused module top.pin_port_b_1__io.
Deleting now unused module top.pin_port_b_0__oe.
Deleting now unused module top.pin_port_b_0__io.
Deleting now unused module top.pin_port_a_7__oe.
Deleting now unused module top.pin_port_a_7__io.
Deleting now unused module top.pin_port_a_6__oe.
Deleting now unused module top.pin_port_a_6__io.
Deleting now unused module top.pin_port_a_5__oe.
Deleting now unused module top.pin_port_a_5__io.
Deleting now unused module top.pin_port_a_4__oe.
Deleting now unused module top.pin_port_a_4__io.
Deleting now unused module top.pin_port_a_3__oe.
Deleting now unused module top.pin_port_a_3__io.
Deleting now unused module top.pin_port_a_2__oe.
Deleting now unused module top.pin_port_a_2__io.
Deleting now unused module top.pin_port_a_1__oe.
Deleting now unused module top.pin_port_a_1__io.
Deleting now unused module top.pin_port_a_0__oe.
Deleting now unused module top.pin_port_a_0__io.
Deleting now unused module top.pin_fx2_0__fd.
Deleting now unused module top.pin_fx2_0__flag.
Deleting now unused module top.pin_fx2_0__fifoadr.
Deleting now unused module top.pin_fx2_0__pktend.
Deleting now unused module top.pin_fx2_0__slwr.
Deleting now unused module top.pin_fx2_0__slrd.
Deleting now unused module top.pin_fx2_0__sloe.
Deleting now unused module top.pin_i2c_0__sda.
Deleting now unused module top.pin_i2c_0__scl.
Deleting now unused module top.pin_unused_0.
Deleting now unused module top.cd_sync.
Deleting now unused module top.multiplexer.
Deleting now unused module top.multiplexer.U$$0.
Deleting now unused module top.multiplexer.U$$0.ConfigHdlr.
Deleting now unused module top.multiplexer.U$$0.MuxBus.
Deleting now unused module top.multiplexer.U$$0.MuxBus.sample_clock.
Deleting now unused module top.multiplexer.U$$0.MuxBus.a_adc.
Deleting now unused module top.multiplexer.U$$0.MuxBus.y_dac.
Deleting now unused module top.multiplexer.U$$0.MuxBus.x_dac.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.ByteReplace.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.DwellAvgr.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.YInt.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.XInt.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.y_counter.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.
Deleting now unused module top.multiplexer.U$$0.ModeCtrl.BeamController.
Deleting now unused module top.fx2_crossbar.
Deleting now unused module top.fx2_crossbar.out_fifo_0.
Deleting now unused module top.fx2_crossbar.out_fifo_0.skid.
Deleting now unused module top.fx2_crossbar.out_fifo_0.inner.
Deleting now unused module top.fx2_crossbar.in_fifo_0.
Deleting now unused module top.fx2_crossbar.in_fifo_0.inner.
Deleting now unused module top.fx2_crossbar.bus.
Deleting now unused module top.registers.
Deleting now unused module top.i2c_target.
Deleting now unused module top.i2c_target.bus.
Deleting now unused module top.i2c_target.bus.U$$1.
Deleting now unused module top.i2c_target.bus.U$$0.
<suppressed ~103 debug messages>

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~115 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 263 unused cells and 1632 unused wires.
<suppressed ~377 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~990 debug messages>
Removed a total of 330 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$1014: \multiplexer.U$$0.ModeCtrl.fsm_state -> 1'1
      Replacing known input bits on port A of cell $flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$1012: \multiplexer.U$$0.ModeCtrl.fsm_state -> 1'0
      Replacing known input bits on port A of cell $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\Raster1byteWriter.$procmux$1591: \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.fsm_state -> 1'0
      Replacing known input bits on port A of cell $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\Raster1byteWriter.$procmux$1589: \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.fsm_state -> 1'1
      Replacing known input bits on port A of cell $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\Raster1byteWriter.$procmux$1596: \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.fsm_state -> 1'0
      Replacing known input bits on port B of cell $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.$procmux$1425: \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.increment -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$452.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$934.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$996.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.$procmux$1395.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.$procmux$1397.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$procmux$1452.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$procmux$1454.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$procmux$1456.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$procmux$1459.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1217.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1217.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1219.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1222.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1222.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1224.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1227.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1227.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1229.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1232.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1232.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1234.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1237.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1237.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1239.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1242.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1242.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1244.
Removed 27 multiplexer ports.
<suppressed ~213 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$783: $auto$opt_reduce.cc:134:opt_pmux$2925
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$803: $auto$opt_reduce.cc:134:opt_pmux$2927
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterWriter.$procmux$1579: { $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterWriter.$procmux$1560_CMP $auto$opt_reduce.cc:134:opt_pmux$2929 }
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorWriter.$procmux$1200: { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorWriter.$procmux$1181_CMP $auto$opt_reduce.cc:134:opt_pmux$2931 }
    New ctrl vector for $pmux cell $flatten\registers.$procmux$2443: $auto$opt_reduce.cc:134:opt_pmux$2933
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2606: { $flatten\i2c_target.$procmux$2595_CMP $flatten\i2c_target.$procmux$2616_CMP $flatten\i2c_target.$procmux$2584_CMP }
  Optimizing cells in module \top.
Performed a total of 6 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~165 debug messages>
Removed a total of 55 cells.

2.10.6. Executing OPT_DFF pass (perform DFF optimizations).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 387 unused wires.
<suppressed ~10 debug messages>

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2767: $auto$opt_reduce.cc:134:opt_pmux$2935
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2786: { $flatten\i2c_target.$procmux$2810_CMP $auto$opt_reduce.cc:134:opt_pmux$2937 $flatten\i2c_target.$procmux$2616_CMP }
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$686: { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$679_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$667_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$664_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$661_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$658_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$652_CMP $auto$opt_reduce.cc:134:opt_pmux$2943 $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$646_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$640_CMP $auto$opt_reduce.cc:134:opt_pmux$2941 $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$634_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$631_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$628_CMP $auto$opt_reduce.cc:134:opt_pmux$2939 }
  Optimizing cells in module \top.
Performed a total of 3 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.10.13. Executing OPT_DFF pass (perform DFF optimizations).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.16. Rerunning OPT passes. (Maybe there is more to do..)

2.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

2.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.20. Executing OPT_DFF pass (perform DFF optimizations).

2.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.23. Finished OPT passes. (There is nothing left to do.)

2.11. Executing FSM pass (extract and optimize FSM).

2.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.fx2_crossbar.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.i2c_target.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.ConfigHdlr.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.MuxBus.a_adc.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.MuxBus.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.MuxBus.x_dac.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.MuxBus.y_dac.fsm_state as FSM state register:
    Register has an initialization value.

2.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\registers.$69 ($dff) from module top (D = $flatten\registers.$procmux$2467_Y, Q = \multiplexer.U$$0.ConfigHdlr.step_size, rval = 8'00000001).
Adding EN signal on $auto$ff.cc:266:slice$2944 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.step_size).
Adding SRST signal on $flatten\registers.$68 ($dff) from module top (D = $flatten\registers.$procmux$1959_Y, Q = \registers_$signal$15, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2952 ($sdff) from module top (D = \i2c_target.data_i [0], Q = \registers_$signal$15).
Adding SRST signal on $flatten\registers.$67 ($dff) from module top (D = $flatten\registers.$procmux$1970_Y, Q = \multiplexer.U$$0.ConfigHdlr.outer_configuration_flag, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2958 ($sdff) from module top (D = \i2c_target.data_i [0], Q = \multiplexer.U$$0.ConfigHdlr.outer_configuration_flag).
Adding SRST signal on $flatten\registers.$66 ($dff) from module top (D = $flatten\registers.$procmux$2101_Y, Q = \multiplexer.U$$0.ModeCtrl.const_dwell_time, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2964 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ModeCtrl.const_dwell_time).
Adding SRST signal on $flatten\registers.$65 ($dff) from module top (D = $flatten\registers.$procmux$1983_Y, Q = $flatten\registers.$signal$31, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2970 ($sdff) from module top (D = \i2c_target.data_i [0], Q = $flatten\registers.$signal$31).
Adding SRST signal on $flatten\registers.$64 ($dff) from module top (D = $flatten\registers.$procmux$1997_Y, Q = $flatten\registers.$signal$28, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2976 ($sdff) from module top (D = \i2c_target.data_i [0], Q = $flatten\registers.$signal$28).
Adding SRST signal on $flatten\registers.$63 ($dff) from module top (D = $flatten\registers.$procmux$2012_Y, Q = \multiplexer.U$$0.ConfigHdlr.eight_bit_output, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2982 ($sdff) from module top (D = \i2c_target.data_i [0], Q = \multiplexer.U$$0.ConfigHdlr.eight_bit_output).
Adding SRST signal on $flatten\registers.$62 ($dff) from module top (D = $flatten\registers.$procmux$2168_Y, Q = \multiplexer.U$$0.ConfigHdlr.y_lower_limit_b2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2988 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.y_lower_limit_b2).
Adding SRST signal on $flatten\registers.$61 ($dff) from module top (D = $flatten\registers.$procmux$2185_Y, Q = $flatten\registers.$signal$24, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2994 ($sdff) from module top (D = \i2c_target.data_i, Q = $flatten\registers.$signal$24).
Adding SRST signal on $flatten\registers.$60 ($dff) from module top (D = $flatten\registers.$procmux$2203_Y, Q = \multiplexer.U$$0.ConfigHdlr.y_upper_limit_b2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3000 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.y_upper_limit_b2).
Adding SRST signal on $flatten\registers.$59 ($dff) from module top (D = $flatten\registers.$procmux$2222_Y, Q = \multiplexer.U$$0.ConfigHdlr.y_lower_limit_b1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3006 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.y_lower_limit_b1).
Adding SRST signal on $flatten\registers.$58 ($dff) from module top (D = $flatten\registers.$procmux$2242_Y, Q = \multiplexer.U$$0.ConfigHdlr.x_lower_limit_b2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3012 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.x_lower_limit_b2).
Adding SRST signal on $flatten\registers.$57 ($dff) from module top (D = $flatten\registers.$procmux$2263_Y, Q = $flatten\registers.$signal$23, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3018 ($sdff) from module top (D = \i2c_target.data_i, Q = $flatten\registers.$signal$23).
Adding SRST signal on $flatten\registers.$56 ($dff) from module top (D = $flatten\registers.$procmux$2285_Y, Q = \multiplexer.U$$0.ConfigHdlr.x_upper_limit_b2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3024 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.x_upper_limit_b2).
Adding SRST signal on $flatten\registers.$55 ($dff) from module top (D = $flatten\registers.$procmux$2308_Y, Q = \multiplexer.U$$0.ConfigHdlr.x_lower_limit_b1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3030 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.x_lower_limit_b1).
Adding SRST signal on $flatten\registers.$54 ($dff) from module top (D = $flatten\registers.$procmux$2332_Y, Q = \multiplexer.U$$0.ConfigHdlr.y_full_frame_resolution_b2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3036 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.y_full_frame_resolution_b2).
Adding SRST signal on $flatten\registers.$53 ($dff) from module top (D = $flatten\registers.$procmux$2357_Y, Q = \multiplexer.U$$0.ConfigHdlr.y_full_frame_resolution_b1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3042 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.y_full_frame_resolution_b1).
Adding SRST signal on $flatten\registers.$52 ($dff) from module top (D = $flatten\registers.$procmux$2383_Y, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3048 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b2).
Adding SRST signal on $flatten\registers.$51 ($dff) from module top (D = $flatten\registers.$procmux$2410_Y, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3054 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b1).
Adding SRST signal on $flatten\registers.$50 ($dff) from module top (D = $flatten\registers.$procmux$2040_Y, Q = \multiplexer.U$$0.ConfigHdlr.scan_mode, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3060 ($sdff) from module top (D = \i2c_target.data_i [1:0], Q = \multiplexer.U$$0.ConfigHdlr.scan_mode).
Adding SRST signal on $flatten\registers.$49 ($dff) from module top (D = $flatten\registers.$procmux$2069_Y, Q = \registers_$signal, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3066 ($sdff) from module top (D = \i2c_target.data_i [0], Q = \registers_$signal).
Adding SRST signal on $flatten\registers.$48 ($dff) from module top (D = $flatten\registers.$procmux$2497_Y, Q = \registers.reg_data, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3072 ($sdff) from module top (D = $flatten\registers.$procmux$2495_Y, Q = \registers.reg_data).
Adding SRST signal on $flatten\registers.$47 ($dff) from module top (D = $flatten\registers.$procmux$2505_Y, Q = \registers.reg_addr, rval = 5'00000).
Adding EN signal on $auto$ff.cc:266:slice$3078 ($sdff) from module top (D = \i2c_target.data_i [4:0], Q = \registers.reg_addr).
Adding SRST signal on $flatten\registers.$46 ($dff) from module top (D = $flatten\registers.$procmux$2516_Y, Q = \registers.latch_addr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3082 ($sdff) from module top (D = 1'1, Q = \registers.latch_addr).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\y_dac.$3 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\y_dac.$procmux$902_Y, Q = \multiplexer.U$$0.MuxBus.y_dac.fsm_state, rval = 2'01).
Adding EN signal on $auto$ff.cc:266:slice$3088 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\y_dac.$procmux$898_Y, Q = \multiplexer.U$$0.MuxBus.y_dac.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\x_dac.$3 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\x_dac.$procmux$918_Y, Q = \multiplexer.U$$0.MuxBus.x_dac.fsm_state, rval = 2'01).
Adding EN signal on $auto$ff.cc:266:slice$3098 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\x_dac.$procmux$914_Y, Q = \multiplexer.U$$0.MuxBus.x_dac.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$11 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$procmux$865_Y, Q = \multiplexer.U$$0.MuxBus.sample_clock.clock, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3108 ($sdff) from module top (D = \pin_control_0__D23.control_0__D23__o, Q = \multiplexer.U$$0.MuxBus.sample_clock.clock).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$10 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$3 [3:0], Q = \multiplexer.U$$0.MuxBus.sample_clock.timer, rval = 4'0000).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\a_adc.$3 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\a_adc.$procmux$882_Y, Q = \multiplexer.U$$0.MuxBus.a_adc.fsm_state, rval = 2'01).
Adding EN signal on $auto$ff.cc:266:slice$3119 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\a_adc.$procmux$878_Y, Q = \multiplexer.U$$0.MuxBus.a_adc.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.$15 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.$procmux$851_Y, Q = \multiplexer.U$$0.MuxBus.fsm_state, rval = 3'011).
Adding EN signal on $auto$ff.cc:266:slice$3129 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.$procmux$836_Y, Q = \multiplexer.U$$0.MuxBus.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorWriter.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorWriter.$procmux$1171_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.fsm_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3149 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorWriter.$procmux$1171_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorWriter.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1249_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.fsm_state, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$3165 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1249_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$1 ($dff) from module top (D = { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1278_Y $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1292_Y $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1309_Y $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1326_Y $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1343_Y $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1360_Y }, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data, rval = 48'000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3189 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1360_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [7:0]).
Adding EN signal on $auto$ff.cc:266:slice$3189 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1343_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [15:8]).
Adding EN signal on $auto$ff.cc:266:slice$3189 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1326_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [23:16]).
Adding EN signal on $auto$ff.cc:266:slice$3189 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1309_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [31:24]).
Adding EN signal on $auto$ff.cc:266:slice$3189 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1292_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [39:32]).
Adding EN signal on $auto$ff.cc:266:slice$3189 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1278_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [47:40]).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$8 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$procmux$1469_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.current_count, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3248 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$procmux$1469_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.current_count).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterWriter.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterWriter.$procmux$1550_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.fsm_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3256 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterWriter.$procmux$1550_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterWriter.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1496_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.fsm_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3272 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1496_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$1 ($dff) from module top (D = { $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1513_Y $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1527_Y }, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.data, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3288 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1527_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.data [7:0]).
Adding EN signal on $auto$ff.cc:266:slice$3288 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1513_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.RasterReader.data [15:8]).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\Raster1byteWriter.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\Raster1byteWriter.$procmux$1591_Y, Q = \multiplexer.U$$0.ModeCtrl.RasterModeCtrl.Raster1byteWriter.fsm_state, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\DwellAvgr.$30 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\DwellAvgr.$procmux$1125_Y, Q = \multiplexer.U$$0.ModeCtrl.DwellAvgr.start_new_average_s, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3318 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\DwellAvgr.$procmux$1125_Y, Q = \multiplexer.U$$0.ModeCtrl.DwellAvgr.start_new_average_s).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\DwellAvgr.$29 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\DwellAvgr.$procmux$1131_Y, Q = \multiplexer.U$$0.ModeCtrl.DwellAvgr.prev_pixel, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3326 ($sdff) from module top (D = \multiplexer.U$$0.ModeCtrl.ByteReplace_processed_point_data, Q = \multiplexer.U$$0.ModeCtrl.DwellAvgr.prev_pixel).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\DwellAvgr.$28 ($dff) from module top (D = \multiplexer.U$$0.ModeCtrl.ByteReplace_processed_point_data, Q = \multiplexer.U$$0.ModeCtrl.DwellAvgr.running_average_s, rval = 16'0000000000000000).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$24 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$procmux$1634_Y, Q = \multiplexer.U$$0.ModeCtrl.BeamController.dwell_time, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3337 ($sdff) from module top (D = \multiplexer.U$$0.ModeCtrl.BeamController.next_dwell [13:0], Q = \multiplexer.U$$0.ModeCtrl.BeamController.dwell_time).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$23 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$procmux$1643_Y, Q = \multiplexer.U$$0.ModeCtrl.BeamController.y_position, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3343 ($sdff) from module top (D = \multiplexer.U$$0.ModeCtrl.BeamController.next_y_position, Q = \multiplexer.U$$0.ModeCtrl.BeamController.y_position).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$22 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$procmux$1652_Y, Q = \multiplexer.U$$0.ModeCtrl.BeamController.x_position, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3349 ($sdff) from module top (D = \multiplexer.U$$0.ModeCtrl.BeamController.next_x_position, Q = \multiplexer.U$$0.ModeCtrl.BeamController.x_position).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$21 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$procmux$1665_Y, Q = \multiplexer.U$$0.ModeCtrl.BeamController.counter, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3355 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$procmux$1663_Y, Q = \multiplexer.U$$0.ModeCtrl.BeamController.counter).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$19 ($dff) from module top (D = \multiplexer.U$$0.ModeCtrl.BeamController.dwelling, Q = \multiplexer.U$$0.ModeCtrl.BeamController.prev_dwelling, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.$221 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$1016_Y, Q = \multiplexer.U$$0.ModeCtrl.fsm_state, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3368 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$1014_Y, Q = \multiplexer.U$$0.ModeCtrl.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ModeCtrl.$220 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$1047_Y, Q = \multiplexer.U$$0.ModeCtrl.data_stale, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3374 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$1045_Y, Q = \multiplexer.U$$0.ModeCtrl.data_stale).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$18 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$615_Y, Q = \multiplexer.U$$0.ConfigHdlr.fsm_state, rval = 5'00000).
Adding EN signal on $auto$ff.cc:266:slice$3384 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$615_Y, Q = \multiplexer.U$$0.ConfigHdlr.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$17 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$744_Y, Q = \multiplexer.U$$0.ConfigHdlr.step_size_locked, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3434 ($sdff) from module top (D = \multiplexer.U$$0.ConfigHdlr.step_size, Q = \multiplexer.U$$0.ConfigHdlr.step_size_locked).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$16 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$752_Y, Q = \multiplexer.U$$0.ConfigHdlr.eight_bit_output_locked, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3442 ($sdff) from module top (D = \multiplexer.U$$0.ConfigHdlr.eight_bit_output, Q = \multiplexer.U$$0.ConfigHdlr.eight_bit_output_locked).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$14 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$768_Y, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_locked, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3450 ($sdff) from module top (D = { \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b1 \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b2 }, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_locked).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$13 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$776_Y, Q = \multiplexer.U$$0.ConfigHdlr.roi_registers_locked, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3458 ($sdff) from module top (D = { \multiplexer.U$$0.ConfigHdlr.y_lower_limit_b1 \multiplexer.U$$0.ConfigHdlr.y_upper_limit_b2 \multiplexer.U$$0.ConfigHdlr.y_lower_limit_b1 \multiplexer.U$$0.ConfigHdlr.y_lower_limit_b2 \multiplexer.U$$0.ConfigHdlr.x_lower_limit_b1 \multiplexer.U$$0.ConfigHdlr.x_upper_limit_b2 \multiplexer.U$$0.ConfigHdlr.x_lower_limit_b1 \multiplexer.U$$0.ConfigHdlr.x_lower_limit_b2 }, Q = \multiplexer.U$$0.ConfigHdlr.roi_registers_locked).
Adding SRST signal on $flatten\multiplexer.\U$$0.$130 ($dff) from module top (D = \multiplexer.U$$0.asdf, Q = \multiplexer.U$$0.sdfg, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.$129 ($dff) from module top (D = \multiplexer.U$$0.eflnp, Q = \multiplexer.U$$0.asdf, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.$128 ($dff) from module top (D = \multiplexer.U$$0.ConfigHdlr_config_flag_released, Q = \multiplexer.U$$0.eflnp, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.$127 ($dff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$479_Y, Q = \multiplexer.U$$0.config_flag_latched, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3481 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$476_Y, Q = \multiplexer.U$$0.config_flag_latched).
Adding SRST signal on $flatten\i2c_target.\bus.$26 ($dff) from module top (D = \i2c_target.bus.U$$1.stage1, Q = \i2c_target.bus.sda_r, rval = 1'1).
Adding SRST signal on $flatten\i2c_target.\bus.$25 ($dff) from module top (D = \i2c_target.bus.U$$0.stage1, Q = \i2c_target.bus.scl_r, rval = 1'1).
Adding SRST signal on $flatten\i2c_target.$78 ($dff) from module top (D = $flatten\i2c_target.$procmux$2531_Y, Q = \i2c_target.bus_scl_o, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3493 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2531_Y, Q = \i2c_target.bus_scl_o).
Adding SRST signal on $flatten\i2c_target.$77 ($dff) from module top (D = $flatten\i2c_target.$procmux$2544_Y, Q = \i2c_target.write, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3511 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2544_Y, Q = \i2c_target.write).
Adding SRST signal on $flatten\i2c_target.$76 ($dff) from module top (D = $flatten\i2c_target.$procmux$2569_Y, Q = \i2c_target.data_i, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3527 ($sdff) from module top (D = \i2c_target.shreg_i, Q = \i2c_target.data_i).
Adding SRST signal on $flatten\i2c_target.$75 ($dff) from module top (D = $flatten\i2c_target.$procmux$2606_Y, Q = \i2c_target.shreg_o, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3537 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2606_Y, Q = \i2c_target.shreg_o).
Adding SRST signal on $flatten\i2c_target.$74 ($dff) from module top (D = $flatten\i2c_target.$procmux$2693_Y, Q = \i2c_target.bus_sda_o, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3571 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2693_Y, Q = \i2c_target.bus_sda_o).
Adding SRST signal on $flatten\i2c_target.$73 ($dff) from module top (D = $flatten\i2c_target.$procmux$2767_Y, Q = \i2c_target.shreg_i, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3623 ($sdff) from module top (D = $flatten\i2c_target.$24 [7:0], Q = \i2c_target.shreg_i).
Adding SRST signal on $flatten\i2c_target.$72 ($dff) from module top (D = $flatten\i2c_target.$procmux$2786_Y, Q = \i2c_target.bitno, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$3631 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2786_Y, Q = \i2c_target.bitno).
Adding SRST signal on $flatten\i2c_target.$71 ($dff) from module top (D = $flatten\i2c_target.$procmux$2824_Y, Q = \i2c_target.fsm_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$3657 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2824_Y, Q = \i2c_target.fsm_state).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\skid.$49 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$procmux$1841_Y, Q = \fx2_crossbar.out_fifo_0.skid.level, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3697 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$procmux$1841_Y, Q = \fx2_crossbar.out_fifo_0.skid.level).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\skid.$48 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$procmux$1847_Y, Q = \fx2_crossbar.out_fifo_0.skid.consume, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3705 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$18 [1:0], Q = \fx2_crossbar.out_fifo_0.skid.consume).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\skid.$47 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$procmux$1853_Y, Q = \fx2_crossbar.out_fifo_0.skid.produce, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3711 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$12 [1:0], Q = \fx2_crossbar.out_fifo_0.skid.produce).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\inner.$76 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1861_Y, Q = \fx2_crossbar.out_fifo_0.inner.r_rdy, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3717 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1861_Y, Q = \fx2_crossbar.out_fifo_0.inner.r_rdy).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\inner.$75 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1869_Y, Q = \fx2_crossbar.out_fifo_0.inner.inner_level, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3725 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1869_Y, Q = \fx2_crossbar.out_fifo_0.inner.inner_level).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\inner.$74 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1875_Y, Q = \fx2_crossbar.out_fifo_0.inner.consume, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3733 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$28 [8:0], Q = \fx2_crossbar.out_fifo_0.inner.consume).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\inner.$73 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1881_Y, Q = \fx2_crossbar.out_fifo_0.inner.produce, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3739 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$12 [8:0], Q = \fx2_crossbar.out_fifo_0.inner.produce).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.\inner.$76 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1907_Y, Q = \fx2_crossbar.in_fifo_0.inner.r_rdy, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3745 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1907_Y, Q = \fx2_crossbar.in_fifo_0.inner.r_rdy).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.\inner.$75 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1915_Y, Q = \fx2_crossbar.in_fifo_0.inner.inner_level, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3753 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1915_Y, Q = \fx2_crossbar.in_fifo_0.inner.inner_level).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.\inner.$74 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1921_Y, Q = \fx2_crossbar.in_fifo_0.inner.consume, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3761 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$28 [8:0], Q = \fx2_crossbar.in_fifo_0.inner.consume).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.\inner.$73 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1927_Y, Q = \fx2_crossbar.in_fifo_0.inner.produce, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3767 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$12 [8:0], Q = \fx2_crossbar.in_fifo_0.inner.produce).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.$14 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.$procmux$1897_Y, Q = \fx2_crossbar.in_fifo_0.queued, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:266:slice$3773 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.$3 [9:0], Q = \fx2_crossbar.in_fifo_0.queued).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$16 ($dff) from module top (D = $flatten\fx2_crossbar.\bus.$9, Q = \fx2_crossbar.bus.nrdy_o, rval = 4'0000).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$15 ($dff) from module top (D = \fx2_crossbar.bus.nrdy_i, Q = \fx2_crossbar.bus.nrdy_r, rval = 4'0000).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$14 ($dff) from module top (D = \fx2_crossbar.bus.slrd_r, Q = \fx2_crossbar.bus.slrd_p, rval = 1'0).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$13 ($dff) from module top (D = \fx2_crossbar.bus.slrd, Q = \fx2_crossbar.bus.slrd_r, rval = 1'0).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$12 ($dff) from module top (D = \fx2_crossbar.bus.addr_r, Q = \fx2_crossbar.bus.addr_p, rval = 2'00).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$11 ($dff) from module top (D = \fx2_crossbar.bus_addr, Q = \fx2_crossbar.bus.addr_r, rval = 2'00).
Adding SRST signal on $flatten\fx2_crossbar.$97 ($dff) from module top (D = $flatten\fx2_crossbar.$procmux$1727_Y, Q = \fx2_crossbar.fsm_state, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$3785 ($sdff) from module top (D = $flatten\fx2_crossbar.$procmux$1727_Y, Q = \fx2_crossbar.fsm_state).
Adding SRST signal on $flatten\fx2_crossbar.$96 ($dff) from module top (D = $flatten\fx2_crossbar.$procmux$1753_Y, Q = \fx2_crossbar.bus_addr, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3797 ($sdff) from module top (D = $flatten\fx2_crossbar.$auto$proc_rom.cc:149:do_switch$381, Q = \fx2_crossbar.bus_addr).
Adding SRST signal on $flatten\fx2_crossbar.$95 ($dff) from module top (D = $flatten\fx2_crossbar.$procmux$1759_Y, Q = \fx2_crossbar.bus_data__oe, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3799 ($sdff) from module top (D = $flatten\fx2_crossbar.$procmux$1759_Y, Q = \fx2_crossbar.bus_data__oe).
Adding SRST signal on $flatten\fx2_crossbar.$94 ($dff) from module top (D = $flatten\fx2_crossbar.$procmux$1767_Y, Q = \fx2_crossbar.bus_sloe, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3807 ($sdff) from module top (D = $flatten\fx2_crossbar.$procmux$1767_Y, Q = \fx2_crossbar.bus_sloe).
Adding EN signal on $flatten\cd_sync.$11 ($dff) from module top (D = $flatten\cd_sync.$5 [9:0], Q = \cd_sync.timer).
Adding EN signal on $flatten\cd_sync.$10 ($dff) from module top (D = 1'1, Q = \cd_sync.ready).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 263 unused cells and 257 unused wires.
<suppressed ~334 debug messages>

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~35 debug messages>

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~153 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~492 debug messages>
Removed a total of 164 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 164 unused wires.
<suppressed ~1 debug messages>

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.16. Rerunning OPT passes. (Maybe there is more to do..)

2.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~155 debug messages>

2.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.20. Executing OPT_DFF pass (perform DFF optimizations).

2.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.23. Finished OPT passes. (There is nothing left to do.)

2.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 26 address bits (of 32) from memory init port top.$flatten\fx2_crossbar.$auto$mem.cc:319:emit$384 ($flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382).
Removed top 2 bits (of 4) from mux cell top.$flatten\i2c_target.$procmux$2877 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\i2c_target.$procmux$2840 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\i2c_target.$procmux$2814 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2810_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3792 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3794 ($ne).
Removed top 2 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2744_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3804 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2616_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2595_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2556_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2541_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2532_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\i2c_target.$37 ($eq).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\i2c_target.$28 ($or).
Removed top 1 bits (of 9) from port A of cell top.$flatten\i2c_target.$28 ($or).
Removed top 1 bits (of 4) from port Y of cell top.$flatten\i2c_target.$17 ($add).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3411 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3409 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3407 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3405 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3403 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3401 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3399 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3397 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3395 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3393 ($ne).
Removed top 7 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2493_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2492_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2491_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2490_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2489_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2488_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2487_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2486_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2485_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2484_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2483_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2482_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2481_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2480_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2479_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2478_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2477_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2476_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2475_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3516 ($ne).
Removed top 3 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2406_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2379_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2353_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2328_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2304_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2281_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2259_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2238_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2218_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2199_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2181_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2164_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2036_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2008_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$1993_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3413 ($ne).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$64 ($sub).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$49 ($add).
Removed top 1 bits (of 10) from mux cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$34 ($mux).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$30 ($add).
Removed top 1 bits (of 10) from mux cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$15 ($mux).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$11 ($add).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$46 ($sub).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$35 ($add).
Removed top 1 bits (of 3) from mux cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$24 ($mux).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$20 ($add).
Removed top 1 bits (of 3) from mux cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$15 ($mux).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$11 ($add).
Removed top 1 bits (of 11) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.$5 ($add).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$64 ($sub).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$49 ($add).
Removed top 1 bits (of 10) from mux cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$34 ($mux).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$30 ($add).
Removed top 1 bits (of 10) from mux cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$15 ($mux).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$11 ($add).
Removed top 1 bits (of 2) from FF cell top.$auto$ff.cc:266:slice$3783 ($sdff).
Removed top 2 bits (of 3) from port B of cell top.$flatten\fx2_crossbar.$procmux$1746_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\fx2_crossbar.$procmux$1745_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\fx2_crossbar.$procmux$1706_CMP0 ($eq).
Removed top 1 bits (of 4) from port A of cell top.$flatten\fx2_crossbar.$8 ($and).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3283 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3281 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3285 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3415 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3269 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3267 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3265 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3186 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3184 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3182 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3180 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3178 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3176 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3174 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3162 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3160 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3158 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3427 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3548 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3419 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3421 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1268_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1265_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1262_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3576 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorWriter.$procmux$1166_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3425 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3423 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterWriter.$procmux$1545_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3588 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1483_CMP0 ($eq).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$7 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$15 ($add).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3417 ($ne).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$960 ($mux).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$958 ($mux).
Removed top 8 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$956 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3670 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3429 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.$10 ($eq).
Removed top 10 bits (of 24) from port Y of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\YInt.$3 ($mul).
Removed top 10 bits (of 24) from port Y of cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\XInt.$3 ($mul).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$5 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.\a_adc.$procmux$881_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.\y_dac.$procmux$901_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.\x_dac.$procmux$917_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.$procmux$850_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.$procmux$827_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.$procmux$823_CMP0 ($eq).
Removed top 6 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$694 ($mux).
Removed top 7 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$691 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$675 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$673_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$670_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$667_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$664_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$661_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$658_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$655_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$652_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$649_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$646_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$643_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$640_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$637_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$634_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$631_CMP0 ($eq).
Removed top 32 bits (of 64) from FF cell top.$auto$ff.cc:266:slice$3463 ($sdffe).
Removed top 1 bits (of 11) from port Y of cell top.$flatten\cd_sync.$7 ($add).
Removed top 1 bits (of 2) from FF cell top.$auto$ff.cc:266:slice$3784 ($sdff).
Removed top 2 bits (of 48) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.$procmux$1157 ($mux).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.$procmux$1377 ($mux).
Removed top 2 bits (of 8) from FF cell top.$auto$ff.cc:266:slice$3239 ($sdffe).
Removed top 2 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1278 ($pmux).
Removed top 2 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1283 ($mux).
Removed top 2 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1276 ($mux).
Removed top 2 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1281 ($mux).
Removed top 1 bits (of 11) from wire top.$flatten\cd_sync.$5.
Removed top 1 bits (of 11) from wire top.$flatten\fx2_crossbar.\in_fifo_0.$3.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$10.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$12.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$28.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$29.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$47.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$62.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$10.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$12.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$28.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$29.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$47.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$62.
Removed top 1 bits (of 3) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$10.
Removed top 1 bits (of 3) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$12.
Removed top 1 bits (of 3) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$18.
Removed top 1 bits (of 3) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$19.
Removed top 1 bits (of 3) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$33.
Removed top 1 bits (of 3) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$44.
Removed top 1 bits (of 4) from wire top.$flatten\i2c_target.$15.
Removed top 1 bits (of 9) from wire top.$flatten\i2c_target.$24.
Removed top 1 bits (of 4) from wire top.$flatten\i2c_target.$procmux$2814_Y.
Removed top 1 bits (of 4) from wire top.$flatten\i2c_target.$procmux$2840_Y.
Removed top 2 bits (of 4) from wire top.$flatten\i2c_target.$procmux$2877_Y.
Removed top 3 bits (of 5) from wire top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$675_Y.
Removed top 7 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$691_Y.
Removed top 6 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$694_Y.
Removed top 8 bits (of 16) from wire top.$flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$956_Y.
Removed top 2 bits (of 16) from wire top.$flatten\multiplexer.\U$$0.\ModeCtrl.$procmux$958_Y.
Removed top 1 bits (of 17) from wire top.$flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$13.
Removed top 2 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1276_Y.
Removed top 2 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1278_Y.
Removed top 2 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1281_Y.
Removed top 2 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1283_Y.
Removed top 1 bits (of 5) from wire top.$flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$3.

2.14. Executing PEEPOPT pass (run peephole optimizers).

2.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 39 unused wires.
<suppressed ~1 debug messages>

2.16. Executing SHARE pass (SAT-based resource sharing).

2.17. Executing TECHMAP pass (map to technology primitives).

2.17.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~140 debug messages>

2.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\cd_sync.$7 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.$5 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.\inner.$11 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.\inner.$30 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.\inner.$49 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.\inner.$64 ($sub).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\inner.$11 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\inner.$30 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\inner.$49 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\inner.$64 ($sub).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\skid.$11 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\skid.$20 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\skid.$35 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\skid.$46 ($sub).
  creating $macc model for $flatten\i2c_target.$17 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$15 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$7 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\ModeCtrl.\XInt.$3 ($mul).
  creating $macc model for $flatten\multiplexer.\U$$0.\ModeCtrl.\YInt.$3 ($mul).
  creating $macc model for $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$5 ($add).
  creating $alu model for $macc $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$5.
  creating $alu model for $macc $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$7.
  creating $alu model for $macc $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$15.
  creating $alu model for $macc $flatten\i2c_target.$17.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\skid.$46.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\skid.$35.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\skid.$20.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\skid.$11.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\inner.$64.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\inner.$49.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\inner.$30.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\inner.$11.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.\inner.$64.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.\inner.$49.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.\inner.$30.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.\inner.$11.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.$5.
  creating $alu model for $macc $flatten\cd_sync.$7.
  creating $macc cell for $flatten\multiplexer.\U$$0.\ModeCtrl.\YInt.$3: $auto$alumacc.cc:365:replace_macc$3854
  creating $macc cell for $flatten\multiplexer.\U$$0.\ModeCtrl.\XInt.$3: $auto$alumacc.cc:365:replace_macc$3855
  creating $alu model for $flatten\fx2_crossbar.\in_fifo_0.$11 ($ge): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.$10 ($le): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$2 ($ge): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$4 ($lt): new $alu
  creating $alu model for $flatten\registers.$18 ($lt): new $alu
  creating $alu cell for $flatten\registers.$18: $auto$alumacc.cc:485:replace_alu$3861
  creating $alu cell for $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$4: $auto$alumacc.cc:485:replace_alu$3872
  creating $alu cell for $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$2: $auto$alumacc.cc:485:replace_alu$3877
  creating $alu cell for $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.$10: $auto$alumacc.cc:485:replace_alu$3886
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.$11: $auto$alumacc.cc:485:replace_alu$3899
  creating $alu cell for $flatten\cd_sync.$7: $auto$alumacc.cc:485:replace_alu$3912
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.$5: $auto$alumacc.cc:485:replace_alu$3915
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.\inner.$11: $auto$alumacc.cc:485:replace_alu$3918
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.\inner.$30: $auto$alumacc.cc:485:replace_alu$3921
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.\inner.$49: $auto$alumacc.cc:485:replace_alu$3924
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.\inner.$64: $auto$alumacc.cc:485:replace_alu$3927
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\inner.$11: $auto$alumacc.cc:485:replace_alu$3930
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\inner.$30: $auto$alumacc.cc:485:replace_alu$3933
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\inner.$49: $auto$alumacc.cc:485:replace_alu$3936
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\inner.$64: $auto$alumacc.cc:485:replace_alu$3939
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\skid.$11: $auto$alumacc.cc:485:replace_alu$3942
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\skid.$20: $auto$alumacc.cc:485:replace_alu$3945
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\skid.$35: $auto$alumacc.cc:485:replace_alu$3948
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\skid.$46: $auto$alumacc.cc:485:replace_alu$3951
  creating $alu cell for $flatten\i2c_target.$17: $auto$alumacc.cc:485:replace_alu$3954
  creating $alu cell for $flatten\multiplexer.\U$$0.\ModeCtrl.\BeamController.$15: $auto$alumacc.cc:485:replace_alu$3957
  creating $alu cell for $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\XYScanGen.\x_counter.$7: $auto$alumacc.cc:485:replace_alu$3960
  creating $alu cell for $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$5: $auto$alumacc.cc:485:replace_alu$3963
  created 23 $alu and 2 $macc cells.

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

2.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~155 debug messages>

2.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.6. Executing OPT_DFF pass (perform DFF optimizations).

2.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 10 unused wires.
<suppressed ~4 debug messages>

2.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.9. Rerunning OPT passes. (Maybe there is more to do..)

2.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~155 debug messages>

2.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.13. Executing OPT_DFF pass (perform DFF optimizations).

2.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.16. Finished OPT passes. (There is nothing left to do.)

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.fx2_crossbar.out_fifo_0.skid.r_port write port 0.

2.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382'[0] in module `\top': merging output FF to cell.
Checking read port `\fx2_crossbar.out_fifo_0.skid.r_port'[0] in module `\top': no output FF found.
Checking read port address `\fx2_crossbar.out_fifo_0.skid.r_port'[0] in module `\top': address FF has fully-defined init value, not supported.

2.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

2.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382
mapping memory top.fx2_crossbar.in_fifo_0.inner.storage via $__ICE40_RAM4K_
mapping memory top.fx2_crossbar.out_fifo_0.inner.storage$1 via $__ICE40_RAM4K_
using FF mapping for memory top.fx2_crossbar.out_fifo_0.skid.r_port
<suppressed ~218 debug messages>

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.25.2. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.25.3. Continuing TECHMAP pass.
Using template $paramod$dd3348ae87356301b9facf18ec8783aacc96eb8d\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~27 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~284 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

2.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$mem.cc:1614:emulate_read_first$3976 ($dff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$439_Y, Q = $auto$mem.cc:1610:emulate_read_first$3973, rval = 8'00000000).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$3494 ($sdffe) from module top.

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 227 unused wires.
<suppressed ~13 debug messages>

2.27.5. Rerunning OPT passes. (Removed registers in this run.)

2.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

2.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.27.8. Executing OPT_DFF pass (perform DFF optimizations).

2.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

2.27.10. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382 in module \top:
  created 64 $dff cells and 0 static cells of width 2.
Extracted data FF from read port 0 of top.$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382: $$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdreg[0]
  read interface: 1 $dff and 63 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \fx2_crossbar.out_fifo_0.skid.r_port in module \top:
  created 3 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 3 $mux cells.
  write interface: 3 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~45 debug messages>

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][7]$4198.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][7]$4198.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][6]$4195.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][6]$4195.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][5]$4192.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][5]$4192.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][4]$4189.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][4]$4189.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][3]$4186.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][3]$4186.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][1]$4180.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][1]$4180.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][27]$4258.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][27]$4258.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][25]$4252.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][25]$4252.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][17]$4228.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][17]$4228.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][5]$4120.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][5]$4120.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][3]$4114.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][3]$4114.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][1]$4108.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][1]$4108.
Removed 24 multiplexer ports.
<suppressed ~134 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$opt_dff.cc:254:combine_resets$3341: { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$612_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$625_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$628_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$631_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$634_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$637_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$640_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$643_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$646_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$649_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$652_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$655_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$658_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$661_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$664_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$667_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$670_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$673_CMP $auto$rtlil.cc:2412:Not$3074 \registers_$signal }
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][16]$4225:
      Old ports: A=2'11, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][8]$a$4154
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][8]$a$4154 [0]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][8]$a$4154 [1] = $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][8]$a$4154 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][8]$4201:
      Old ports: A=2'10, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][4]$a$4142
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][4]$a$4142 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][4]$a$4142 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][2]$4183:
      Old ports: A=2'10, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][1]$a$4133
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][1]$a$4133 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][1]$a$4133 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][26]$4255:
      Old ports: A=2'10, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][13]$a$4169
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][13]$a$4169 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][13]$a$4169 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][0]$4177:
      Old ports: A=2'01, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][0]$a$4130
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][0]$a$4130 [0]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][0]$a$4130 [1] = 1'0
    New ctrl vector for $pmux cell $flatten\fx2_crossbar.$procmux$1727: { $flatten\fx2_crossbar.$procmux$1746_CMP $flatten\fx2_crossbar.$procmux$1745_CMP $auto$opt_reduce.cc:134:opt_pmux$4315 }
    Consolidated identical input bits for $mux cell $flatten\fx2_crossbar.$procmux$1743:
      Old ports: A=3'100, B=3'011, Y=$flatten\fx2_crossbar.$procmux$1743_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\fx2_crossbar.$procmux$1743_Y [2] $flatten\fx2_crossbar.$procmux$1743_Y [0] }
      New connections: $flatten\fx2_crossbar.$procmux$1743_Y [1] = $flatten\fx2_crossbar.$procmux$1743_Y [0]
    Consolidated identical input bits for $mux cell $flatten\fx2_crossbar.$procmux$1785:
      Old ports: A=4'0000, B={ $flatten\fx2_crossbar.$18 2'00 }, Y=\fx2_crossbar.bus.nrdy_i
      New ports: A=2'00, B=$flatten\fx2_crossbar.$18, Y=\fx2_crossbar.bus.nrdy_i [3:2]
      New connections: \fx2_crossbar.bus.nrdy_i [1:0] = 2'00
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2606: $flatten\i2c_target.$procmux$2616_CMP
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2693: { $flatten\i2c_target.$procmux$2541_CMP $auto$opt_reduce.cc:134:opt_pmux$4319 $auto$opt_reduce.cc:134:opt_pmux$4317 }
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2786: $auto$opt_reduce.cc:134:opt_pmux$4321
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2814:
      Old ports: A=3'101, B=3'000, Y=$auto$wreduce.cc:461:run$3839 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$3839 [0]
      New connections: $auto$wreduce.cc:461:run$3839 [2:1] = { $auto$wreduce.cc:461:run$3839 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2820:
      Old ports: A={ 1'0 $auto$wreduce.cc:461:run$3839 [2:0] }, B=4'0001, Y=$flatten\i2c_target.$procmux$2820_Y
      New ports: A=$auto$wreduce.cc:461:run$3839 [2:0], B=3'001, Y=$flatten\i2c_target.$procmux$2820_Y [2:0]
      New connections: $flatten\i2c_target.$procmux$2820_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2832:
      Old ports: A=4'1000, B=4'0001, Y=$flatten\i2c_target.$procmux$2832_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\i2c_target.$procmux$2832_Y [3] $flatten\i2c_target.$procmux$2832_Y [0] }
      New connections: $flatten\i2c_target.$procmux$2832_Y [2:1] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2840:
      Old ports: A=3'111, B=3'001, Y=$auto$wreduce.cc:461:run$3840 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$3840 [1]
      New connections: { $auto$wreduce.cc:461:run$3840 [2] $auto$wreduce.cc:461:run$3840 [0] } = { $auto$wreduce.cc:461:run$3840 [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2842:
      Old ports: A={ 1'0 $auto$wreduce.cc:461:run$3840 [2:0] }, B=4'0000, Y=$flatten\i2c_target.$procmux$2842_Y
      New ports: A=$auto$wreduce.cc:461:run$3840 [2:0], B=3'000, Y=$flatten\i2c_target.$procmux$2842_Y [2:0]
      New connections: $flatten\i2c_target.$procmux$2842_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2847:
      Old ports: A=4'0100, B=4'0001, Y=$flatten\i2c_target.$procmux$2847_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\i2c_target.$procmux$2847_Y [2] $flatten\i2c_target.$procmux$2847_Y [0] }
      New connections: { $flatten\i2c_target.$procmux$2847_Y [3] $flatten\i2c_target.$procmux$2847_Y [1] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2858:
      Old ports: A=4'0110, B=4'0001, Y=$flatten\i2c_target.$procmux$2858_Y
      New ports: A=2'10, B=2'01, Y=$flatten\i2c_target.$procmux$2858_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2858_Y [3:2] = { 1'0 $flatten\i2c_target.$procmux$2858_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2869:
      Old ports: A=4'0101, B=4'0100, Y=$flatten\i2c_target.$procmux$2869_Y
      New ports: A=1'1, B=1'0, Y=$flatten\i2c_target.$procmux$2869_Y [0]
      New connections: $flatten\i2c_target.$procmux$2869_Y [3:1] = 3'010
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2877:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:461:run$3841 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$3841 [0]
      New connections: $auto$wreduce.cc:461:run$3841 [1] = $auto$wreduce.cc:461:run$3841 [0]
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2885:
      Old ports: A={ 2'00 $auto$wreduce.cc:461:run$3841 [1:0] }, B=4'0001, Y=$flatten\i2c_target.$procmux$2885_Y
      New ports: A=$auto$wreduce.cc:461:run$3841 [1:0], B=2'01, Y=$flatten\i2c_target.$procmux$2885_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2885_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2892:
      Old ports: A=4'0010, B=4'0000, Y=$flatten\i2c_target.$procmux$2892_Y
      New ports: A=1'1, B=1'0, Y=$flatten\i2c_target.$procmux$2892_Y [1]
      New connections: { $flatten\i2c_target.$procmux$2892_Y [3:2] $flatten\i2c_target.$procmux$2892_Y [0] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$618:
      Old ports: A=5'00000, B=5'10011, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$618_Y
      New ports: A=1'0, B=1'1, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$618_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$618_Y [4:1] = { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$618_Y [0] 2'00 $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$618_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y
      New ports: A=1'0, B=1'1, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [7:1] = { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$684_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y
      New ports: A=1'0, B=1'1, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [7:1] = { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$739_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1499:
      Old ports: A=2'10, B=2'00, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1499_Y
      New ports: A=1'1, B=1'0, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1499_Y [1]
      New connections: $flatten\multiplexer.\U$$0.\ModeCtrl.\RasterModeCtrl.\RasterReader.$procmux$1499_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1252:
      Old ports: A=3'110, B=3'000, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1252_Y
      New ports: A=1'1, B=1'0, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1252_Y [1]
      New connections: { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1252_Y [2] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1252_Y [0] } = { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1252_Y [1] 1'0 }
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1292: $auto$opt_reduce.cc:134:opt_pmux$4323
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1309: $auto$opt_reduce.cc:134:opt_pmux$4325
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1326: $auto$opt_reduce.cc:134:opt_pmux$4327
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1343: $auto$opt_reduce.cc:134:opt_pmux$4329
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1360: $auto$opt_reduce.cc:134:opt_pmux$4331
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4320: { $flatten\i2c_target.$procmux$2556_CMP $flatten\i2c_target.$procmux$2616_CMP $flatten\i2c_target.$procmux$2744_CMP }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][6]$4123:
      Old ports: A=2'00, B=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][6]$b$4125, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$4103
      New ports: A=1'0, B=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][13]$a$4169 [1], Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$4103 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$4103 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][2]$4111:
      Old ports: A=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][2]$a$4112, B=2'10, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$4097
      New ports: A=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][4]$a$4142 [1], B=1'1, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$4097 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$4097 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2820:
      Old ports: A=$auto$wreduce.cc:461:run$3839 [2:0], B=3'001, Y=$flatten\i2c_target.$procmux$2820_Y [2:0]
      New ports: A={ $auto$wreduce.cc:461:run$3839 [0] $auto$wreduce.cc:461:run$3839 [0] }, B=2'01, Y={ $flatten\i2c_target.$procmux$2820_Y [2] $flatten\i2c_target.$procmux$2820_Y [0] }
      New connections: $flatten\i2c_target.$procmux$2820_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2822:
      Old ports: A=$flatten\i2c_target.$procmux$2820_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2822_Y
      New ports: A=$flatten\i2c_target.$procmux$2820_Y [2:0], B=3'000, Y=$flatten\i2c_target.$procmux$2822_Y [2:0]
      New connections: $flatten\i2c_target.$procmux$2822_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2834:
      Old ports: A=$flatten\i2c_target.$procmux$2832_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2834_Y
      New ports: A={ $flatten\i2c_target.$procmux$2832_Y [3] $flatten\i2c_target.$procmux$2832_Y [0] }, B=2'00, Y={ $flatten\i2c_target.$procmux$2834_Y [3] $flatten\i2c_target.$procmux$2834_Y [0] }
      New connections: $flatten\i2c_target.$procmux$2834_Y [2:1] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2842:
      Old ports: A=$auto$wreduce.cc:461:run$3840 [2:0], B=3'000, Y=$flatten\i2c_target.$procmux$2842_Y [2:0]
      New ports: A={ $auto$wreduce.cc:461:run$3840 [1] 1'1 }, B=2'00, Y=$flatten\i2c_target.$procmux$2842_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2842_Y [2] = $flatten\i2c_target.$procmux$2842_Y [1]
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2849:
      Old ports: A=$flatten\i2c_target.$procmux$2847_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2849_Y
      New ports: A={ $flatten\i2c_target.$procmux$2847_Y [2] $flatten\i2c_target.$procmux$2847_Y [0] }, B=2'00, Y={ $flatten\i2c_target.$procmux$2849_Y [2] $flatten\i2c_target.$procmux$2849_Y [0] }
      New connections: { $flatten\i2c_target.$procmux$2849_Y [3] $flatten\i2c_target.$procmux$2849_Y [1] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2860:
      Old ports: A=$flatten\i2c_target.$procmux$2858_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2860_Y
      New ports: A=$flatten\i2c_target.$procmux$2858_Y [1:0], B=2'00, Y=$flatten\i2c_target.$procmux$2860_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2860_Y [3:2] = { 1'0 $flatten\i2c_target.$procmux$2860_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2871:
      Old ports: A=$flatten\i2c_target.$procmux$2869_Y, B=4'0001, Y=$flatten\i2c_target.$procmux$2871_Y
      New ports: A={ 1'1 $flatten\i2c_target.$procmux$2869_Y [0] }, B=2'01, Y={ $flatten\i2c_target.$procmux$2871_Y [2] $flatten\i2c_target.$procmux$2871_Y [0] }
      New connections: { $flatten\i2c_target.$procmux$2871_Y [3] $flatten\i2c_target.$procmux$2871_Y [1] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2887:
      Old ports: A=$flatten\i2c_target.$procmux$2885_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2887_Y
      New ports: A=$flatten\i2c_target.$procmux$2885_Y [1:0], B=2'00, Y=$flatten\i2c_target.$procmux$2887_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2887_Y [3:2] = 2'00
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2822:
      Old ports: A=$flatten\i2c_target.$procmux$2820_Y [2:0], B=3'000, Y=$flatten\i2c_target.$procmux$2822_Y [2:0]
      New ports: A={ $flatten\i2c_target.$procmux$2820_Y [2] $flatten\i2c_target.$procmux$2820_Y [0] }, B=2'00, Y={ $flatten\i2c_target.$procmux$2822_Y [2] $flatten\i2c_target.$procmux$2822_Y [0] }
      New connections: $flatten\i2c_target.$procmux$2822_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2873:
      Old ports: A=$flatten\i2c_target.$procmux$2871_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2873_Y
      New ports: A={ $flatten\i2c_target.$procmux$2871_Y [2] $flatten\i2c_target.$procmux$2871_Y [0] }, B=2'00, Y={ $flatten\i2c_target.$procmux$2873_Y [2] $flatten\i2c_target.$procmux$2873_Y [0] }
      New connections: { $flatten\i2c_target.$procmux$2873_Y [3] $flatten\i2c_target.$procmux$2873_Y [1] } = 2'00
  Optimizing cells in module \top.
Performed a total of 46 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

2.29.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$3230 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1292_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [39:32]).
Adding EN signal on $auto$ff.cc:266:slice$3221 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1309_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [31:24]).
Adding EN signal on $auto$ff.cc:266:slice$3212 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1326_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [23:16]).
Adding EN signal on $auto$ff.cc:266:slice$3203 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1343_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [15:8]).
Adding EN signal on $auto$ff.cc:266:slice$3194 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1360_Y, Q = \multiplexer.U$$0.ModeCtrl.VectorModeCtrl.VectorReader.data [7:0]).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 138 unused wires.
<suppressed ~2 debug messages>

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~136 debug messages>

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4356: { $auto$opt_dff.cc:194:make_patterns_logic$3173 $auto$opt_dff.cc:194:make_patterns_logic$3183 $auto$opt_dff.cc:194:make_patterns_logic$3195 $auto$opt_dff.cc:194:make_patterns_logic$4353 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4346: { $auto$opt_dff.cc:194:make_patterns_logic$3177 $auto$opt_dff.cc:194:make_patterns_logic$3183 $auto$opt_dff.cc:194:make_patterns_logic$3213 $auto$opt_dff.cc:194:make_patterns_logic$4343 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4336: { $auto$opt_dff.cc:194:make_patterns_logic$3181 $auto$opt_dff.cc:194:make_patterns_logic$3183 $auto$opt_dff.cc:194:make_patterns_logic$3231 $auto$opt_dff.cc:194:make_patterns_logic$4333 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4341: { $auto$opt_dff.cc:194:make_patterns_logic$3179 $auto$opt_dff.cc:194:make_patterns_logic$3183 $auto$opt_dff.cc:194:make_patterns_logic$3222 $auto$opt_dff.cc:194:make_patterns_logic$4338 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4351: { $auto$opt_dff.cc:194:make_patterns_logic$4348 $auto$opt_dff.cc:194:make_patterns_logic$3175 $auto$opt_dff.cc:194:make_patterns_logic$3183 $auto$opt_dff.cc:194:make_patterns_logic$3204 }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [7:1] = { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1290_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [7:1] = { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1307_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [7:1] = { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1324_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [7:1] = { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1341_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [7:1] = { $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [0] $flatten\multiplexer.\U$$0.\ModeCtrl.\VectorModeCtrl.\VectorReader.$procmux$1358_Y [0] }
  Optimizing cells in module \top.
Performed a total of 10 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

2.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\fx2_crossbar.out_fifo_0.skid.r_port[2]$4277 ($dff) from module top (D = \fx2_crossbar.out_fifo_0.skid.storage_w_data, Q = \fx2_crossbar.out_fifo_0.skid.r_port[2]).
Adding EN signal on $memory\fx2_crossbar.out_fifo_0.skid.r_port[1]$4275 ($dff) from module top (D = \fx2_crossbar.out_fifo_0.skid.storage_w_data, Q = \fx2_crossbar.out_fifo_0.skid.r_port[1]).
Adding EN signal on $memory\fx2_crossbar.out_fifo_0.skid.r_port[0]$4273 ($dff) from module top (D = \fx2_crossbar.out_fifo_0.skid.storage_w_data, Q = \fx2_crossbar.out_fifo_0.skid.r_port[0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3780 ($sdff) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3780 ($sdff) from module top.

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 22 unused wires.
<suppressed ~9 debug messages>

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~129 debug messages>

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3779 ($sdff) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3779 ($sdff) from module top.

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~11 debug messages>

2.29.23. Rerunning OPT passes. (Maybe there is more to do..)

2.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~129 debug messages>

2.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.27. Executing OPT_DFF pass (perform DFF optimizations).

2.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.30. Rerunning OPT passes. (Maybe there is more to do..)

2.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~129 debug messages>

2.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.34. Executing OPT_DFF pass (perform DFF optimizations).

2.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.37. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$b6ec48645094baeb70d6b93add0cdbbe7498ad3c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $or.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$0f9ef3943735053e2437cb2dfebddb8617beb01b\_90_pmux for cells of type $pmux.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_ice40_alu for cells of type $alu.
Using template $paramod$4bdb94ac02745db6fc41e2e497d9b9793cd51dc6\_80_ice40_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_80_ice40_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_80_ice40_alu for cells of type $alu.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:1ef046be63c9541309f2f19c4ef998a798f64488$paramod$9a804b3e8f3576614913ca1805e89d49da3495fd\_90_shift_shiftx for cells of type $shift.
Using template $paramod$constmap:7e7b0a15aaca16161841ffdeb0270bfb1257cf5d$paramod$fa9ab3dca0ac473ae0e24327e78834a0d64c1ba0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using extmapper maccmap for cells of type $macc.
  add \multiplexer.U$$0.ModeCtrl.YInt.input * \multiplexer.U$$0.ConfigHdlr.step_size_locked (16x8 bits, unsigned)
Using template $paramod$57f63e8a3282e053be0430389b09fa050ac7dca0\_90_pmux for cells of type $pmux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
  add \multiplexer.U$$0.ModeCtrl.XInt.input * \multiplexer.U$$0.ConfigHdlr.step_size_locked (16x8 bits, unsigned)
Using template $paramod$56f7ce6d87f8add68ca646dc02d7695a3189f8e5\_90_pmux for cells of type $pmux.
Using template $paramod$d210d9b7034d9bfe9140acb5a094d0f694c28759\_90_pmux for cells of type $pmux.
Using template $paramod$9351575993bc1ded3ef48c9c097ff84ad426822b\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001110 for cells of type $fa.
Using template $paramod$091610cd349a68bd5539cffd7126f0d76e9bca00\_80_ice40_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~2352 debug messages>

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2304 debug messages>

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1968 debug messages>
Removed a total of 656 cells.

2.32.3. Executing OPT_DFF pass (perform DFF optimizations).

2.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 176 unused cells and 2281 unused wires.
<suppressed ~177 debug messages>

2.32.5. Finished fast OPT passes.

2.33. Executing ICE40_OPT pass (performing simple optimizations).

2.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3861.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3861.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3912.slice[0].carry: CO=\cd_sync.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3915.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.queued [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3918.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.inner.produce [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3921.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.inner.consume [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3924.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.inner.inner_level [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3927.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.inner.inner_level [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3930.slice[0].carry: CO=\fx2_crossbar.out_fifo_0.inner.produce [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3933.slice[0].carry: CO=\fx2_crossbar.out_fifo_0.inner.consume [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3936.slice[0].carry: CO=\fx2_crossbar.out_fifo_0.inner.inner_level [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3939.slice[0].carry: CO=\fx2_crossbar.out_fifo_0.inner.inner_level [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3954.slice[0].carry: CO=\i2c_target.bitno [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3957.slice[0].carry: CO=\multiplexer.U$$0.ModeCtrl.BeamController.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3960.slice[0].carry: CO=\multiplexer.U$$0.ModeCtrl.RasterModeCtrl.XYScanGen.x_counter.current_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3963.slice[0].carry: CO=\multiplexer.U$$0.MuxBus.sample_clock.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7113.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$8986.slice[0].carry: CO=1'0

2.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~33 debug messages>

2.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$7368 ($_SDFF_PP0_) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$606.Y_B, Q = \multiplexer.U$$0.eflnp, rval = 1'0).

2.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 5 unused wires.
<suppressed ~5 debug messages>

2.33.6. Rerunning OPT passes. (Removed registers in this run.)

2.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7113.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$8986.slice[1].carry: CO=1'0

2.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.10. Executing OPT_DFF pass (perform DFF optimizations).

2.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.12. Rerunning OPT passes. (Removed registers in this run.)

2.33.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7113.slice[2].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$8986.slice[2].carry: CO=1'0

2.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.16. Executing OPT_DFF pass (perform DFF optimizations).

2.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.18. Rerunning OPT passes. (Removed registers in this run.)

2.33.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$8986.slice[3].carry: CO=1'0

2.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.22. Executing OPT_DFF pass (perform DFF optimizations).

2.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.24. Rerunning OPT passes. (Removed registers in this run.)

2.33.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$8986.slice[4].carry: CO=1'0

2.33.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.28. Executing OPT_DFF pass (perform DFF optimizations).

2.33.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.30. Rerunning OPT passes. (Removed registers in this run.)

2.33.31. Running ICE40 specific optimizations.

2.33.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.34. Executing OPT_DFF pass (perform DFF optimizations).

2.33.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.36. Finished OPT passes. (There is nothing left to do.)

2.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~638 debug messages>

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~14 debug messages>

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$3912.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3915.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3918.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3921.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3924.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3927.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3930.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3933.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3936.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3939.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3954.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3957.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3960.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3963.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7113.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7113.slice[1].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7113.slice[2].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$8986.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$8986.slice[1].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$8986.slice[2].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$8986.slice[3].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$8986.slice[4].carry ($lut).

2.38. Executing ICE40_OPT pass (performing simple optimizations).

2.38.1. Running ICE40 specific optimizations.

2.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~729 debug messages>

2.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1791 debug messages>
Removed a total of 597 cells.

2.38.4. Executing OPT_DFF pass (perform DFF optimizations).

2.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 11 unused cells and 4183 unused wires.
<suppressed ~18 debug messages>

2.38.6. Rerunning OPT passes. (Removed registers in this run.)

2.38.7. Running ICE40 specific optimizations.

2.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.10. Executing OPT_DFF pass (perform DFF optimizations).

2.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.12. Rerunning OPT passes. (Removed registers in this run.)

2.38.13. Running ICE40 specific optimizations.

2.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.16. Executing OPT_DFF pass (perform DFF optimizations).

2.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.18. Finished OPT passes. (There is nothing left to do.)

2.39. Executing TECHMAP pass (map to technology primitives).

2.39.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.40. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

2.41. Executing ABC9 pass.

2.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module top.
Found 0 SCCs.

2.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.5. Executing PROC pass (convert processes to netlists).

2.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.41.5.4. Executing PROC_INIT pass (extract init attributes).

2.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

2.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.41.5.12. Executing OPT_EXPR pass (perform const folding).

2.41.6. Executing TECHMAP pass (map to technology primitives).

2.41.6.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~127 debug messages>

2.41.7. Executing OPT pass (performing simple optimizations).

2.41.7.1. Executing OPT_EXPR pass (perform const folding).

2.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

2.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

2.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

2.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

2.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

2.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

2.41.7.8. Executing OPT_EXPR pass (perform const folding).

2.41.7.9. Finished OPT passes. (There is nothing left to do.)

2.41.8. Executing TECHMAP pass (map to technology primitives).

2.41.8.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

2.41.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

2.41.9. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

2.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~1243 debug messages>

2.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

2.41.13. Executing TECHMAP pass (map to technology primitives).

2.41.13.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using template SB_CARRY for cells of type SB_CARRY.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~154 debug messages>

2.41.14. Executing OPT pass (performing simple optimizations).

2.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

2.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

2.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

2.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

2.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

2.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

2.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.41.14.16. Finished OPT passes. (There is nothing left to do.)

2.41.15. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

2.41.16. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 1940 cells with 10081 new cells, skipped 3903 cells.
  replaced 5 cell types:
    1122 $_OR_
     306 $_XOR_
       1 $_ANDNOT_
      32 $_ORNOT_
     479 $_MUX_
  not replaced 18 cell types:
     359 $_NOT_
    1416 $_AND_
      77 SB_IO
       1 SB_GB_IO
      52 SB_DFF
      55 SB_DFFE
      41 SB_DFFSR
     468 SB_DFFESR
      32 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000100010010
       4 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000100001011
       2 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000010000101
      32 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000010100001
       2 $paramod$f99246623db89700451daf7d443842de27e23616\SB_RAM40_4K
     191 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
      22 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011100000
     531 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011001011
       2 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000001100010
     616 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000010101

2.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.16.3. Executing XAIGER backend.
<suppressed ~659 debug messages>
Extracted 4926 AND gates and 14641 wires from module `top' to a netlist network with 725 inputs and 1445 outputs.

2.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

2.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    725/   1445  and =    4313  lev =   55 (3.23)  mem = 0.14 MB  box = 1432  bb = 1241
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    725/   1445  and =    3959  lev =   42 (2.48)  mem = 0.14 MB  ch =  155  box = 1432  bb = 1241
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =    3959.  Ch =   136.  Total mem =    1.37 MB. Peak cut mem =    0.10 MB.
ABC: P:  Del = 10907.00.  Ar =    1599.0.  Edge =     5764.  Cut =    26978.  T =     0.00 sec
ABC: P:  Del = 10844.00.  Ar =    1524.0.  Edge =     5733.  Cut =    26639.  T =     0.00 sec
ABC: P:  Del = 10844.00.  Ar =    1395.0.  Edge =     4620.  Cut =    27653.  T =     0.00 sec
ABC: F:  Del = 10844.00.  Ar =    1313.0.  Edge =     4505.  Cut =    23340.  T =     0.00 sec
ABC: A:  Del = 10844.00.  Ar =    1290.0.  Edge =     4287.  Cut =    23629.  T =     0.00 sec
ABC: A:  Del = 10844.00.  Ar =    1287.0.  Edge =     4281.  Cut =    23514.  T =     0.00 sec
ABC: Total time =     0.02 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    725/   1445  and =    4303  lev =   45 (2.36)  mem = 0.14 MB  box = 1432  bb = 1241
ABC: Mapping (K=4)  :  lut =   1253  edge =    4140  lev =   16 (1.23)  levB =   37  mem = 0.06 MB
ABC: LUT = 1253 : 2=262 20.9 %  3=348 27.8 %  4=643 51.3 %  Ave = 3.30
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.66 seconds, total: 0.66 seconds

2.41.16.6. Executing AIGER frontend.
<suppressed ~4352 debug messages>
Removed 6134 unused cells and 12202 unused wires.

2.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     1318
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      191
ABC RESULTS:           input signals:      121
ABC RESULTS:          output signals:     1418
Removing temp directory.

2.41.17. Executing TECHMAP pass (map to technology primitives).

2.41.17.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

2.41.17.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod$f99246623db89700451daf7d443842de27e23616\SB_RAM40_4K for cells of type $paramod$f99246623db89700451daf7d443842de27e23616\SB_RAM40_4K.
No more expansions possible.
<suppressed ~200 debug messages>

2.42. Executing ICE40_WRAPCARRY pass (wrap carries).

2.43. Executing TECHMAP pass (map to technology primitives).

2.43.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 299 unused cells and 16587 unused wires.

2.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1456
  1-LUT               65
  2-LUT              276
  3-LUT              470
  4-LUT              645
  with \SB_CARRY    (#0)  119
  with \SB_CARRY    (#1)  121

Eliminating LUTs.
Number of LUTs:     1456
  1-LUT               65
  2-LUT              276
  3-LUT              470
  4-LUT              645
  with \SB_CARRY    (#0)  119
  with \SB_CARRY    (#1)  121

Combining LUTs.
Number of LUTs:     1404
  1-LUT               65
  2-LUT              219
  3-LUT              428
  4-LUT              692
  with \SB_CARRY    (#0)  119
  with \SB_CARRY    (#1)  121

Eliminated 0 LUTs.
Combined 52 LUTs.
<suppressed ~7048 debug messages>

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod$58df2c605746858c7e53492c8f57d6f1fafa12d2\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$97e449d15b607612c49291044eca4e2c8b59088e\$lut for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$7491e7206ae8c682d288373efe06a43b67c277cf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000101 for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$d61dc5ff3a9102f3e1b420770cb57c48730b6a64\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod$ba7c22fadfbf9ee7abcb895a21403114111dd201\$lut for cells of type $lut.
Using template $paramod$b86b68a00733dbecb31d58a14a13683475a2002a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$4834046533425f54583d6bd31e49deb63455e1a5\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$adb84e058b0f32ce56f004e6ffa19883ace75fc0\$lut for cells of type $lut.
Using template $paramod$cf93df6a751c015d454aef52e32716809f254f3e\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$a4dc042990bf0f48722f562498103f0e30d86f49\$lut for cells of type $lut.
Using template $paramod$2955ab75367a3dc9d6f50d3655eebcd4f615031f\$lut for cells of type $lut.
Using template $paramod$b600d182ae966d09f33a746441e104587fe7a58f\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010111 for cells of type $lut.
Using template $paramod$0abe4e2ff3255c188b048bf35af20e8558580054\$lut for cells of type $lut.
Using template $paramod$3f6fe0730f7978b946a57d55a78e206b053e637b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$2f2b9b736b3ea0a0b958cef6434418c8f6a25d02\$lut for cells of type $lut.
Using template $paramod$718208d0d7c444e4924e09c40d40e7ac2bd4dfe6\$lut for cells of type $lut.
Using template $paramod$610895a8fdbf27a4d2da55f6513bb969354802ea\$lut for cells of type $lut.
Using template $paramod$a41d0e3b97911dca5b893a7d849ab04257ab9d97\$lut for cells of type $lut.
Using template $paramod$c6705c2d9a5ca1e5236b47844e83005fc173deff\$lut for cells of type $lut.
Using template $paramod$ef14303192218c8dd28cb97c03357085cb7c4d4d\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod$4cab3b31c601551ff65536bf4f533afa0b2094ee\$lut for cells of type $lut.
Using template $paramod$8d3ce9be81cff69f90f3cfd65305257300b4cb85\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$250e9ed6c15020113b6b30a5ef7c8f11f208ca8e\$lut for cells of type $lut.
Using template $paramod$10b7b810a6a6f18bc62789393bbe16e6a166c87b\$lut for cells of type $lut.
Using template $paramod$4385b611926e5c0509dba4de58311d325da0ff0d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$733f55a5531d9375efc406ec64b57604c3ff67d5\$lut for cells of type $lut.
Using template $paramod$865395c0228487a64a8e4011cecafc2c64b79f2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$6a16e4fccb8eed964c3fc9fdc636ddabebf4f44e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$c958b3a888f937f082b94811ff62d71e32a2b4eb\$lut for cells of type $lut.
Using template $paramod$58bd588a49a6a3b9d057d75f907cb4932e1635f6\$lut for cells of type $lut.
Using template $paramod$9c9c977d4ef412c658600f27af104e72c77928d0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100111 for cells of type $lut.
Using template $paramod$a70c36ce9c272ff5b653554a904c7bf311d2f478\$lut for cells of type $lut.
Using template $paramod$290d57e1500747537d7d777ca08fb349661e9d21\$lut for cells of type $lut.
Using template $paramod$6af3193cff8959eff535b8dd97d787590af55f14\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101000 for cells of type $lut.
Using template $paramod$277dcd4f32f9ff0b69173d34a380238aee0f3973\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod$16894c241be5ea1f024e9339dea788b4dbe184ae\$lut for cells of type $lut.
Using template $paramod$234bf0b8008173938795a53831f595f8ec3ba6eb\$lut for cells of type $lut.
Using template $paramod$02859f772411965da36bc7da3b343c9659e6a4ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$3b56205e0e57b3ea26d80fc7983017f83663129e\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001001 for cells of type $lut.
Using template $paramod$6000da44b315906c2673c3cb4c3beee5a3b31e12\$lut for cells of type $lut.
Using template $paramod$b447b693193baa761a41f4ae4f086f3968e3955e\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$fe7077462a386258cea7b409718bda7873cfae08\$lut for cells of type $lut.
Using template $paramod$6f625205336ac6ce7b8747324becdbce1049bc9c\$lut for cells of type $lut.
Using template $paramod$ee7954db7791f7dba0d0a60c296cfdde356f0714\$lut for cells of type $lut.
Using template $paramod$cffc8d1fa08931a41971712dc3d39cc5818fb4bc\$lut for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod$bc9180cdfcd49ad6f178d338e90551ccba0f90ae\$lut for cells of type $lut.
Using template $paramod$6be53ab59e0a69757fc32adb071ddcb64e8c87b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$234fd643079033ba0cbc98ff572df9b7b7a0dc86\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod$1f116a4fc36138e62c139e0719579ffdfdaf55b4\$lut for cells of type $lut.
Using template $paramod$8d7a8d6e3356de09670738ba85f2c6b874f6b06d\$lut for cells of type $lut.
Using template $paramod$b26fbfdb68e98cf016d61a8611b449e9f4a30f3c\$lut for cells of type $lut.
Using template $paramod$eaea85d27cc0950ed001348e061727a194f5cf9c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$9ef9790dd9d408e00ceac72aae74cbcc194f5d9f\$lut for cells of type $lut.
Using template $paramod$e0286d7bdebdb6346cb367bb1962e01892ba2e32\$lut for cells of type $lut.
Using template $paramod$4804ba902596a9a62ec5704b6cbf7afdc5ab29d6\$lut for cells of type $lut.
Using template $paramod$034a69dd110db95ee917f313eafd6833fc6595f9\$lut for cells of type $lut.
Using template $paramod$29e6d4598488760861f6b73d2b7f65cb302fdcde\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod$32abbd1d449a67fb913b4733374e345d4c17175b\$lut for cells of type $lut.
Using template $paramod$219b71aec9a19e7a27754ed85a7d6cdad9e5ec96\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$514d6e5b9465b6f4c981141a4c7e529b7ce461a1\$lut for cells of type $lut.
Using template $paramod$413d040dcd860cd74ca61a70644516a95d328ae7\$lut for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod$a1cfe99817bd6d57a83efd5e1c3fc26a743b692f\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$2953feb5e102bcccc236b4c0e38de7253e9dd640\$lut for cells of type $lut.
Using template $paramod$239a649c3c5dcff42e28a38401931acf401ef810\$lut for cells of type $lut.
Using template $paramod$097153982708ad51b09797fee31ad916db08d575\$lut for cells of type $lut.
Using template $paramod$255b0049df4cb49b23955e4a3117758a889578dd\$lut for cells of type $lut.
Using template $paramod$8614da24b3846fe751594d00fba789cfcb7b874c\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000100 for cells of type $lut.
Using template $paramod$519b6e2dbfd66920b2d4aeae7cc975bcfc27990a\$lut for cells of type $lut.
Using template $paramod$acf49cb7bd2805dee4b4ebb218aa5924b1be7704\$lut for cells of type $lut.
Using template $paramod$3f3d19799fe0d8c5eadeb5069383f24156e85897\$lut for cells of type $lut.
Using template $paramod$a63d84c9dd26caf4e75c7cc2f6f70f64a5b14aa1\$lut for cells of type $lut.
Using template $paramod$23a44c557d8b0c41a23d6c16083c7af93f76ea34\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001110 for cells of type $lut.
Using template $paramod$df6b12cebabc3b2db650658c5e894d03a346e968\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$9a269ffb0efb6ad342cb106a4e0636e23fdfd547\$lut for cells of type $lut.
Using template $paramod$8466aae7f3132f822e70bbd8738850d820750479\$lut for cells of type $lut.
Using template $paramod$45bc8a035811672fb24512b03898abf475979d07\$lut for cells of type $lut.
Using template $paramod$37275f9005096a8b3beded7be16e5d19f7397fa0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001101 for cells of type $lut.
Using template $paramod$3fbf9e179448527cc5870685155541058c0f9f7a\$lut for cells of type $lut.
Using template $paramod$3cd7ba4e37ac845a21f7d679f20c35087949289b\$lut for cells of type $lut.
Using template $paramod$ec6c71d259df49ae0842190ffaff1179e43a8db4\$lut for cells of type $lut.
Using template $paramod$310dc7912bb5756ab08137f6868c0abbecf66466\$lut for cells of type $lut.
Using template $paramod$dd7c1583fe0ade167c7826c594e5d16b758a72fe\$lut for cells of type $lut.
Using template $paramod$4bf055ca8a75a6b2e0a7cc21f3141b6576bbc879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010101 for cells of type $lut.
Using template $paramod$9a20e5eb914da7530de8ea5af782be66b9acb237\$lut for cells of type $lut.
Using template $paramod$5307f40f1b453046eb68ee1a10c3f82d605af6fc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$031639056602a9dab4a0894878194a35372df974\$lut for cells of type $lut.
Using template $paramod$a4b09ab155a7d006f93ce393ab43ef0f0eacbc9e\$lut for cells of type $lut.
Using template $paramod$e1ed79c0cf8e1eb859c3fb6c12aef8c739555508\$lut for cells of type $lut.
Using template $paramod$9ea238b3c4036add2bd96e5aaac8768e1ad77c5a\$lut for cells of type $lut.
Using template $paramod$f59b1af0bc9f30c20f80e901f1a504115c863612\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101011 for cells of type $lut.
Using template $paramod$f4a57baab64c324d23e33ace5aa73e6c32ea0405\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000111 for cells of type $lut.
Using template $paramod$6fd8d7b95f8296a1a157dc83fba6a7866d57f281\$lut for cells of type $lut.
Using template $paramod$f0523e491c61256768c054c02f31e4957edb6109\$lut for cells of type $lut.
Using template $paramod$77ab94a08ffff4d7c841b8b03bb4ee5b5303db7f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101010 for cells of type $lut.
Using template $paramod$cfe658add7b49bc6805d629e0a88423d427de396\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$e46703b423a661cd7d311c41833ea655969702cc\$lut for cells of type $lut.
Using template $paramod$303607065f6eb15d8928442960164bdd7e8c8c39\$lut for cells of type $lut.
Using template $paramod$daac9b1e7bb2ac018f7132a3fbe0026ddd7b1a71\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$762dcdf49521c1aa2145fa6746ab6d57dd5df22e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$09db1b832f9e1cae5c3d7feed1f3bed172b082fb\$lut for cells of type $lut.
Using template $paramod$ea9f0804ffa1047d479d3e00429394419ff5856b\$lut for cells of type $lut.
Using template $paramod$908a274b55b4a97121027dd10242798b841faf7a\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$8d6488bf3eded5ffc8423c5b07a7c26381708325\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111101 for cells of type $lut.
Using template $paramod$27331a24b2c1dcbe1b3eefac456a3f892f3b23d2\$lut for cells of type $lut.
Using template $paramod$50f7e15b535aea3b809b98699236d9eaaff81565\$lut for cells of type $lut.
Using template $paramod$620586420e818d3afa7e5b51fcf19f5c6ea83ad4\$lut for cells of type $lut.
Using template $paramod$cd05caaf261e4148f336c0ecc488c806e4433d99\$lut for cells of type $lut.
Using template $paramod$d017bb1379dfae5c49537b3fbd1cdc27d426859f\$lut for cells of type $lut.
Using template $paramod$1632c1c0242796acfc963a05742c4acd2f475c4e\$lut for cells of type $lut.
Using template $paramod$3e63470ea7a06b3eefdfb990254dd83d20fa13a7\$lut for cells of type $lut.
Using template $paramod$eab8c2e20ad6848564bec45c7148558972138f5b\$lut for cells of type $lut.
Using template $paramod$8384e66d408d22ab39dfb451efb7879731befeb8\$lut for cells of type $lut.
Using template $paramod$32c48a69e3acd22031599a3593da71076425a763\$lut for cells of type $lut.
Using template $paramod$ca2532991f2c847ac990e1deeca1e91108bc2da0\$lut for cells of type $lut.
Using template $paramod$21f957a7073b1ba634cad0df400394ca323de2fc\$lut for cells of type $lut.
Using template $paramod$1d45edc614defc815d133246b330a66b08944a6c\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$1b0f69f0f1eadfdbabb12c16b846a5e89746fd2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110011 for cells of type $lut.
Using template $paramod$44ed8d08d91fc8a474e535e2b1bd5026ed8a67bd\$lut for cells of type $lut.
Using template $paramod$6deead41a97e885fdfb7651ed7486bc07c319d2a\$lut for cells of type $lut.
Using template $paramod$eb01f637a672cf308f7155156d1845297732182e\$lut for cells of type $lut.
Using template $paramod$d9fc5fb4745e58600f67710293bac14c7b88c4ae\$lut for cells of type $lut.
Using template $paramod$286ed3273cbe066b6afe10d043ec3b66405aa78e\$lut for cells of type $lut.
Using template $paramod$a50bbaf70b48eb6d78317eddf4f7e11e8988acec\$lut for cells of type $lut.
Using template $paramod$aa79b66d99645f2c6597509fe375a3cb97da6e36\$lut for cells of type $lut.
Using template $paramod$373d637619c29cb9150902df9528107e5f3b8288\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011101 for cells of type $lut.
Using template $paramod$325e90edf97670f9dea57833ae1f51a5e8bcddea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod$fca001e3e0b52158a872e76e56c01ec10dfbb1de\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~4488 debug messages>
Removed 0 unused cells and 3294 unused wires.

2.46. Executing AUTONAME pass.
Renamed 66369 objects in module top (143 iterations).
<suppressed ~3366 debug messages>

2.47. Executing HIERARCHY pass (managing design hierarchy).

2.47.1. Analyzing design hierarchy..
Top module:  \top

2.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.48. Printing statistics.

=== top ===

   Number of wires:               2189
   Number of wire bits:           6097
   Number of public wires:        2189
   Number of public wire bits:    6097
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2275
     SB_CARRY                      175
     SB_DFF                         52
     SB_DFFE                        55
     SB_DFFESR                     468
     SB_DFFSR                       41
     SB_GB_IO                        1
     SB_IO                          77
     SB_LUT4                      1404
     SB_RAM40_4K                     2

2.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3. Executing JSON backend.

End of script. Logfile hash: c976e55e08, CPU: user 4.85s system 0.09s
Yosys 0.33 (git sha1 2584903a060, clang 14.0.3 -fPIC -Os)
Time spent: 19% 47x opt_expr (1 sec), 13% 1x abc9_exe (0 sec), ...
