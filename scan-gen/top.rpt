
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33 (git sha1 2584903a060, clang 14.0.3 -fPIC -Os)


-- Executing script file `top.ys' --

1. Executing RTLIL frontend.
Input filename: top.il

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \top.pin_clk_if_0
Used module:     \top.pin_data_0__D14
Used module:     \top.pin_data_0__D13
Used module:     \top.pin_data_0__D12
Used module:     \top.pin_data_0__D11
Used module:     \top.pin_data_0__D10
Used module:     \top.pin_data_0__D9
Used module:     \top.pin_data_0__D8
Used module:     \top.pin_data_0__D7
Used module:     \top.pin_data_0__D6
Used module:     \top.pin_data_0__D5
Used module:     \top.pin_data_0__D4
Used module:     \top.pin_data_0__D3
Used module:     \top.pin_data_0__D2
Used module:     \top.pin_data_0__D1
Used module:     \top.pin_power_ok_0
Used module:     \top.pin_control_0__D24
Used module:     \top.pin_control_0__D23
Used module:     \top.pin_control_0__D22
Used module:     \top.pin_control_0__D21
Used module:     \top.pin_control_0__D20
Used module:     \top.pin_control_0__D19
Used module:     \top.pin_control_0__D18
Used module:     \top.pin_control_0__D17
Used module:     \top.pin_port_b_6__oe
Used module:     \top.pin_port_b_6__io
Used module:     \top.pin_port_b_7__oe
Used module:     \top.pin_port_b_7__io
Used module:     \top.pin_port_b_5__oe
Used module:     \top.pin_port_b_5__io
Used module:     \top.pin_port_b_4__oe
Used module:     \top.pin_port_b_4__io
Used module:     \top.pin_port_b_3__oe
Used module:     \top.pin_port_b_3__io
Used module:     \top.pin_port_b_2__oe
Used module:     \top.pin_port_b_2__io
Used module:     \top.pin_port_b_1__oe
Used module:     \top.pin_port_b_1__io
Used module:     \top.pin_port_b_0__oe
Used module:     \top.pin_port_b_0__io
Used module:     \top.pin_port_a_7__oe
Used module:     \top.pin_port_a_7__io
Used module:     \top.pin_port_a_6__oe
Used module:     \top.pin_port_a_6__io
Used module:     \top.pin_port_a_5__oe
Used module:     \top.pin_port_a_5__io
Used module:     \top.pin_port_a_4__oe
Used module:     \top.pin_port_a_4__io
Used module:     \top.pin_port_a_3__oe
Used module:     \top.pin_port_a_3__io
Used module:     \top.pin_port_a_2__oe
Used module:     \top.pin_port_a_2__io
Used module:     \top.pin_port_a_1__oe
Used module:     \top.pin_port_a_1__io
Used module:     \top.pin_port_a_0__oe
Used module:     \top.pin_port_a_0__io
Used module:     \top.pin_fx2_0__fd
Used module:     \top.pin_fx2_0__flag
Used module:     \top.pin_fx2_0__fifoadr
Used module:     \top.pin_fx2_0__pktend
Used module:     \top.pin_fx2_0__slwr
Used module:     \top.pin_fx2_0__slrd
Used module:     \top.pin_fx2_0__sloe
Used module:     \top.pin_i2c_0__sda
Used module:     \top.pin_i2c_0__scl
Used module:     \top.pin_unused_0
Used module:     \top.cd_sync
Used module:     \top.multiplexer
Used module:         \top.multiplexer.U$$0
Used module:             \top.multiplexer.U$$0.ByteReplace
Used module:             \top.multiplexer.U$$0.DwellAvgr
Used module:             \top.multiplexer.U$$0.YInt
Used module:             \top.multiplexer.U$$0.XInt
Used module:             \top.multiplexer.U$$0.XYScanGen
Used module:                 \top.multiplexer.U$$0.XYScanGen.y_counter
Used module:                 \top.multiplexer.U$$0.XYScanGen.x_counter
Used module:             \top.multiplexer.U$$0.VectorReader
Used module:             \top.multiplexer.U$$0.RasterReader
Used module:             \top.multiplexer.U$$0.Writer
Used module:             \top.multiplexer.U$$0.1byteWriter
Used module:             \top.multiplexer.U$$0.BeamController
Used module:             \top.multiplexer.U$$0.ConfigHdlr
Used module:             \top.multiplexer.U$$0.MuxBus
Used module:                 \top.multiplexer.U$$0.MuxBus.sample_clock
Used module:                 \top.multiplexer.U$$0.MuxBus.a_adc
Used module:                 \top.multiplexer.U$$0.MuxBus.y_dac
Used module:                 \top.multiplexer.U$$0.MuxBus.x_dac
Used module:     \top.fx2_crossbar
Used module:         \top.fx2_crossbar.out_fifo_0
Used module:             \top.fx2_crossbar.out_fifo_0.skid
Used module:             \top.fx2_crossbar.out_fifo_0.inner
Used module:         \top.fx2_crossbar.in_fifo_0
Used module:             \top.fx2_crossbar.in_fifo_0.inner
Used module:         \top.fx2_crossbar.bus
Used module:     \top.registers
Used module:     \top.i2c_target
Used module:         \top.i2c_target.bus
Used module:             \top.i2c_target.bus.U$$1
Used module:             \top.i2c_target.bus.U$$0

2.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \top.pin_clk_if_0
Used module:     \top.pin_data_0__D14
Used module:     \top.pin_data_0__D13
Used module:     \top.pin_data_0__D12
Used module:     \top.pin_data_0__D11
Used module:     \top.pin_data_0__D10
Used module:     \top.pin_data_0__D9
Used module:     \top.pin_data_0__D8
Used module:     \top.pin_data_0__D7
Used module:     \top.pin_data_0__D6
Used module:     \top.pin_data_0__D5
Used module:     \top.pin_data_0__D4
Used module:     \top.pin_data_0__D3
Used module:     \top.pin_data_0__D2
Used module:     \top.pin_data_0__D1
Used module:     \top.pin_power_ok_0
Used module:     \top.pin_control_0__D24
Used module:     \top.pin_control_0__D23
Used module:     \top.pin_control_0__D22
Used module:     \top.pin_control_0__D21
Used module:     \top.pin_control_0__D20
Used module:     \top.pin_control_0__D19
Used module:     \top.pin_control_0__D18
Used module:     \top.pin_control_0__D17
Used module:     \top.pin_port_b_6__oe
Used module:     \top.pin_port_b_6__io
Used module:     \top.pin_port_b_7__oe
Used module:     \top.pin_port_b_7__io
Used module:     \top.pin_port_b_5__oe
Used module:     \top.pin_port_b_5__io
Used module:     \top.pin_port_b_4__oe
Used module:     \top.pin_port_b_4__io
Used module:     \top.pin_port_b_3__oe
Used module:     \top.pin_port_b_3__io
Used module:     \top.pin_port_b_2__oe
Used module:     \top.pin_port_b_2__io
Used module:     \top.pin_port_b_1__oe
Used module:     \top.pin_port_b_1__io
Used module:     \top.pin_port_b_0__oe
Used module:     \top.pin_port_b_0__io
Used module:     \top.pin_port_a_7__oe
Used module:     \top.pin_port_a_7__io
Used module:     \top.pin_port_a_6__oe
Used module:     \top.pin_port_a_6__io
Used module:     \top.pin_port_a_5__oe
Used module:     \top.pin_port_a_5__io
Used module:     \top.pin_port_a_4__oe
Used module:     \top.pin_port_a_4__io
Used module:     \top.pin_port_a_3__oe
Used module:     \top.pin_port_a_3__io
Used module:     \top.pin_port_a_2__oe
Used module:     \top.pin_port_a_2__io
Used module:     \top.pin_port_a_1__oe
Used module:     \top.pin_port_a_1__io
Used module:     \top.pin_port_a_0__oe
Used module:     \top.pin_port_a_0__io
Used module:     \top.pin_fx2_0__fd
Used module:     \top.pin_fx2_0__flag
Used module:     \top.pin_fx2_0__fifoadr
Used module:     \top.pin_fx2_0__pktend
Used module:     \top.pin_fx2_0__slwr
Used module:     \top.pin_fx2_0__slrd
Used module:     \top.pin_fx2_0__sloe
Used module:     \top.pin_i2c_0__sda
Used module:     \top.pin_i2c_0__scl
Used module:     \top.pin_unused_0
Used module:     \top.cd_sync
Used module:     \top.multiplexer
Used module:         \top.multiplexer.U$$0
Used module:             \top.multiplexer.U$$0.ByteReplace
Used module:             \top.multiplexer.U$$0.DwellAvgr
Used module:             \top.multiplexer.U$$0.YInt
Used module:             \top.multiplexer.U$$0.XInt
Used module:             \top.multiplexer.U$$0.XYScanGen
Used module:                 \top.multiplexer.U$$0.XYScanGen.y_counter
Used module:                 \top.multiplexer.U$$0.XYScanGen.x_counter
Used module:             \top.multiplexer.U$$0.VectorReader
Used module:             \top.multiplexer.U$$0.RasterReader
Used module:             \top.multiplexer.U$$0.Writer
Used module:             \top.multiplexer.U$$0.1byteWriter
Used module:             \top.multiplexer.U$$0.BeamController
Used module:             \top.multiplexer.U$$0.ConfigHdlr
Used module:             \top.multiplexer.U$$0.MuxBus
Used module:                 \top.multiplexer.U$$0.MuxBus.sample_clock
Used module:                 \top.multiplexer.U$$0.MuxBus.a_adc
Used module:                 \top.multiplexer.U$$0.MuxBus.y_dac
Used module:                 \top.multiplexer.U$$0.MuxBus.x_dac
Used module:     \top.fx2_crossbar
Used module:         \top.fx2_crossbar.out_fifo_0
Used module:             \top.fx2_crossbar.out_fifo_0.skid
Used module:             \top.fx2_crossbar.out_fifo_0.inner
Used module:         \top.fx2_crossbar.in_fifo_0
Used module:             \top.fx2_crossbar.in_fifo_0.inner
Used module:         \top.fx2_crossbar.bus
Used module:     \top.registers
Used module:     \top.i2c_target
Used module:         \top.i2c_target.bus
Used module:             \top.i2c_target.bus.U$$1
Used module:             \top.i2c_target.bus.U$$0
Removed 0 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $group_2 in module top.cd_sync.
Marked 1 switch rules as full_case in process $group_167 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_155 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_152 in module top.multiplexer.U$$0.
Marked 3 switch rules as full_case in process $group_151 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_150 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_148 in module top.multiplexer.U$$0.
Marked 3 switch rules as full_case in process $group_147 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_126 in module top.multiplexer.U$$0.
Marked 2 switch rules as full_case in process $group_122 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_121 in module top.multiplexer.U$$0.
Marked 1 switch rules as full_case in process $group_120 in module top.multiplexer.U$$0.
Marked 2 switch rules as full_case in process $group_4 in module top.multiplexer.U$$0.ByteReplace.
Marked 2 switch rules as full_case in process $group_3 in module top.multiplexer.U$$0.XYScanGen.y_counter.
Marked 2 switch rules as full_case in process $group_2 in module top.multiplexer.U$$0.XYScanGen.y_counter.
Marked 2 switch rules as full_case in process $group_3 in module top.multiplexer.U$$0.XYScanGen.x_counter.
Marked 2 switch rules as full_case in process $group_2 in module top.multiplexer.U$$0.XYScanGen.x_counter.
Marked 1 switch rules as full_case in process $group_1 in module top.multiplexer.U$$0.VectorReader.
Marked 1 switch rules as full_case in process $group_0 in module top.multiplexer.U$$0.VectorReader.
Marked 1 switch rules as full_case in process $group_1 in module top.multiplexer.U$$0.RasterReader.
Marked 1 switch rules as full_case in process $group_0 in module top.multiplexer.U$$0.RasterReader.
Marked 1 switch rules as full_case in process $group_4 in module top.multiplexer.U$$0.Writer.
Marked 1 switch rules as full_case in process $group_6 in module top.multiplexer.U$$0.1byteWriter.
Marked 2 switch rules as full_case in process $group_5 in module top.multiplexer.U$$0.1byteWriter.
Marked 1 switch rules as full_case in process $group_4 in module top.multiplexer.U$$0.1byteWriter.
Marked 1 switch rules as full_case in process $group_2 in module top.multiplexer.U$$0.1byteWriter.
Marked 1 switch rules as full_case in process $group_1 in module top.multiplexer.U$$0.1byteWriter.
Marked 1 switch rules as full_case in process $group_8 in module top.multiplexer.U$$0.BeamController.
Marked 1 switch rules as full_case in process $group_7 in module top.multiplexer.U$$0.BeamController.
Marked 1 switch rules as full_case in process $group_6 in module top.multiplexer.U$$0.BeamController.
Marked 2 switch rules as full_case in process $group_5 in module top.multiplexer.U$$0.BeamController.
Marked 2 switch rules as full_case in process $group_8 in module top.multiplexer.U$$0.ConfigHdlr.
Marked 2 switch rules as full_case in process $group_2 in module top.multiplexer.U$$0.ConfigHdlr.
Marked 1 switch rules as full_case in process $group_0 in module top.multiplexer.U$$0.MuxBus.sample_clock.
Marked 1 switch rules as full_case in process $group_17 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_16 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_15 in module top.fx2_crossbar.
Marked 7 switch rules as full_case in process $group_14 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_13 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_11 in module top.fx2_crossbar.
Marked 2 switch rules as full_case in process $group_9 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_6 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_4 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_2 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_1 in module top.fx2_crossbar.
Marked 1 switch rules as full_case in process $group_5 in module top.fx2_crossbar.out_fifo_0.
Marked 1 switch rules as full_case in process $group_4 in module top.fx2_crossbar.out_fifo_0.
Marked 1 switch rules as full_case in process $group_3 in module top.fx2_crossbar.out_fifo_0.
Marked 2 switch rules as full_case in process $group_5 in module top.registers.
Marked 2 switch rules as full_case in process $group_4 in module top.registers.
Marked 1 switch rules as full_case in process $group_2 in module top.registers.
Marked 1 switch rules as full_case in process $group_11 in module top.i2c_target.
Marked 1 switch rules as full_case in process $group_5 in module top.i2c_target.
Marked 1 switch rules as full_case in process $group_4 in module top.i2c_target.
Marked 3 switch rules as full_case in process $group_0 in module top.i2c_target.
Removed a total of 0 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 235 redundant assignments.
Promoted 231 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$181'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$175'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$170'.
  Set init value: \Q = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Found async reset \R in `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Found async reset \S in `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Found async reset \R in `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Found async reset \S in `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Found async reset \R in `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Found async reset \S in `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Found async reset \R in `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176'.

2.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~668 debug messages>

2.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Creating decoders for process `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:922$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Creating decoders for process `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Creating decoders for process `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Creating decoders for process `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Creating decoders for process `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Creating decoders for process `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Creating decoders for process `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:311$171'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Creating decoders for process `\SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Creating decoders for process `\top.$group_1'.
Creating decoders for process `\top.$group_0'.
Creating decoders for process `\top.cd_sync.$group_4'.
Creating decoders for process `\top.cd_sync.$group_3'.
Creating decoders for process `\top.cd_sync.$group_2'.
     1/1: \timer$next
Creating decoders for process `\top.cd_sync.$group_1'.
     1/1: \ready$next
Creating decoders for process `\top.cd_sync.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.$group_170'.
     1/1: \r_en$85
Creating decoders for process `\top.multiplexer.U$$0.$group_169'.
     1/1: \w_en$70
Creating decoders for process `\top.multiplexer.U$$0.$group_168'.
     1/1: \ConfigHdlr_write_happened
Creating decoders for process `\top.multiplexer.U$$0.$group_167'.
     1/1: \read_strobe
Creating decoders for process `\top.multiplexer.U$$0.$group_166'.
     1/1: \VectorReader_data_used
Creating decoders for process `\top.multiplexer.U$$0.$group_165'.
     1/1: \VectorReader_out_fifo_r_data
Creating decoders for process `\top.multiplexer.U$$0.$group_164'.
     1/1: \VectorReader_read_happened
Creating decoders for process `\top.multiplexer.U$$0.$group_163'.
     1/1: \RasterReader_read_happened
Creating decoders for process `\top.multiplexer.U$$0.$group_162'.
     1/1: \RasterReader_out_fifo_r_data
Creating decoders for process `\top.multiplexer.U$$0.$group_161'.
     1/1: \reader_data_fresh
Creating decoders for process `\top.multiplexer.U$$0.$group_160'.
     1/1: \BeamController_next_dwell
Creating decoders for process `\top.multiplexer.U$$0.$group_159'.
     1/1: \RasterReader_data_used
Creating decoders for process `\top.multiplexer.U$$0.$group_158'.
     1/1: \YInt_input
Creating decoders for process `\top.multiplexer.U$$0.$group_157'.
     1/1: \XInt_input
Creating decoders for process `\top.multiplexer.U$$0.$group_156'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.$group_155'.
     1/1: \BeamController_dwelling
Creating decoders for process `\top.multiplexer.U$$0.$group_154'.
     1/1: \write_this_point
Creating decoders for process `\top.multiplexer.U$$0.$group_153'.
     1/1: \data_stale$next
Creating decoders for process `\top.multiplexer.U$$0.$group_152'.
     1/1: \Writer_strobe_in
Creating decoders for process `\top.multiplexer.U$$0.$group_151'.
     1/1: \Writer_write_happened
Creating decoders for process `\top.multiplexer.U$$0.$group_150'.
     1/1: \Writer_data_c
Creating decoders for process `\top.multiplexer.U$$0.$group_149'.
     1/1: \1byteWriter_strobe_in
Creating decoders for process `\top.multiplexer.U$$0.$group_148'.
     1/1: \1byteWriter_write_happened
Creating decoders for process `\top.multiplexer.U$$0.$group_147'.
     1/1: \w_data
Creating decoders for process `\top.multiplexer.U$$0.$group_146'.
     1/1: \1byteWriter_data_c
Creating decoders for process `\top.multiplexer.U$$0.$group_145'.
Creating decoders for process `\top.multiplexer.U$$0.$group_144'.
Creating decoders for process `\top.multiplexer.U$$0.$group_143'.
Creating decoders for process `\top.multiplexer.U$$0.$group_142'.
Creating decoders for process `\top.multiplexer.U$$0.$group_141'.
Creating decoders for process `\top.multiplexer.U$$0.$group_140'.
Creating decoders for process `\top.multiplexer.U$$0.$group_139'.
Creating decoders for process `\top.multiplexer.U$$0.$group_138'.
Creating decoders for process `\top.multiplexer.U$$0.$group_137'.
     1/1: \XYScanGen_y_full_frame_resolution
Creating decoders for process `\top.multiplexer.U$$0.$group_136'.
     1/1: \XYScanGen_x_full_frame_resolution
Creating decoders for process `\top.multiplexer.U$$0.$group_135'.
Creating decoders for process `\top.multiplexer.U$$0.$group_134'.
Creating decoders for process `\top.multiplexer.U$$0.$group_133'.
Creating decoders for process `\top.multiplexer.U$$0.$group_132'.
Creating decoders for process `\top.multiplexer.U$$0.$group_131'.
Creating decoders for process `\top.multiplexer.U$$0.$group_130'.
Creating decoders for process `\top.multiplexer.U$$0.$group_129'.
Creating decoders for process `\top.multiplexer.U$$0.$group_128'.
     1/1: \XYScanGen_increment
Creating decoders for process `\top.multiplexer.U$$0.$group_127'.
     1/1: \DwellAvgr_start_new_average
Creating decoders for process `\top.multiplexer.U$$0.$group_126'.
     1/1: \BeamController_lock_new_point
Creating decoders for process `\top.multiplexer.U$$0.$group_125'.
     1/1: \load_next_point
Creating decoders for process `\top.multiplexer.U$$0.$group_124'.
     1/1: \asdf$next
Creating decoders for process `\top.multiplexer.U$$0.$group_123'.
     1/1: \eflnp$next
Creating decoders for process `\top.multiplexer.U$$0.$group_122'.
     1/1: \write_strobe
Creating decoders for process `\top.multiplexer.U$$0.$group_121'.
     1/1: \config_flag_latched$next
Creating decoders for process `\top.multiplexer.U$$0.$group_120'.
     1/1: \ConfigHdlr_configuration_flag
Creating decoders for process `\top.multiplexer.U$$0.$group_119'.
Creating decoders for process `\top.multiplexer.U$$0.$group_118'.
Creating decoders for process `\top.multiplexer.U$$0.$group_117'.
Creating decoders for process `\top.multiplexer.U$$0.$group_116'.
Creating decoders for process `\top.multiplexer.U$$0.$group_115'.
Creating decoders for process `\top.multiplexer.U$$0.$group_114'.
Creating decoders for process `\top.multiplexer.U$$0.$group_113'.
Creating decoders for process `\top.multiplexer.U$$0.$group_112'.
Creating decoders for process `\top.multiplexer.U$$0.$group_111'.
     1/1: \DwellAvgr_pixel_in
Creating decoders for process `\top.multiplexer.U$$0.$group_110'.
     1/1: \DwellAvgr_strobe
Creating decoders for process `\top.multiplexer.U$$0.$group_109'.
     1/1: \pins_o
Creating decoders for process `\top.multiplexer.U$$0.$group_108'.
Creating decoders for process `\top.multiplexer.U$$0.$group_107'.
Creating decoders for process `\top.multiplexer.U$$0.$group_106'.
Creating decoders for process `\top.multiplexer.U$$0.$group_105'.
Creating decoders for process `\top.multiplexer.U$$0.$group_104'.
Creating decoders for process `\top.multiplexer.U$$0.$group_103'.
Creating decoders for process `\top.multiplexer.U$$0.$group_102'.
Creating decoders for process `\top.multiplexer.U$$0.$group_101'.
Creating decoders for process `\top.multiplexer.U$$0.$group_100'.
Creating decoders for process `\top.multiplexer.U$$0.$group_99'.
Creating decoders for process `\top.multiplexer.U$$0.$group_98'.
Creating decoders for process `\top.multiplexer.U$$0.$group_97'.
Creating decoders for process `\top.multiplexer.U$$0.$group_96'.
Creating decoders for process `\top.multiplexer.U$$0.$group_95'.
Creating decoders for process `\top.multiplexer.U$$0.$group_94'.
     1/14: \pins_i [13]
     2/14: \pins_i [12]
     3/14: \pins_i [11]
     4/14: \pins_i [10]
     5/14: \pins_i [9]
     6/14: \pins_i [8]
     7/14: \pins_i [7]
     8/14: \pins_i [6]
     9/14: \pins_i [5]
    10/14: \pins_i [4]
    11/14: \pins_i [3]
    12/14: \pins_i [2]
    13/14: \pins_i [1]
    14/14: \pins_i [0]
Creating decoders for process `\top.multiplexer.U$$0.$group_93'.
     1/1: \data_0__D14__o
Creating decoders for process `\top.multiplexer.U$$0.$group_92'.
     1/1: \data_0__D14__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_91'.
     1/1: \data_0__D13__o
Creating decoders for process `\top.multiplexer.U$$0.$group_90'.
     1/1: \data_0__D13__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_89'.
     1/1: \data_0__D12__o
Creating decoders for process `\top.multiplexer.U$$0.$group_88'.
     1/1: \data_0__D12__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_87'.
     1/1: \data_0__D11__o
Creating decoders for process `\top.multiplexer.U$$0.$group_86'.
     1/1: \data_0__D11__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_85'.
     1/1: \data_0__D10__o
Creating decoders for process `\top.multiplexer.U$$0.$group_84'.
     1/1: \data_0__D10__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_83'.
     1/1: \data_0__D9__o
Creating decoders for process `\top.multiplexer.U$$0.$group_82'.
     1/1: \data_0__D9__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_81'.
     1/1: \data_0__D8__o
Creating decoders for process `\top.multiplexer.U$$0.$group_80'.
     1/1: \data_0__D8__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_79'.
     1/1: \data_0__D7__o
Creating decoders for process `\top.multiplexer.U$$0.$group_78'.
     1/1: \data_0__D7__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_77'.
     1/1: \data_0__D6__o
Creating decoders for process `\top.multiplexer.U$$0.$group_76'.
     1/1: \data_0__D6__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_75'.
     1/1: \data_0__D5__o
Creating decoders for process `\top.multiplexer.U$$0.$group_74'.
     1/1: \data_0__D5__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_73'.
     1/1: \data_0__D4__o
Creating decoders for process `\top.multiplexer.U$$0.$group_72'.
     1/1: \data_0__D4__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_71'.
     1/1: \data_0__D3__o
Creating decoders for process `\top.multiplexer.U$$0.$group_70'.
     1/1: \data_0__D3__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_69'.
     1/1: \data_0__D2__o
Creating decoders for process `\top.multiplexer.U$$0.$group_68'.
     1/1: \data_0__D2__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_67'.
     1/1: \data_0__D1__o
Creating decoders for process `\top.multiplexer.U$$0.$group_66'.
     1/1: \data_0__D1__oe
Creating decoders for process `\top.multiplexer.U$$0.$group_65'.
Creating decoders for process `\top.multiplexer.U$$0.$group_64'.
Creating decoders for process `\top.multiplexer.U$$0.$group_63'.
Creating decoders for process `\top.multiplexer.U$$0.$group_62'.
Creating decoders for process `\top.multiplexer.U$$0.$group_61'.
Creating decoders for process `\top.multiplexer.U$$0.$group_60'.
Creating decoders for process `\top.multiplexer.U$$0.$group_59'.
Creating decoders for process `\top.multiplexer.U$$0.$group_58'.
Creating decoders for process `\top.multiplexer.U$$0.$group_57'.
Creating decoders for process `\top.multiplexer.U$$0.$group_56'.
Creating decoders for process `\top.multiplexer.U$$0.$group_55'.
Creating decoders for process `\top.multiplexer.U$$0.$group_54'.
Creating decoders for process `\top.multiplexer.U$$0.$group_53'.
Creating decoders for process `\top.multiplexer.U$$0.$group_52'.
Creating decoders for process `\top.multiplexer.U$$0.$group_51'.
Creating decoders for process `\top.multiplexer.U$$0.$group_50'.
Creating decoders for process `\top.multiplexer.U$$0.$group_49'.
Creating decoders for process `\top.multiplexer.U$$0.$group_48'.
Creating decoders for process `\top.multiplexer.U$$0.$group_47'.
Creating decoders for process `\top.multiplexer.U$$0.$group_46'.
Creating decoders for process `\top.multiplexer.U$$0.$group_45'.
Creating decoders for process `\top.multiplexer.U$$0.$group_44'.
Creating decoders for process `\top.multiplexer.U$$0.$group_43'.
Creating decoders for process `\top.multiplexer.U$$0.$group_42'.
Creating decoders for process `\top.multiplexer.U$$0.$group_41'.
Creating decoders for process `\top.multiplexer.U$$0.$group_40'.
Creating decoders for process `\top.multiplexer.U$$0.$group_39'.
Creating decoders for process `\top.multiplexer.U$$0.$group_38'.
Creating decoders for process `\top.multiplexer.U$$0.$group_37'.
Creating decoders for process `\top.multiplexer.U$$0.$group_36'.
Creating decoders for process `\top.multiplexer.U$$0.$group_35'.
Creating decoders for process `\top.multiplexer.U$$0.$group_34'.
Creating decoders for process `\top.multiplexer.U$$0.$group_33'.
Creating decoders for process `\top.multiplexer.U$$0.$group_32'.
Creating decoders for process `\top.multiplexer.U$$0.$group_31'.
Creating decoders for process `\top.multiplexer.U$$0.$group_30'.
Creating decoders for process `\top.multiplexer.U$$0.$group_29'.
Creating decoders for process `\top.multiplexer.U$$0.$group_28'.
Creating decoders for process `\top.multiplexer.U$$0.$group_27'.
Creating decoders for process `\top.multiplexer.U$$0.$group_26'.
Creating decoders for process `\top.multiplexer.U$$0.$group_25'.
Creating decoders for process `\top.multiplexer.U$$0.$group_24'.
Creating decoders for process `\top.multiplexer.U$$0.$group_23'.
Creating decoders for process `\top.multiplexer.U$$0.$group_22'.
Creating decoders for process `\top.multiplexer.U$$0.$group_21'.
Creating decoders for process `\top.multiplexer.U$$0.$group_20'.
Creating decoders for process `\top.multiplexer.U$$0.$group_19'.
Creating decoders for process `\top.multiplexer.U$$0.$group_18'.
Creating decoders for process `\top.multiplexer.U$$0.$group_17'.
Creating decoders for process `\top.multiplexer.U$$0.$group_16'.
Creating decoders for process `\top.multiplexer.U$$0.$group_15'.
Creating decoders for process `\top.multiplexer.U$$0.$group_14'.
Creating decoders for process `\top.multiplexer.U$$0.$group_13'.
Creating decoders for process `\top.multiplexer.U$$0.$group_12'.
Creating decoders for process `\top.multiplexer.U$$0.$group_11'.
Creating decoders for process `\top.multiplexer.U$$0.$group_10'.
Creating decoders for process `\top.multiplexer.U$$0.$group_9'.
Creating decoders for process `\top.multiplexer.U$$0.$group_8'.
Creating decoders for process `\top.multiplexer.U$$0.$group_7'.
Creating decoders for process `\top.multiplexer.U$$0.$group_6'.
Creating decoders for process `\top.multiplexer.U$$0.$group_5'.
Creating decoders for process `\top.multiplexer.U$$0.$group_4'.
Creating decoders for process `\top.multiplexer.U$$0.$group_3'.
Creating decoders for process `\top.multiplexer.U$$0.$group_2'.
Creating decoders for process `\top.multiplexer.U$$0.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.ByteReplace.$group_7'.
     1/1: \replaced_with_onebyte
Creating decoders for process `\top.multiplexer.U$$0.ByteReplace.$group_6'.
     1/1: \replaced_onebyte
Creating decoders for process `\top.multiplexer.U$$0.ByteReplace.$group_5'.
     1/1: \q
Creating decoders for process `\top.multiplexer.U$$0.ByteReplace.$group_4'.
     1/2: \processed_point_data [15:8]
     2/2: \processed_point_data [7:0]
Creating decoders for process `\top.multiplexer.U$$0.ByteReplace.$group_3'.
Creating decoders for process `\top.multiplexer.U$$0.ByteReplace.$group_2'.
Creating decoders for process `\top.multiplexer.U$$0.ByteReplace.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.ByteReplace.$group_0'.
     1/1: \s$next
Creating decoders for process `\top.multiplexer.U$$0.DwellAvgr.$group_2'.
     1/1: \running_average
Creating decoders for process `\top.multiplexer.U$$0.DwellAvgr.$group_1'.
     1/1: \running_average_latched$next
Creating decoders for process `\top.multiplexer.U$$0.DwellAvgr.$group_0'.
     1/1: \start_new_average_latched$next
Creating decoders for process `\top.multiplexer.U$$0.YInt.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.XInt.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_9'.
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_8'.
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_7'.
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_6'.
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_5'.
     1/1: \y_bigger
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_4'.
     1/1: \x_bigger
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_3'.
     1/1: \y_counter_reset
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_2'.
     1/1: \x_counter_reset
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_1'.
     1/1: \y_counter_increment
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.$group_0'.
     1/1: \x_counter_increment
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.y_counter.$group_3'.
     1/1: \next_count
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.y_counter.$group_2'.
     1/1: \current_count$next
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.y_counter.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.y_counter.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.x_counter.$group_3'.
     1/1: \next_count
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.x_counter.$group_2'.
     1/1: \current_count$next
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.x_counter.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.XYScanGen.x_counter.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.VectorReader.$group_5'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.VectorReader.$group_4'.
     1/1: \s
Creating decoders for process `\top.multiplexer.U$$0.VectorReader.$group_3'.
     1/1: \data_fresh
Creating decoders for process `\top.multiplexer.U$$0.VectorReader.$group_2'.
     1/6: \data_c [47:40]
     2/6: \data_c [31:24]
     3/6: \data_c [23:16]
     4/6: \data_c [15:8]
     5/6: \data_c [7:0]
     6/6: \data_c [39:32]
Creating decoders for process `\top.multiplexer.U$$0.VectorReader.$group_1'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.VectorReader.$group_0'.
     1/6: \data$next [47:40]
     2/6: \data$next [39:32]
     3/6: \data$next [31:24]
     4/6: \data$next [23:16]
     5/6: \data$next [15:8]
     6/6: \data$next [7:0]
Creating decoders for process `\top.multiplexer.U$$0.RasterReader.$group_5'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.RasterReader.$group_4'.
     1/1: \s
Creating decoders for process `\top.multiplexer.U$$0.RasterReader.$group_3'.
     1/1: \data_fresh
Creating decoders for process `\top.multiplexer.U$$0.RasterReader.$group_2'.
     1/2: \data_c [15:8]
     2/2: \data_c [7:0]
Creating decoders for process `\top.multiplexer.U$$0.RasterReader.$group_1'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.RasterReader.$group_0'.
     1/2: \data$next [15:8]
     2/2: \data$next [7:0]
Creating decoders for process `\top.multiplexer.U$$0.Writer.$group_7'.
     1/1: \lf
Creating decoders for process `\top.multiplexer.U$$0.Writer.$group_6'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.Writer.$group_5'.
     1/1: \f
Creating decoders for process `\top.multiplexer.U$$0.Writer.$group_4'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.Writer.$group_3'.
     1/1: \data$next
Creating decoders for process `\top.multiplexer.U$$0.Writer.$group_2'.
     1/1: \in_fifo_w_data
Creating decoders for process `\top.multiplexer.U$$0.Writer.$group_1'.
     1/1: \data_valid
Creating decoders for process `\top.multiplexer.U$$0.Writer.$group_0'.
     1/1: \w
Creating decoders for process `\top.multiplexer.U$$0.1byteWriter.$group_6'.
     1/1: \lf
Creating decoders for process `\top.multiplexer.U$$0.1byteWriter.$group_5'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.1byteWriter.$group_4'.
     1/1: \data_complete
Creating decoders for process `\top.multiplexer.U$$0.1byteWriter.$group_3'.
     1/1: \data$next
Creating decoders for process `\top.multiplexer.U$$0.1byteWriter.$group_2'.
     1/1: \in_fifo_w_data
Creating decoders for process `\top.multiplexer.U$$0.1byteWriter.$group_1'.
     1/1: \data_valid
Creating decoders for process `\top.multiplexer.U$$0.1byteWriter.$group_0'.
     1/1: \w
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_9'.
     1/1: \true_counter$next
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_8'.
     1/1: \dwell_time$next
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_7'.
     1/1: \y_position$next
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_6'.
     1/1: \x_position$next
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_5'.
     1/1: \counter$next
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_4'.
     1/1: \prev_dwelling_changed$next
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_3'.
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_2'.
     1/1: \prev_dwelling$next
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.BeamController.$group_0'.
     1/1: \at_dwell
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_10'.
     1/1: \l
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_9'.
     1/1: \config_flag_released
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_8'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_7'.
     1/1: \in_fifo_w_data
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_6'.
     1/1: \step_size_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_5'.
     1/1: \eight_bit_output_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_4'.
     1/1: \y_full_frame_resolution_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_3'.
     1/1: \x_full_frame_resolution_locked$next
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_2'.
     1/4: \roi_registers_locked$next [63:48]
     2/4: \roi_registers_locked$next [15:0]
     3/4: \roi_registers_locked$next [47:32]
     4/4: \roi_registers_locked$next [31:16]
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_1'.
     1/1: \config_data_valid
Creating decoders for process `\top.multiplexer.U$$0.ConfigHdlr.$group_0'.
     1/1: \writing_config
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_9'.
     1/1: \a_adc_sampling
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_8'.
     1/1: \y_dac_sampling
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_7'.
     1/1: \x_dac_sampling
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_6'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_5'.
     1/1: \is_done
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_4'.
     1/1: \is_a
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_3'.
     1/1: \is_y
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_2'.
     1/1: \is_x
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_1'.
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.sample_clock.$group_1'.
     1/1: \clock$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.sample_clock.$group_0'.
     1/1: \timer$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.a_adc.$group_3'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.a_adc.$group_2'.
     1/1: \released
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.a_adc.$group_1'.
     1/1: \le
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.a_adc.$group_0'.
     1/1: \oe
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.y_dac.$group_3'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.y_dac.$group_2'.
     1/1: \released
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.y_dac.$group_1'.
     1/1: \le
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.y_dac.$group_0'.
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.x_dac.$group_3'.
     1/1: \fsm_state$next
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.x_dac.$group_2'.
     1/1: \released
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.x_dac.$group_1'.
     1/1: \le
Creating decoders for process `\top.multiplexer.U$$0.MuxBus.x_dac.$group_0'.
Creating decoders for process `\top.fx2_crossbar.$group_17'.
     1/1: \bus_slrd
Creating decoders for process `\top.fx2_crossbar.$group_16'.
     1/1: \bus_pend
Creating decoders for process `\top.fx2_crossbar.$group_15'.
     1/1: \bus_slwr
Creating decoders for process `\top.fx2_crossbar.$group_14'.
     1/1: \fsm_state$next
Creating decoders for process `\top.fx2_crossbar.$group_13'.
     1/1: \bus_addr$next
Creating decoders for process `\top.fx2_crossbar.$group_12'.
     1/1: \bus_data__oe$next
Creating decoders for process `\top.fx2_crossbar.$group_11'.
     1/1: \bus_sloe$next
Creating decoders for process `\top.fx2_crossbar.$group_9'.
     1/2: \w_en$20
     2/2: \out_fifo_0_w_en
Creating decoders for process `\top.fx2_crossbar.$group_8'.
     1/1: \bus_nrdy_i
Creating decoders for process `\top.fx2_crossbar.$group_6'.
     1/2: \flushed
     2/2: \in_fifo_0_flushed
Creating decoders for process `\top.fx2_crossbar.$group_4'.
     1/2: \r_en$15
     2/2: \in_fifo_0_r_en
Creating decoders for process `\top.fx2_crossbar.$group_2'.
     1/2: \w_data$14
     2/2: \out_fifo_0_w_data
Creating decoders for process `\top.fx2_crossbar.$group_1'.
     1/1: \bus_data__o
Creating decoders for process `\top.fx2_crossbar.$group_0'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_5'.
     1/1: \skid_w_en
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_4'.
     1/1: \skid_w_data
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_3'.
     1/1: \w_rdy$9
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_2'.
     1/1: \skid_r_en
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_1'.
     1/1: \inner_w_en
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.$group_0'.
     1/1: \inner_w_data
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_11'.
     1/1: \level$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_10'.
     1/1: \consume$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_9'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_8'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_7'.
     1/1: \produce$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_6'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_5'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_4'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_3'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_2'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_1'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.skid.$group_0'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_14'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_13'.
     1/1: \r_rdy$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_12'.
     1/1: \inner_level$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_11'.
     1/1: \consume$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_10'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_9'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_8'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_7'.
     1/1: \produce$next
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_6'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_5'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_4'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_3'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_2'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_1'.
Creating decoders for process `\top.fx2_crossbar.out_fifo_0.inner.$group_0'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.$group_3'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.$group_2'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.$group_1'.
     1/1: \_pending$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.$group_0'.
     1/1: \queued$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_14'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_13'.
     1/1: \r_rdy$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_12'.
     1/1: \inner_level$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_11'.
     1/1: \consume$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_10'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_9'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_8'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_7'.
     1/1: \produce$next
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_6'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_5'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_4'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_3'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_2'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_1'.
Creating decoders for process `\top.fx2_crossbar.in_fifo_0.inner.$group_0'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_23'.
     1/1: \nrdy_o$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_22'.
     1/1: \nrdy_r$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_21'.
     1/1: \slrd_p$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_20'.
     1/1: \slrd_r$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_19'.
     1/1: \addr_p$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_18'.
     1/1: \addr_r$next
Creating decoders for process `\top.fx2_crossbar.bus.$group_17'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_16'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_15'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_14'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_13'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_12'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_11'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_10'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_9'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_8'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_7'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_6'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_5'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_4'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_3'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_2'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_1'.
Creating decoders for process `\top.fx2_crossbar.bus.$group_0'.
Creating decoders for process `\top.registers.$group_5'.
     1/28: $45
     2/28: $signal$17$next
     3/28: $signal$16$next
     4/28: $signal$31$next
     5/28: $signal$28$next
     6/28: $signal$14$next
     7/28: $signal$1$next
     8/28: $signal$next
     9/28: $44
    10/28: $43
    11/28: $signal$15$next
    12/28: $42
    13/28: $41
    14/28: $40
    15/28: $signal$13$next
    16/28: $signal$12$next
    17/28: $signal$11$next
    18/28: $signal$10$next
    19/28: $signal$9$next
    20/28: $signal$8$next
    21/28: $signal$7$next
    22/28: $signal$6$next
    23/28: $signal$5$next
    24/28: $signal$4$next
    25/28: $signal$3$next
    26/28: $signal$2$next
    27/28: $39
    28/28: $signal$18$next
Creating decoders for process `\top.registers.$group_4'.
     1/1: \reg_data$next
Creating decoders for process `\top.registers.$group_3'.
     1/1: \reg_addr$next
Creating decoders for process `\top.registers.$group_2'.
     1/1: \ack_o
Creating decoders for process `\top.registers.$group_1'.
     1/1: \latch_addr$next
Creating decoders for process `\top.registers.$group_0'.
Creating decoders for process `\top.i2c_target.$group_11'.
     1/1: \bus_scl_o$next
Creating decoders for process `\top.i2c_target.$group_10'.
     1/1: \write$next
Creating decoders for process `\top.i2c_target.$group_9'.
     1/1: \data_i$next
Creating decoders for process `\top.i2c_target.$group_8'.
     1/1: \read
Creating decoders for process `\top.i2c_target.$group_7'.
     1/1: \shreg_o$next
Creating decoders for process `\top.i2c_target.$group_6'.
     1/1: \restart
Creating decoders for process `\top.i2c_target.$group_5'.
     1/1: \stop
Creating decoders for process `\top.i2c_target.$group_4'.
     1/1: \bus_sda_o$next
Creating decoders for process `\top.i2c_target.$group_3'.
     1/1: \start
Creating decoders for process `\top.i2c_target.$group_2'.
     1/1: \shreg_i$next
Creating decoders for process `\top.i2c_target.$group_1'.
     1/1: \bitno$next
Creating decoders for process `\top.i2c_target.$group_0'.
     1/1: \fsm_state$next
Creating decoders for process `\top.i2c_target.bus.$group_9'.
     1/1: \sda_r$next
Creating decoders for process `\top.i2c_target.bus.$group_8'.
     1/1: \scl_r$next
Creating decoders for process `\top.i2c_target.bus.$group_7'.
Creating decoders for process `\top.i2c_target.bus.$group_6'.
Creating decoders for process `\top.i2c_target.bus.$group_5'.
Creating decoders for process `\top.i2c_target.bus.$group_4'.
Creating decoders for process `\top.i2c_target.bus.$group_3'.
Creating decoders for process `\top.i2c_target.bus.$group_2'.
Creating decoders for process `\top.i2c_target.bus.$group_1'.
Creating decoders for process `\top.i2c_target.bus.$group_0'.
Creating decoders for process `\top.i2c_target.bus.U$$1.$group_2'.
Creating decoders for process `\top.i2c_target.bus.U$$1.$group_1'.
Creating decoders for process `\top.i2c_target.bus.U$$1.$group_0'.
Creating decoders for process `\top.i2c_target.bus.U$$0.$group_2'.
Creating decoders for process `\top.i2c_target.bus.U$$0.$group_1'.
Creating decoders for process `\top.i2c_target.bus.U$$0.$group_0'.

2.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
  created $adff cell `$procdff$2879' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
  created $dff cell `$procdff$2880' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
  created $adff cell `$procdff$2881' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
  created $dff cell `$procdff$2882' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
  created $adff cell `$procdff$2883' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
  created $dff cell `$procdff$2884' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
  created $adff cell `$procdff$2885' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211'.
  created $dff cell `$procdff$2886' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:922$209'.
  created $dff cell `$procdff$2887' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:882$207'.
  created $dff cell `$procdff$2888' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
  created $adff cell `$procdff$2889' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196'.
  created $dff cell `$procdff$2890' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
  created $adff cell `$procdff$2891' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185'.
  created $dff cell `$procdff$2892' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182'.
  created $adff cell `$procdff$2893' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179'.
  created $dff cell `$procdff$2894' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176'.
  created $adff cell `$procdff$2895' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173'.
  created $dff cell `$procdff$2896' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:311$171'.
  created $dff cell `$procdff$2897' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:271$169'.
  created $dff cell `$procdff$2898' with positive edge clock.

2.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Removing empty process `SB_DFFNS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Removing empty process `SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFNR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Removing empty process `SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFNE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Removing empty process `SB_DFFN.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Removing empty process `SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFES.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFESS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFER.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFESR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Removing empty process `SB_DFFS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Removing empty process `SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFSS.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFFR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:406$176'.
Removing empty process `SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFSR.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFFE.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Removing empty process `SB_DFF.$proc$/opt/homebrew/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Removing empty process `top.$group_1'.
Removing empty process `top.$group_0'.
Removing empty process `top.cd_sync.$group_4'.
Removing empty process `top.cd_sync.$group_3'.
Found and cleaned up 1 empty switch in `\top.cd_sync.$group_2'.
Removing empty process `top.cd_sync.$group_2'.
Found and cleaned up 1 empty switch in `\top.cd_sync.$group_1'.
Removing empty process `top.cd_sync.$group_1'.
Removing empty process `top.cd_sync.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_170'.
Removing empty process `top.multiplexer.U$$0.$group_170'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_169'.
Removing empty process `top.multiplexer.U$$0.$group_169'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_168'.
Removing empty process `top.multiplexer.U$$0.$group_168'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_167'.
Removing empty process `top.multiplexer.U$$0.$group_167'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_166'.
Removing empty process `top.multiplexer.U$$0.$group_166'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_165'.
Removing empty process `top.multiplexer.U$$0.$group_165'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_164'.
Removing empty process `top.multiplexer.U$$0.$group_164'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_163'.
Removing empty process `top.multiplexer.U$$0.$group_163'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_162'.
Removing empty process `top.multiplexer.U$$0.$group_162'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_161'.
Removing empty process `top.multiplexer.U$$0.$group_161'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.$group_160'.
Removing empty process `top.multiplexer.U$$0.$group_160'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_159'.
Removing empty process `top.multiplexer.U$$0.$group_159'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.$group_158'.
Removing empty process `top.multiplexer.U$$0.$group_158'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.$group_157'.
Removing empty process `top.multiplexer.U$$0.$group_157'.
Found and cleaned up 8 empty switches in `\top.multiplexer.U$$0.$group_156'.
Removing empty process `top.multiplexer.U$$0.$group_156'.
Found and cleaned up 7 empty switches in `\top.multiplexer.U$$0.$group_155'.
Removing empty process `top.multiplexer.U$$0.$group_155'.
Found and cleaned up 6 empty switches in `\top.multiplexer.U$$0.$group_154'.
Removing empty process `top.multiplexer.U$$0.$group_154'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.$group_153'.
Removing empty process `top.multiplexer.U$$0.$group_153'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_152'.
Removing empty process `top.multiplexer.U$$0.$group_152'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.$group_151'.
Removing empty process `top.multiplexer.U$$0.$group_151'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_150'.
Removing empty process `top.multiplexer.U$$0.$group_150'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_149'.
Removing empty process `top.multiplexer.U$$0.$group_149'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.$group_148'.
Removing empty process `top.multiplexer.U$$0.$group_148'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.$group_147'.
Removing empty process `top.multiplexer.U$$0.$group_147'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_146'.
Removing empty process `top.multiplexer.U$$0.$group_146'.
Removing empty process `top.multiplexer.U$$0.$group_145'.
Removing empty process `top.multiplexer.U$$0.$group_144'.
Removing empty process `top.multiplexer.U$$0.$group_143'.
Removing empty process `top.multiplexer.U$$0.$group_142'.
Removing empty process `top.multiplexer.U$$0.$group_141'.
Removing empty process `top.multiplexer.U$$0.$group_140'.
Removing empty process `top.multiplexer.U$$0.$group_139'.
Removing empty process `top.multiplexer.U$$0.$group_138'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_137'.
Removing empty process `top.multiplexer.U$$0.$group_137'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_136'.
Removing empty process `top.multiplexer.U$$0.$group_136'.
Removing empty process `top.multiplexer.U$$0.$group_135'.
Removing empty process `top.multiplexer.U$$0.$group_134'.
Removing empty process `top.multiplexer.U$$0.$group_133'.
Removing empty process `top.multiplexer.U$$0.$group_132'.
Removing empty process `top.multiplexer.U$$0.$group_131'.
Removing empty process `top.multiplexer.U$$0.$group_130'.
Removing empty process `top.multiplexer.U$$0.$group_129'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.$group_128'.
Removing empty process `top.multiplexer.U$$0.$group_128'.
Found and cleaned up 9 empty switches in `\top.multiplexer.U$$0.$group_127'.
Removing empty process `top.multiplexer.U$$0.$group_127'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_126'.
Removing empty process `top.multiplexer.U$$0.$group_126'.
Found and cleaned up 9 empty switches in `\top.multiplexer.U$$0.$group_125'.
Removing empty process `top.multiplexer.U$$0.$group_125'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_124'.
Removing empty process `top.multiplexer.U$$0.$group_124'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_123'.
Removing empty process `top.multiplexer.U$$0.$group_123'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.$group_122'.
Removing empty process `top.multiplexer.U$$0.$group_122'.
Found and cleaned up 8 empty switches in `\top.multiplexer.U$$0.$group_121'.
Removing empty process `top.multiplexer.U$$0.$group_121'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.$group_120'.
Removing empty process `top.multiplexer.U$$0.$group_120'.
Removing empty process `top.multiplexer.U$$0.$group_119'.
Removing empty process `top.multiplexer.U$$0.$group_118'.
Removing empty process `top.multiplexer.U$$0.$group_117'.
Removing empty process `top.multiplexer.U$$0.$group_116'.
Removing empty process `top.multiplexer.U$$0.$group_115'.
Removing empty process `top.multiplexer.U$$0.$group_114'.
Removing empty process `top.multiplexer.U$$0.$group_113'.
Removing empty process `top.multiplexer.U$$0.$group_112'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_111'.
Removing empty process `top.multiplexer.U$$0.$group_111'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_110'.
Removing empty process `top.multiplexer.U$$0.$group_110'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_109'.
Removing empty process `top.multiplexer.U$$0.$group_109'.
Removing empty process `top.multiplexer.U$$0.$group_108'.
Removing empty process `top.multiplexer.U$$0.$group_107'.
Removing empty process `top.multiplexer.U$$0.$group_106'.
Removing empty process `top.multiplexer.U$$0.$group_105'.
Removing empty process `top.multiplexer.U$$0.$group_104'.
Removing empty process `top.multiplexer.U$$0.$group_103'.
Removing empty process `top.multiplexer.U$$0.$group_102'.
Removing empty process `top.multiplexer.U$$0.$group_101'.
Removing empty process `top.multiplexer.U$$0.$group_100'.
Removing empty process `top.multiplexer.U$$0.$group_99'.
Removing empty process `top.multiplexer.U$$0.$group_98'.
Removing empty process `top.multiplexer.U$$0.$group_97'.
Removing empty process `top.multiplexer.U$$0.$group_96'.
Removing empty process `top.multiplexer.U$$0.$group_95'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.$group_94'.
Removing empty process `top.multiplexer.U$$0.$group_94'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_93'.
Removing empty process `top.multiplexer.U$$0.$group_93'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_92'.
Removing empty process `top.multiplexer.U$$0.$group_92'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_91'.
Removing empty process `top.multiplexer.U$$0.$group_91'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_90'.
Removing empty process `top.multiplexer.U$$0.$group_90'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_89'.
Removing empty process `top.multiplexer.U$$0.$group_89'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_88'.
Removing empty process `top.multiplexer.U$$0.$group_88'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_87'.
Removing empty process `top.multiplexer.U$$0.$group_87'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_86'.
Removing empty process `top.multiplexer.U$$0.$group_86'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_85'.
Removing empty process `top.multiplexer.U$$0.$group_85'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_84'.
Removing empty process `top.multiplexer.U$$0.$group_84'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_83'.
Removing empty process `top.multiplexer.U$$0.$group_83'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_82'.
Removing empty process `top.multiplexer.U$$0.$group_82'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_81'.
Removing empty process `top.multiplexer.U$$0.$group_81'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_80'.
Removing empty process `top.multiplexer.U$$0.$group_80'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_79'.
Removing empty process `top.multiplexer.U$$0.$group_79'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_78'.
Removing empty process `top.multiplexer.U$$0.$group_78'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_77'.
Removing empty process `top.multiplexer.U$$0.$group_77'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_76'.
Removing empty process `top.multiplexer.U$$0.$group_76'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_75'.
Removing empty process `top.multiplexer.U$$0.$group_75'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_74'.
Removing empty process `top.multiplexer.U$$0.$group_74'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_73'.
Removing empty process `top.multiplexer.U$$0.$group_73'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_72'.
Removing empty process `top.multiplexer.U$$0.$group_72'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_71'.
Removing empty process `top.multiplexer.U$$0.$group_71'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_70'.
Removing empty process `top.multiplexer.U$$0.$group_70'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_69'.
Removing empty process `top.multiplexer.U$$0.$group_69'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_68'.
Removing empty process `top.multiplexer.U$$0.$group_68'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_67'.
Removing empty process `top.multiplexer.U$$0.$group_67'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.$group_66'.
Removing empty process `top.multiplexer.U$$0.$group_66'.
Removing empty process `top.multiplexer.U$$0.$group_65'.
Removing empty process `top.multiplexer.U$$0.$group_64'.
Removing empty process `top.multiplexer.U$$0.$group_63'.
Removing empty process `top.multiplexer.U$$0.$group_62'.
Removing empty process `top.multiplexer.U$$0.$group_61'.
Removing empty process `top.multiplexer.U$$0.$group_60'.
Removing empty process `top.multiplexer.U$$0.$group_59'.
Removing empty process `top.multiplexer.U$$0.$group_58'.
Removing empty process `top.multiplexer.U$$0.$group_57'.
Removing empty process `top.multiplexer.U$$0.$group_56'.
Removing empty process `top.multiplexer.U$$0.$group_55'.
Removing empty process `top.multiplexer.U$$0.$group_54'.
Removing empty process `top.multiplexer.U$$0.$group_53'.
Removing empty process `top.multiplexer.U$$0.$group_52'.
Removing empty process `top.multiplexer.U$$0.$group_51'.
Removing empty process `top.multiplexer.U$$0.$group_50'.
Removing empty process `top.multiplexer.U$$0.$group_49'.
Removing empty process `top.multiplexer.U$$0.$group_48'.
Removing empty process `top.multiplexer.U$$0.$group_47'.
Removing empty process `top.multiplexer.U$$0.$group_46'.
Removing empty process `top.multiplexer.U$$0.$group_45'.
Removing empty process `top.multiplexer.U$$0.$group_44'.
Removing empty process `top.multiplexer.U$$0.$group_43'.
Removing empty process `top.multiplexer.U$$0.$group_42'.
Removing empty process `top.multiplexer.U$$0.$group_41'.
Removing empty process `top.multiplexer.U$$0.$group_40'.
Removing empty process `top.multiplexer.U$$0.$group_39'.
Removing empty process `top.multiplexer.U$$0.$group_38'.
Removing empty process `top.multiplexer.U$$0.$group_37'.
Removing empty process `top.multiplexer.U$$0.$group_36'.
Removing empty process `top.multiplexer.U$$0.$group_35'.
Removing empty process `top.multiplexer.U$$0.$group_34'.
Removing empty process `top.multiplexer.U$$0.$group_33'.
Removing empty process `top.multiplexer.U$$0.$group_32'.
Removing empty process `top.multiplexer.U$$0.$group_31'.
Removing empty process `top.multiplexer.U$$0.$group_30'.
Removing empty process `top.multiplexer.U$$0.$group_29'.
Removing empty process `top.multiplexer.U$$0.$group_28'.
Removing empty process `top.multiplexer.U$$0.$group_27'.
Removing empty process `top.multiplexer.U$$0.$group_26'.
Removing empty process `top.multiplexer.U$$0.$group_25'.
Removing empty process `top.multiplexer.U$$0.$group_24'.
Removing empty process `top.multiplexer.U$$0.$group_23'.
Removing empty process `top.multiplexer.U$$0.$group_22'.
Removing empty process `top.multiplexer.U$$0.$group_21'.
Removing empty process `top.multiplexer.U$$0.$group_20'.
Removing empty process `top.multiplexer.U$$0.$group_19'.
Removing empty process `top.multiplexer.U$$0.$group_18'.
Removing empty process `top.multiplexer.U$$0.$group_17'.
Removing empty process `top.multiplexer.U$$0.$group_16'.
Removing empty process `top.multiplexer.U$$0.$group_15'.
Removing empty process `top.multiplexer.U$$0.$group_14'.
Removing empty process `top.multiplexer.U$$0.$group_13'.
Removing empty process `top.multiplexer.U$$0.$group_12'.
Removing empty process `top.multiplexer.U$$0.$group_11'.
Removing empty process `top.multiplexer.U$$0.$group_10'.
Removing empty process `top.multiplexer.U$$0.$group_9'.
Removing empty process `top.multiplexer.U$$0.$group_8'.
Removing empty process `top.multiplexer.U$$0.$group_7'.
Removing empty process `top.multiplexer.U$$0.$group_6'.
Removing empty process `top.multiplexer.U$$0.$group_5'.
Removing empty process `top.multiplexer.U$$0.$group_4'.
Removing empty process `top.multiplexer.U$$0.$group_3'.
Removing empty process `top.multiplexer.U$$0.$group_2'.
Removing empty process `top.multiplexer.U$$0.$group_1'.
Removing empty process `top.multiplexer.U$$0.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ByteReplace.$group_7'.
Removing empty process `top.multiplexer.U$$0.ByteReplace.$group_7'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ByteReplace.$group_6'.
Removing empty process `top.multiplexer.U$$0.ByteReplace.$group_6'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ByteReplace.$group_5'.
Removing empty process `top.multiplexer.U$$0.ByteReplace.$group_5'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.ByteReplace.$group_4'.
Removing empty process `top.multiplexer.U$$0.ByteReplace.$group_4'.
Removing empty process `top.multiplexer.U$$0.ByteReplace.$group_3'.
Removing empty process `top.multiplexer.U$$0.ByteReplace.$group_2'.
Removing empty process `top.multiplexer.U$$0.ByteReplace.$group_1'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.ByteReplace.$group_0'.
Removing empty process `top.multiplexer.U$$0.ByteReplace.$group_0'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.DwellAvgr.$group_2'.
Removing empty process `top.multiplexer.U$$0.DwellAvgr.$group_2'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.DwellAvgr.$group_1'.
Removing empty process `top.multiplexer.U$$0.DwellAvgr.$group_1'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.DwellAvgr.$group_0'.
Removing empty process `top.multiplexer.U$$0.DwellAvgr.$group_0'.
Removing empty process `top.multiplexer.U$$0.YInt.$group_0'.
Removing empty process `top.multiplexer.U$$0.XInt.$group_0'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_9'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_8'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_7'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_6'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.XYScanGen.$group_5'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_5'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.XYScanGen.$group_4'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_4'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.XYScanGen.$group_3'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.XYScanGen.$group_2'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_2'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.XYScanGen.$group_1'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.XYScanGen.$group_0'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.$group_0'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.XYScanGen.y_counter.$group_3'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.y_counter.$group_3'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.XYScanGen.y_counter.$group_2'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.y_counter.$group_2'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.y_counter.$group_1'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.y_counter.$group_0'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.XYScanGen.x_counter.$group_3'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.x_counter.$group_3'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.XYScanGen.x_counter.$group_2'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.x_counter.$group_2'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.x_counter.$group_1'.
Removing empty process `top.multiplexer.U$$0.XYScanGen.x_counter.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.VectorReader.$group_5'.
Removing empty process `top.multiplexer.U$$0.VectorReader.$group_5'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.VectorReader.$group_4'.
Removing empty process `top.multiplexer.U$$0.VectorReader.$group_4'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.VectorReader.$group_3'.
Removing empty process `top.multiplexer.U$$0.VectorReader.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.VectorReader.$group_2'.
Removing empty process `top.multiplexer.U$$0.VectorReader.$group_2'.
Found and cleaned up 11 empty switches in `\top.multiplexer.U$$0.VectorReader.$group_1'.
Removing empty process `top.multiplexer.U$$0.VectorReader.$group_1'.
Found and cleaned up 11 empty switches in `\top.multiplexer.U$$0.VectorReader.$group_0'.
Removing empty process `top.multiplexer.U$$0.VectorReader.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.RasterReader.$group_5'.
Removing empty process `top.multiplexer.U$$0.RasterReader.$group_5'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.RasterReader.$group_4'.
Removing empty process `top.multiplexer.U$$0.RasterReader.$group_4'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.RasterReader.$group_3'.
Removing empty process `top.multiplexer.U$$0.RasterReader.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.RasterReader.$group_2'.
Removing empty process `top.multiplexer.U$$0.RasterReader.$group_2'.
Found and cleaned up 7 empty switches in `\top.multiplexer.U$$0.RasterReader.$group_1'.
Removing empty process `top.multiplexer.U$$0.RasterReader.$group_1'.
Found and cleaned up 7 empty switches in `\top.multiplexer.U$$0.RasterReader.$group_0'.
Removing empty process `top.multiplexer.U$$0.RasterReader.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.Writer.$group_7'.
Removing empty process `top.multiplexer.U$$0.Writer.$group_7'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.Writer.$group_6'.
Removing empty process `top.multiplexer.U$$0.Writer.$group_6'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.Writer.$group_5'.
Removing empty process `top.multiplexer.U$$0.Writer.$group_5'.
Found and cleaned up 7 empty switches in `\top.multiplexer.U$$0.Writer.$group_4'.
Removing empty process `top.multiplexer.U$$0.Writer.$group_4'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.Writer.$group_3'.
Removing empty process `top.multiplexer.U$$0.Writer.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.Writer.$group_2'.
Removing empty process `top.multiplexer.U$$0.Writer.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.Writer.$group_1'.
Removing empty process `top.multiplexer.U$$0.Writer.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.Writer.$group_0'.
Removing empty process `top.multiplexer.U$$0.Writer.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.1byteWriter.$group_6'.
Removing empty process `top.multiplexer.U$$0.1byteWriter.$group_6'.
Found and cleaned up 6 empty switches in `\top.multiplexer.U$$0.1byteWriter.$group_5'.
Removing empty process `top.multiplexer.U$$0.1byteWriter.$group_5'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.1byteWriter.$group_4'.
Removing empty process `top.multiplexer.U$$0.1byteWriter.$group_4'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.1byteWriter.$group_3'.
Removing empty process `top.multiplexer.U$$0.1byteWriter.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.1byteWriter.$group_2'.
Removing empty process `top.multiplexer.U$$0.1byteWriter.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.1byteWriter.$group_1'.
Removing empty process `top.multiplexer.U$$0.1byteWriter.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.1byteWriter.$group_0'.
Removing empty process `top.multiplexer.U$$0.1byteWriter.$group_0'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.BeamController.$group_9'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_9'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.BeamController.$group_8'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_8'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.BeamController.$group_7'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_7'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.BeamController.$group_6'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_6'.
Found and cleaned up 5 empty switches in `\top.multiplexer.U$$0.BeamController.$group_5'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_5'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.BeamController.$group_4'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_4'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_3'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.BeamController.$group_2'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_2'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.BeamController.$group_0'.
Removing empty process `top.multiplexer.U$$0.BeamController.$group_0'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ConfigHdlr.$group_10'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_10'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_9'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_9'.
Found and cleaned up 25 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_8'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_8'.
Found and cleaned up 20 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_7'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_7'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_6'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_6'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_5'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_5'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_4'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_4'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_3'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_3'.
Found and cleaned up 6 empty switches in `\top.multiplexer.U$$0.ConfigHdlr.$group_2'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_2'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ConfigHdlr.$group_1'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_1'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.ConfigHdlr.$group_0'.
Removing empty process `top.multiplexer.U$$0.ConfigHdlr.$group_0'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.$group_9'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_9'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.$group_8'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_8'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.$group_7'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_7'.
Found and cleaned up 9 empty switches in `\top.multiplexer.U$$0.MuxBus.$group_6'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_6'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.$group_5'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_5'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.$group_4'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_4'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.$group_3'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.$group_0'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.MuxBus.sample_clock.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.sample_clock.$group_1'.
Found and cleaned up 3 empty switches in `\top.multiplexer.U$$0.MuxBus.sample_clock.$group_0'.
Removing empty process `top.multiplexer.U$$0.MuxBus.sample_clock.$group_0'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.MuxBus.a_adc.$group_3'.
Removing empty process `top.multiplexer.U$$0.MuxBus.a_adc.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.a_adc.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.a_adc.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.a_adc.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.a_adc.$group_1'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.a_adc.$group_0'.
Removing empty process `top.multiplexer.U$$0.MuxBus.a_adc.$group_0'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.MuxBus.y_dac.$group_3'.
Removing empty process `top.multiplexer.U$$0.MuxBus.y_dac.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.y_dac.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.y_dac.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.y_dac.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.y_dac.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.y_dac.$group_0'.
Found and cleaned up 4 empty switches in `\top.multiplexer.U$$0.MuxBus.x_dac.$group_3'.
Removing empty process `top.multiplexer.U$$0.MuxBus.x_dac.$group_3'.
Found and cleaned up 1 empty switch in `\top.multiplexer.U$$0.MuxBus.x_dac.$group_2'.
Removing empty process `top.multiplexer.U$$0.MuxBus.x_dac.$group_2'.
Found and cleaned up 2 empty switches in `\top.multiplexer.U$$0.MuxBus.x_dac.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.x_dac.$group_1'.
Removing empty process `top.multiplexer.U$$0.MuxBus.x_dac.$group_0'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.$group_17'.
Removing empty process `top.fx2_crossbar.$group_17'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.$group_16'.
Removing empty process `top.fx2_crossbar.$group_16'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.$group_15'.
Removing empty process `top.fx2_crossbar.$group_15'.
Found and cleaned up 10 empty switches in `\top.fx2_crossbar.$group_14'.
Removing empty process `top.fx2_crossbar.$group_14'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.$group_13'.
Removing empty process `top.fx2_crossbar.$group_13'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.$group_12'.
Removing empty process `top.fx2_crossbar.$group_12'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.$group_11'.
Removing empty process `top.fx2_crossbar.$group_11'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.$group_9'.
Removing empty process `top.fx2_crossbar.$group_9'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.$group_8'.
Removing empty process `top.fx2_crossbar.$group_8'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.$group_6'.
Removing empty process `top.fx2_crossbar.$group_6'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.$group_4'.
Removing empty process `top.fx2_crossbar.$group_4'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.$group_2'.
Removing empty process `top.fx2_crossbar.$group_2'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.$group_1'.
Removing empty process `top.fx2_crossbar.$group_1'.
Removing empty process `top.fx2_crossbar.$group_0'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.out_fifo_0.$group_5'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_5'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.out_fifo_0.$group_4'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_4'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.out_fifo_0.$group_3'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_3'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.out_fifo_0.$group_2'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_2'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.out_fifo_0.$group_1'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_1'.
Found and cleaned up 2 empty switches in `\top.fx2_crossbar.out_fifo_0.$group_0'.
Removing empty process `top.fx2_crossbar.out_fifo_0.$group_0'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.out_fifo_0.skid.$group_11'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_11'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.skid.$group_10'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_10'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_9'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_8'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.skid.$group_7'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_7'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_6'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_5'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_4'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_3'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_2'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_1'.
Removing empty process `top.fx2_crossbar.out_fifo_0.skid.$group_0'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_14'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.inner.$group_13'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_13'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.out_fifo_0.inner.$group_12'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_12'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.inner.$group_11'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_11'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_10'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_9'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_8'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.out_fifo_0.inner.$group_7'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_7'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_6'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_5'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_4'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_3'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_2'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_1'.
Removing empty process `top.fx2_crossbar.out_fifo_0.inner.$group_0'.
Removing empty process `top.fx2_crossbar.in_fifo_0.$group_3'.
Removing empty process `top.fx2_crossbar.in_fifo_0.$group_2'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.in_fifo_0.$group_1'.
Removing empty process `top.fx2_crossbar.in_fifo_0.$group_1'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.in_fifo_0.$group_0'.
Removing empty process `top.fx2_crossbar.in_fifo_0.$group_0'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_14'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.in_fifo_0.inner.$group_13'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_13'.
Found and cleaned up 4 empty switches in `\top.fx2_crossbar.in_fifo_0.inner.$group_12'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_12'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.in_fifo_0.inner.$group_11'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_11'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_10'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_9'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_8'.
Found and cleaned up 3 empty switches in `\top.fx2_crossbar.in_fifo_0.inner.$group_7'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_7'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_6'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_5'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_4'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_3'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_2'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_1'.
Removing empty process `top.fx2_crossbar.in_fifo_0.inner.$group_0'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_23'.
Removing empty process `top.fx2_crossbar.bus.$group_23'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_22'.
Removing empty process `top.fx2_crossbar.bus.$group_22'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_21'.
Removing empty process `top.fx2_crossbar.bus.$group_21'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_20'.
Removing empty process `top.fx2_crossbar.bus.$group_20'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_19'.
Removing empty process `top.fx2_crossbar.bus.$group_19'.
Found and cleaned up 1 empty switch in `\top.fx2_crossbar.bus.$group_18'.
Removing empty process `top.fx2_crossbar.bus.$group_18'.
Removing empty process `top.fx2_crossbar.bus.$group_17'.
Removing empty process `top.fx2_crossbar.bus.$group_16'.
Removing empty process `top.fx2_crossbar.bus.$group_15'.
Removing empty process `top.fx2_crossbar.bus.$group_14'.
Removing empty process `top.fx2_crossbar.bus.$group_13'.
Removing empty process `top.fx2_crossbar.bus.$group_12'.
Removing empty process `top.fx2_crossbar.bus.$group_11'.
Removing empty process `top.fx2_crossbar.bus.$group_10'.
Removing empty process `top.fx2_crossbar.bus.$group_9'.
Removing empty process `top.fx2_crossbar.bus.$group_8'.
Removing empty process `top.fx2_crossbar.bus.$group_7'.
Removing empty process `top.fx2_crossbar.bus.$group_6'.
Removing empty process `top.fx2_crossbar.bus.$group_5'.
Removing empty process `top.fx2_crossbar.bus.$group_4'.
Removing empty process `top.fx2_crossbar.bus.$group_3'.
Removing empty process `top.fx2_crossbar.bus.$group_2'.
Removing empty process `top.fx2_crossbar.bus.$group_1'.
Removing empty process `top.fx2_crossbar.bus.$group_0'.
Found and cleaned up 4 empty switches in `\top.registers.$group_5'.
Removing empty process `top.registers.$group_5'.
Found and cleaned up 5 empty switches in `\top.registers.$group_4'.
Removing empty process `top.registers.$group_4'.
Found and cleaned up 3 empty switches in `\top.registers.$group_3'.
Removing empty process `top.registers.$group_3'.
Found and cleaned up 3 empty switches in `\top.registers.$group_2'.
Removing empty process `top.registers.$group_2'.
Found and cleaned up 3 empty switches in `\top.registers.$group_1'.
Removing empty process `top.registers.$group_1'.
Removing empty process `top.registers.$group_0'.
Found and cleaned up 5 empty switches in `\top.i2c_target.$group_11'.
Removing empty process `top.i2c_target.$group_11'.
Found and cleaned up 4 empty switches in `\top.i2c_target.$group_10'.
Removing empty process `top.i2c_target.$group_10'.
Found and cleaned up 4 empty switches in `\top.i2c_target.$group_9'.
Removing empty process `top.i2c_target.$group_9'.
Found and cleaned up 5 empty switches in `\top.i2c_target.$group_8'.
Removing empty process `top.i2c_target.$group_8'.
Found and cleaned up 8 empty switches in `\top.i2c_target.$group_7'.
Removing empty process `top.i2c_target.$group_7'.
Found and cleaned up 6 empty switches in `\top.i2c_target.$group_6'.
Removing empty process `top.i2c_target.$group_6'.
Found and cleaned up 8 empty switches in `\top.i2c_target.$group_5'.
Removing empty process `top.i2c_target.$group_5'.
Found and cleaned up 13 empty switches in `\top.i2c_target.$group_4'.
Removing empty process `top.i2c_target.$group_4'.
Found and cleaned up 4 empty switches in `\top.i2c_target.$group_3'.
Removing empty process `top.i2c_target.$group_3'.
Found and cleaned up 4 empty switches in `\top.i2c_target.$group_2'.
Removing empty process `top.i2c_target.$group_2'.
Found and cleaned up 6 empty switches in `\top.i2c_target.$group_1'.
Removing empty process `top.i2c_target.$group_1'.
Found and cleaned up 18 empty switches in `\top.i2c_target.$group_0'.
Removing empty process `top.i2c_target.$group_0'.
Found and cleaned up 1 empty switch in `\top.i2c_target.bus.$group_9'.
Removing empty process `top.i2c_target.bus.$group_9'.
Found and cleaned up 1 empty switch in `\top.i2c_target.bus.$group_8'.
Removing empty process `top.i2c_target.bus.$group_8'.
Removing empty process `top.i2c_target.bus.$group_7'.
Removing empty process `top.i2c_target.bus.$group_6'.
Removing empty process `top.i2c_target.bus.$group_5'.
Removing empty process `top.i2c_target.bus.$group_4'.
Removing empty process `top.i2c_target.bus.$group_3'.
Removing empty process `top.i2c_target.bus.$group_2'.
Removing empty process `top.i2c_target.bus.$group_1'.
Removing empty process `top.i2c_target.bus.$group_0'.
Removing empty process `top.i2c_target.bus.U$$1.$group_2'.
Removing empty process `top.i2c_target.bus.U$$1.$group_1'.
Removing empty process `top.i2c_target.bus.U$$1.$group_0'.
Removing empty process `top.i2c_target.bus.U$$0.$group_2'.
Removing empty process `top.i2c_target.bus.U$$0.$group_1'.
Removing empty process `top.i2c_target.bus.U$$0.$group_0'.
Cleaned up 669 empty switches.

2.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
Optimizing module top.pin_clk_if_0.
Optimizing module top.pin_data_0__D14.
Optimizing module top.pin_data_0__D13.
Optimizing module top.pin_data_0__D12.
Optimizing module top.pin_data_0__D11.
Optimizing module top.pin_data_0__D10.
Optimizing module top.pin_data_0__D9.
Optimizing module top.pin_data_0__D8.
Optimizing module top.pin_data_0__D7.
Optimizing module top.pin_data_0__D6.
Optimizing module top.pin_data_0__D5.
Optimizing module top.pin_data_0__D4.
Optimizing module top.pin_data_0__D3.
Optimizing module top.pin_data_0__D2.
Optimizing module top.pin_data_0__D1.
Optimizing module top.pin_power_ok_0.
Optimizing module top.pin_control_0__D24.
Optimizing module top.pin_control_0__D23.
Optimizing module top.pin_control_0__D22.
Optimizing module top.pin_control_0__D21.
Optimizing module top.pin_control_0__D20.
Optimizing module top.pin_control_0__D19.
Optimizing module top.pin_control_0__D18.
Optimizing module top.pin_control_0__D17.
Optimizing module top.pin_port_b_6__oe.
Optimizing module top.pin_port_b_6__io.
Optimizing module top.pin_port_b_7__oe.
Optimizing module top.pin_port_b_7__io.
Optimizing module top.pin_port_b_5__oe.
Optimizing module top.pin_port_b_5__io.
Optimizing module top.pin_port_b_4__oe.
Optimizing module top.pin_port_b_4__io.
Optimizing module top.pin_port_b_3__oe.
Optimizing module top.pin_port_b_3__io.
Optimizing module top.pin_port_b_2__oe.
Optimizing module top.pin_port_b_2__io.
Optimizing module top.pin_port_b_1__oe.
Optimizing module top.pin_port_b_1__io.
Optimizing module top.pin_port_b_0__oe.
Optimizing module top.pin_port_b_0__io.
Optimizing module top.pin_port_a_7__oe.
Optimizing module top.pin_port_a_7__io.
Optimizing module top.pin_port_a_6__oe.
Optimizing module top.pin_port_a_6__io.
Optimizing module top.pin_port_a_5__oe.
Optimizing module top.pin_port_a_5__io.
Optimizing module top.pin_port_a_4__oe.
Optimizing module top.pin_port_a_4__io.
Optimizing module top.pin_port_a_3__oe.
Optimizing module top.pin_port_a_3__io.
Optimizing module top.pin_port_a_2__oe.
Optimizing module top.pin_port_a_2__io.
Optimizing module top.pin_port_a_1__oe.
Optimizing module top.pin_port_a_1__io.
Optimizing module top.pin_port_a_0__oe.
Optimizing module top.pin_port_a_0__io.
Optimizing module top.pin_fx2_0__fd.
Optimizing module top.pin_fx2_0__flag.
Optimizing module top.pin_fx2_0__fifoadr.
Optimizing module top.pin_fx2_0__pktend.
Optimizing module top.pin_fx2_0__slwr.
Optimizing module top.pin_fx2_0__slrd.
Optimizing module top.pin_fx2_0__sloe.
Optimizing module top.pin_i2c_0__sda.
Optimizing module top.pin_i2c_0__scl.
Optimizing module top.pin_unused_0.
Optimizing module top.cd_sync.
Optimizing module top.multiplexer.
Optimizing module top.multiplexer.U$$0.
<suppressed ~23 debug messages>
Optimizing module top.multiplexer.U$$0.ByteReplace.
Optimizing module top.multiplexer.U$$0.DwellAvgr.
<suppressed ~4 debug messages>
Optimizing module top.multiplexer.U$$0.YInt.
Optimizing module top.multiplexer.U$$0.XInt.
Optimizing module top.multiplexer.U$$0.XYScanGen.
Optimizing module top.multiplexer.U$$0.XYScanGen.y_counter.
Optimizing module top.multiplexer.U$$0.XYScanGen.x_counter.
Optimizing module top.multiplexer.U$$0.VectorReader.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.RasterReader.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.Writer.
<suppressed ~5 debug messages>
Optimizing module top.multiplexer.U$$0.1byteWriter.
<suppressed ~8 debug messages>
Optimizing module top.multiplexer.U$$0.BeamController.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.ConfigHdlr.
<suppressed ~14 debug messages>
Optimizing module top.multiplexer.U$$0.MuxBus.
<suppressed ~4 debug messages>
Optimizing module top.multiplexer.U$$0.MuxBus.sample_clock.
Optimizing module top.multiplexer.U$$0.MuxBus.a_adc.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.MuxBus.y_dac.
<suppressed ~2 debug messages>
Optimizing module top.multiplexer.U$$0.MuxBus.x_dac.
<suppressed ~2 debug messages>
Optimizing module top.fx2_crossbar.
<suppressed ~50 debug messages>
Optimizing module top.fx2_crossbar.out_fifo_0.
Optimizing module top.fx2_crossbar.out_fifo_0.skid.
<suppressed ~1 debug messages>
Optimizing module top.fx2_crossbar.out_fifo_0.inner.
<suppressed ~1 debug messages>
Optimizing module top.fx2_crossbar.in_fifo_0.
<suppressed ~1 debug messages>
Optimizing module top.fx2_crossbar.in_fifo_0.inner.
<suppressed ~1 debug messages>
Optimizing module top.fx2_crossbar.bus.
Optimizing module top.registers.
<suppressed ~5 debug messages>
Optimizing module top.i2c_target.
<suppressed ~19 debug messages>
Optimizing module top.i2c_target.bus.
Optimizing module top.i2c_target.bus.U$$1.
Optimizing module top.i2c_target.bus.U$$0.

2.4. Executing FLATTEN pass (flatten design).
Deleting now unused module top.pin_clk_if_0.
Deleting now unused module top.pin_data_0__D14.
Deleting now unused module top.pin_data_0__D13.
Deleting now unused module top.pin_data_0__D12.
Deleting now unused module top.pin_data_0__D11.
Deleting now unused module top.pin_data_0__D10.
Deleting now unused module top.pin_data_0__D9.
Deleting now unused module top.pin_data_0__D8.
Deleting now unused module top.pin_data_0__D7.
Deleting now unused module top.pin_data_0__D6.
Deleting now unused module top.pin_data_0__D5.
Deleting now unused module top.pin_data_0__D4.
Deleting now unused module top.pin_data_0__D3.
Deleting now unused module top.pin_data_0__D2.
Deleting now unused module top.pin_data_0__D1.
Deleting now unused module top.pin_power_ok_0.
Deleting now unused module top.pin_control_0__D24.
Deleting now unused module top.pin_control_0__D23.
Deleting now unused module top.pin_control_0__D22.
Deleting now unused module top.pin_control_0__D21.
Deleting now unused module top.pin_control_0__D20.
Deleting now unused module top.pin_control_0__D19.
Deleting now unused module top.pin_control_0__D18.
Deleting now unused module top.pin_control_0__D17.
Deleting now unused module top.pin_port_b_6__oe.
Deleting now unused module top.pin_port_b_6__io.
Deleting now unused module top.pin_port_b_7__oe.
Deleting now unused module top.pin_port_b_7__io.
Deleting now unused module top.pin_port_b_5__oe.
Deleting now unused module top.pin_port_b_5__io.
Deleting now unused module top.pin_port_b_4__oe.
Deleting now unused module top.pin_port_b_4__io.
Deleting now unused module top.pin_port_b_3__oe.
Deleting now unused module top.pin_port_b_3__io.
Deleting now unused module top.pin_port_b_2__oe.
Deleting now unused module top.pin_port_b_2__io.
Deleting now unused module top.pin_port_b_1__oe.
Deleting now unused module top.pin_port_b_1__io.
Deleting now unused module top.pin_port_b_0__oe.
Deleting now unused module top.pin_port_b_0__io.
Deleting now unused module top.pin_port_a_7__oe.
Deleting now unused module top.pin_port_a_7__io.
Deleting now unused module top.pin_port_a_6__oe.
Deleting now unused module top.pin_port_a_6__io.
Deleting now unused module top.pin_port_a_5__oe.
Deleting now unused module top.pin_port_a_5__io.
Deleting now unused module top.pin_port_a_4__oe.
Deleting now unused module top.pin_port_a_4__io.
Deleting now unused module top.pin_port_a_3__oe.
Deleting now unused module top.pin_port_a_3__io.
Deleting now unused module top.pin_port_a_2__oe.
Deleting now unused module top.pin_port_a_2__io.
Deleting now unused module top.pin_port_a_1__oe.
Deleting now unused module top.pin_port_a_1__io.
Deleting now unused module top.pin_port_a_0__oe.
Deleting now unused module top.pin_port_a_0__io.
Deleting now unused module top.pin_fx2_0__fd.
Deleting now unused module top.pin_fx2_0__flag.
Deleting now unused module top.pin_fx2_0__fifoadr.
Deleting now unused module top.pin_fx2_0__pktend.
Deleting now unused module top.pin_fx2_0__slwr.
Deleting now unused module top.pin_fx2_0__slrd.
Deleting now unused module top.pin_fx2_0__sloe.
Deleting now unused module top.pin_i2c_0__sda.
Deleting now unused module top.pin_i2c_0__scl.
Deleting now unused module top.pin_unused_0.
Deleting now unused module top.cd_sync.
Deleting now unused module top.multiplexer.
Deleting now unused module top.multiplexer.U$$0.
Deleting now unused module top.multiplexer.U$$0.ByteReplace.
Deleting now unused module top.multiplexer.U$$0.DwellAvgr.
Deleting now unused module top.multiplexer.U$$0.YInt.
Deleting now unused module top.multiplexer.U$$0.XInt.
Deleting now unused module top.multiplexer.U$$0.XYScanGen.
Deleting now unused module top.multiplexer.U$$0.XYScanGen.y_counter.
Deleting now unused module top.multiplexer.U$$0.XYScanGen.x_counter.
Deleting now unused module top.multiplexer.U$$0.VectorReader.
Deleting now unused module top.multiplexer.U$$0.RasterReader.
Deleting now unused module top.multiplexer.U$$0.Writer.
Deleting now unused module top.multiplexer.U$$0.1byteWriter.
Deleting now unused module top.multiplexer.U$$0.BeamController.
Deleting now unused module top.multiplexer.U$$0.ConfigHdlr.
Deleting now unused module top.multiplexer.U$$0.MuxBus.
Deleting now unused module top.multiplexer.U$$0.MuxBus.sample_clock.
Deleting now unused module top.multiplexer.U$$0.MuxBus.a_adc.
Deleting now unused module top.multiplexer.U$$0.MuxBus.y_dac.
Deleting now unused module top.multiplexer.U$$0.MuxBus.x_dac.
Deleting now unused module top.fx2_crossbar.
Deleting now unused module top.fx2_crossbar.out_fifo_0.
Deleting now unused module top.fx2_crossbar.out_fifo_0.skid.
Deleting now unused module top.fx2_crossbar.out_fifo_0.inner.
Deleting now unused module top.fx2_crossbar.in_fifo_0.
Deleting now unused module top.fx2_crossbar.in_fifo_0.inner.
Deleting now unused module top.fx2_crossbar.bus.
Deleting now unused module top.registers.
Deleting now unused module top.i2c_target.
Deleting now unused module top.i2c_target.bus.
Deleting now unused module top.i2c_target.bus.U$$1.
Deleting now unused module top.i2c_target.bus.U$$0.
<suppressed ~99 debug messages>

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~109 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 210 unused cells and 1529 unused wires.
<suppressed ~300 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~957 debug messages>
Removed a total of 319 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\multiplexer.\U$$0.$procmux$495: \multiplexer.U$$0.fsm_state -> 1'1
      Replacing known input bits on port A of cell $flatten\multiplexer.\U$$0.\1byteWriter.$procmux$1209: \multiplexer.U$$0.1byteWriter.fsm_state -> 1'0
      Replacing known input bits on port A of cell $flatten\multiplexer.\U$$0.\1byteWriter.$procmux$1207: \multiplexer.U$$0.1byteWriter.fsm_state -> 1'1
      Replacing known input bits on port A of cell $flatten\multiplexer.\U$$0.\1byteWriter.$procmux$1214: \multiplexer.U$$0.1byteWriter.fsm_state -> 1'0
      Replacing known input bits on port B of cell $flatten\multiplexer.\U$$0.\XYScanGen.$procmux$876: \multiplexer.U$$0.XYScanGen.increment -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$461.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.$procmux$553.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$575.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$668.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$672.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$674.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$676.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$678.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$680.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$682.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$684.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$686.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$688.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$690.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$692.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$694.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$696.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.$procmux$698.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\ByteReplace.$procmux$812.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\DwellAvgr.$procmux$842.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\DwellAvgr.$procmux$846.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$935.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$935.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$937.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$940.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$940.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$942.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$945.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$945.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$947.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$950.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$950.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$952.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$955.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$955.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$957.
    dead port 1/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$960.
    dead port 3/3 on $pmux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$960.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\VectorReader.$procmux$962.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$procmux$903.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$procmux$905.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$procmux$907.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$procmux$910.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$procmux$879.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$procmux$881.
    dead port 2/2 on $mux $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$procmux$883.
    dead port 1/2 on $mux $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$procmux$886.
Removed 47 multiplexer ports.
<suppressed ~222 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2581: { $flatten\i2c_target.$procmux$2570_CMP $flatten\i2c_target.$procmux$2591_CMP $flatten\i2c_target.$procmux$2559_CMP }
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1512: $auto$opt_reduce.cc:134:opt_pmux$2900
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1531: $auto$opt_reduce.cc:134:opt_pmux$2902
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\Writer.$procmux$1191: { $flatten\multiplexer.\U$$0.\Writer.$procmux$1178_CMP $flatten\multiplexer.\U$$0.\Writer.$procmux$1172_CMP }
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\Writer.$procmux$1197: { $flatten\multiplexer.\U$$0.\Writer.$procmux$1178_CMP $auto$opt_reduce.cc:134:opt_pmux$2904 }
    New ctrl vector for $pmux cell $flatten\registers.$procmux$2418: $auto$opt_reduce.cc:134:opt_pmux$2906
  Optimizing cells in module \top.
Performed a total of 6 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~177 debug messages>
Removed a total of 59 cells.

2.10.6. Executing OPT_DFF pass (perform DFF optimizations).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 386 unused wires.
<suppressed ~7 debug messages>

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~210 debug messages>

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2742: $auto$opt_reduce.cc:134:opt_pmux$2908
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2761: { $flatten\i2c_target.$procmux$2785_CMP $auto$opt_reduce.cc:134:opt_pmux$2910 $flatten\i2c_target.$procmux$2591_CMP }
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1385: { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1378_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1366_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1363_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1360_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1357_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1354_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1351_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1348_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1345_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1342_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1339_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1336_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1333_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1330_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1327_CMP $auto$opt_reduce.cc:134:opt_pmux$2912 }
  Optimizing cells in module \top.
Performed a total of 3 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.10.13. Executing OPT_DFF pass (perform DFF optimizations).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.16. Rerunning OPT passes. (Maybe there is more to do..)

2.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~210 debug messages>

2.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.20. Executing OPT_DFF pass (perform DFF optimizations).

2.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.23. Finished OPT passes. (There is nothing left to do.)

2.11. Executing FSM pass (extract and optimize FSM).

2.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.fx2_crossbar.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.i2c_target.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.ConfigHdlr.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.MuxBus.a_adc.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.MuxBus.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.MuxBus.x_dac.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.MuxBus.y_dac.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.RasterReader.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.VectorReader.fsm_state as FSM state register:
    Register has an initialization value.
Not marking top.multiplexer.U$$0.Writer.fsm_state as FSM state register:
    Register has an initialization value.

2.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~210 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\registers.$69 ($dff) from module top (D = $flatten\registers.$procmux$2442_Y, Q = \multiplexer.U$$0.ConfigHdlr.step_size, rval = 8'00000001).
Adding EN signal on $auto$ff.cc:266:slice$2913 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.step_size).
Adding SRST signal on $flatten\registers.$68 ($dff) from module top (D = $flatten\registers.$procmux$1934_Y, Q = \registers_$signal$17, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2921 ($sdff) from module top (D = \i2c_target.data_i [0], Q = \registers_$signal$17).
Adding SRST signal on $flatten\registers.$67 ($dff) from module top (D = $flatten\registers.$procmux$1945_Y, Q = \multiplexer.U$$0.ConfigHdlr.outer_configuration_flag, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2927 ($sdff) from module top (D = \i2c_target.data_i [0], Q = \multiplexer.U$$0.ConfigHdlr.outer_configuration_flag).
Adding SRST signal on $flatten\registers.$66 ($dff) from module top (D = $flatten\registers.$procmux$2076_Y, Q = \registers_$signal$15, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2933 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$15).
Adding SRST signal on $flatten\registers.$65 ($dff) from module top (D = $flatten\registers.$procmux$1958_Y, Q = $flatten\registers.$signal$31, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2939 ($sdff) from module top (D = \i2c_target.data_i [0], Q = $flatten\registers.$signal$31).
Adding SRST signal on $flatten\registers.$64 ($dff) from module top (D = $flatten\registers.$procmux$1972_Y, Q = $flatten\registers.$signal$28, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2945 ($sdff) from module top (D = \i2c_target.data_i [0], Q = $flatten\registers.$signal$28).
Adding SRST signal on $flatten\registers.$63 ($dff) from module top (D = $flatten\registers.$procmux$1987_Y, Q = \multiplexer.U$$0.ConfigHdlr.eight_bit_output, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$2951 ($sdff) from module top (D = \i2c_target.data_i [0], Q = \multiplexer.U$$0.ConfigHdlr.eight_bit_output).
Adding SRST signal on $flatten\registers.$62 ($dff) from module top (D = $flatten\registers.$procmux$2143_Y, Q = \registers_$signal$13, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2957 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$13).
Adding SRST signal on $flatten\registers.$61 ($dff) from module top (D = $flatten\registers.$procmux$2160_Y, Q = \registers_$signal$12, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2963 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$12).
Adding SRST signal on $flatten\registers.$60 ($dff) from module top (D = $flatten\registers.$procmux$2178_Y, Q = \registers_$signal$11, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2969 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$11).
Adding SRST signal on $flatten\registers.$59 ($dff) from module top (D = $flatten\registers.$procmux$2197_Y, Q = \registers_$signal$10, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2975 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$10).
Adding SRST signal on $flatten\registers.$58 ($dff) from module top (D = $flatten\registers.$procmux$2217_Y, Q = \registers_$signal$9, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2981 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$9).
Adding SRST signal on $flatten\registers.$57 ($dff) from module top (D = $flatten\registers.$procmux$2238_Y, Q = \registers_$signal$8, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2987 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$8).
Adding SRST signal on $flatten\registers.$56 ($dff) from module top (D = $flatten\registers.$procmux$2260_Y, Q = \registers_$signal$7, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2993 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$7).
Adding SRST signal on $flatten\registers.$55 ($dff) from module top (D = $flatten\registers.$procmux$2283_Y, Q = \registers_$signal$6, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$2999 ($sdff) from module top (D = \i2c_target.data_i, Q = \registers_$signal$6).
Adding SRST signal on $flatten\registers.$54 ($dff) from module top (D = $flatten\registers.$procmux$2307_Y, Q = \multiplexer.U$$0.ConfigHdlr.y_full_frame_resolution_b2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3005 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.y_full_frame_resolution_b2).
Adding SRST signal on $flatten\registers.$53 ($dff) from module top (D = $flatten\registers.$procmux$2332_Y, Q = \multiplexer.U$$0.ConfigHdlr.y_full_frame_resolution_b1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3011 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.y_full_frame_resolution_b1).
Adding SRST signal on $flatten\registers.$52 ($dff) from module top (D = $flatten\registers.$procmux$2358_Y, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3017 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b2).
Adding SRST signal on $flatten\registers.$51 ($dff) from module top (D = $flatten\registers.$procmux$2385_Y, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3023 ($sdff) from module top (D = \i2c_target.data_i, Q = \multiplexer.U$$0.ConfigHdlr.x_full_frame_resolution_b1).
Adding SRST signal on $flatten\registers.$50 ($dff) from module top (D = $flatten\registers.$procmux$2015_Y, Q = \multiplexer.U$$0.ConfigHdlr.scan_mode, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3029 ($sdff) from module top (D = \i2c_target.data_i [1:0], Q = \multiplexer.U$$0.ConfigHdlr.scan_mode).
Adding SRST signal on $flatten\registers.$49 ($dff) from module top (D = $flatten\registers.$procmux$2044_Y, Q = \registers_$signal, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3035 ($sdff) from module top (D = \i2c_target.data_i [0], Q = \registers_$signal).
Adding SRST signal on $flatten\registers.$48 ($dff) from module top (D = $flatten\registers.$procmux$2472_Y, Q = \registers.reg_data, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3041 ($sdff) from module top (D = $flatten\registers.$procmux$2470_Y, Q = \registers.reg_data).
Adding SRST signal on $flatten\registers.$47 ($dff) from module top (D = $flatten\registers.$procmux$2480_Y, Q = \registers.reg_addr, rval = 5'00000).
Adding EN signal on $auto$ff.cc:266:slice$3047 ($sdff) from module top (D = \i2c_target.data_i [4:0], Q = \registers.reg_addr).
Adding SRST signal on $flatten\registers.$46 ($dff) from module top (D = $flatten\registers.$procmux$2491_Y, Q = \registers.latch_addr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3051 ($sdff) from module top (D = 1'1, Q = \registers.latch_addr).
Adding SRST signal on $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$8 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$procmux$896_Y, Q = \multiplexer.U$$0.XYScanGen.y_counter.current_count, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3057 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$procmux$896_Y, Q = \multiplexer.U$$0.XYScanGen.y_counter.current_count).
Adding SRST signal on $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$8 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$procmux$920_Y, Q = \multiplexer.U$$0.XYScanGen.x_counter.current_count, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3065 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$procmux$920_Y, Q = \multiplexer.U$$0.XYScanGen.x_counter.current_count).
Adding SRST signal on $flatten\multiplexer.\U$$0.\Writer.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\Writer.$procmux$1168_Y, Q = \multiplexer.U$$0.Writer.fsm_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3073 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\Writer.$procmux$1168_Y, Q = \multiplexer.U$$0.Writer.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\VectorReader.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$967_Y, Q = \multiplexer.U$$0.VectorReader.fsm_state, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$3089 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$967_Y, Q = \multiplexer.U$$0.VectorReader.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\VectorReader.$1 ($dff) from module top (D = { $flatten\multiplexer.\U$$0.\VectorReader.$procmux$996_Y $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1010_Y $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1027_Y $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1044_Y $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1061_Y $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1078_Y }, Q = \multiplexer.U$$0.VectorReader.data, rval = 48'000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3113 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1078_Y, Q = \multiplexer.U$$0.VectorReader.data [7:0]).
Adding EN signal on $auto$ff.cc:266:slice$3113 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1061_Y, Q = \multiplexer.U$$0.VectorReader.data [15:8]).
Adding EN signal on $auto$ff.cc:266:slice$3113 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1044_Y, Q = \multiplexer.U$$0.VectorReader.data [23:16]).
Adding EN signal on $auto$ff.cc:266:slice$3113 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1027_Y, Q = \multiplexer.U$$0.VectorReader.data [31:24]).
Adding EN signal on $auto$ff.cc:266:slice$3113 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1010_Y, Q = \multiplexer.U$$0.VectorReader.data [39:32]).
Adding EN signal on $auto$ff.cc:266:slice$3113 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$996_Y, Q = \multiplexer.U$$0.VectorReader.data [47:40]).
Adding SRST signal on $flatten\multiplexer.\U$$0.\RasterReader.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\RasterReader.$procmux$1114_Y, Q = \multiplexer.U$$0.RasterReader.fsm_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3172 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\RasterReader.$procmux$1114_Y, Q = \multiplexer.U$$0.RasterReader.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\RasterReader.$1 ($dff) from module top (D = { $flatten\multiplexer.\U$$0.\RasterReader.$procmux$1131_Y $flatten\multiplexer.\U$$0.\RasterReader.$procmux$1145_Y }, Q = \multiplexer.U$$0.RasterReader.data, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3188 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\RasterReader.$procmux$1145_Y, Q = \multiplexer.U$$0.RasterReader.data [7:0]).
Adding EN signal on $auto$ff.cc:266:slice$3188 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\RasterReader.$procmux$1131_Y, Q = \multiplexer.U$$0.RasterReader.data [15:8]).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\y_dac.$3 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\y_dac.$procmux$1630_Y, Q = \multiplexer.U$$0.MuxBus.y_dac.fsm_state, rval = 2'01).
Adding EN signal on $auto$ff.cc:266:slice$3213 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\y_dac.$procmux$1626_Y, Q = \multiplexer.U$$0.MuxBus.y_dac.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\x_dac.$3 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\x_dac.$procmux$1646_Y, Q = \multiplexer.U$$0.MuxBus.x_dac.fsm_state, rval = 2'01).
Adding EN signal on $auto$ff.cc:266:slice$3223 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\x_dac.$procmux$1642_Y, Q = \multiplexer.U$$0.MuxBus.x_dac.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$11 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$procmux$1593_Y, Q = \multiplexer.U$$0.MuxBus.sample_clock.clock, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3233 ($sdff) from module top (D = \pin_control_0__D23.control_0__D23__o, Q = \multiplexer.U$$0.MuxBus.sample_clock.clock).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$10 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$3 [3:0], Q = \multiplexer.U$$0.MuxBus.sample_clock.timer, rval = 4'0000).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.\a_adc.$3 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\a_adc.$procmux$1610_Y, Q = \multiplexer.U$$0.MuxBus.a_adc.fsm_state, rval = 2'01).
Adding EN signal on $auto$ff.cc:266:slice$3244 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.\a_adc.$procmux$1606_Y, Q = \multiplexer.U$$0.MuxBus.a_adc.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\MuxBus.$15 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.$procmux$1579_Y, Q = \multiplexer.U$$0.MuxBus.fsm_state, rval = 3'011).
Adding EN signal on $auto$ff.cc:266:slice$3254 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\MuxBus.$procmux$1564_Y, Q = \multiplexer.U$$0.MuxBus.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\DwellAvgr.$25 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\DwellAvgr.$procmux$850_Y, Q = \multiplexer.U$$0.DwellAvgr.running_average_latched, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3274 ($sdff) from module top (D = { $flatten\multiplexer.\U$$0.\DwellAvgr.$procmux$844_Y [15:14] \multiplexer.U$$0.DwellAvgr.running_average [13:6] $flatten\multiplexer.\U$$0.\DwellAvgr.$procmux$844_Y [5:0] }, Q = \multiplexer.U$$0.DwellAvgr.running_average_latched).
Adding SRST signal on $flatten\multiplexer.\U$$0.\DwellAvgr.$24 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\DwellAvgr.$procmux$860_Y, Q = \multiplexer.U$$0.DwellAvgr.start_new_average_latched, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$22 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1314_Y, Q = \multiplexer.U$$0.ConfigHdlr.fsm_state, rval = 5'00000).
Adding EN signal on $auto$ff.cc:266:slice$3285 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1314_Y, Q = \multiplexer.U$$0.ConfigHdlr.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$21 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1443_Y, Q = \multiplexer.U$$0.ConfigHdlr.step_size_locked, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3335 ($sdff) from module top (D = \multiplexer.U$$0.ConfigHdlr.step_size, Q = \multiplexer.U$$0.ConfigHdlr.step_size_locked).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$20 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1451_Y, Q = \multiplexer.U$$0.ConfigHdlr.eight_bit_output_locked, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3343 ($sdff) from module top (D = \multiplexer.U$$0.ConfigHdlr.eight_bit_output, Q = \multiplexer.U$$0.ConfigHdlr.eight_bit_output_locked).
Adding SRST signal on $flatten\multiplexer.\U$$0.\ConfigHdlr.$17 ($dff) from module top (D = { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1478_Y $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1494_Y $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1505_Y $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1486_Y }, Q = \multiplexer.U$$0.ConfigHdlr.roi_registers_locked, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3351 ($sdff) from module top (D = { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1474_Y \registers_$signal$12 \registers_$signal$13 $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1501_Y \registers_$signal$8 \registers_$signal$9 }, Q = \multiplexer.U$$0.ConfigHdlr.roi_registers_locked).
Adding SRST signal on $flatten\multiplexer.\U$$0.\BeamController.$24 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\BeamController.$procmux$1252_Y, Q = \multiplexer.U$$0.BeamController.dwell_time, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3359 ($sdff) from module top (D = \multiplexer.U$$0.BeamController.next_dwell [13:0], Q = \multiplexer.U$$0.BeamController.dwell_time).
Adding SRST signal on $flatten\multiplexer.\U$$0.\BeamController.$23 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\BeamController.$procmux$1261_Y, Q = \multiplexer.U$$0.BeamController.y_position, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3365 ($sdff) from module top (D = \multiplexer.U$$0.BeamController.next_y_position, Q = \multiplexer.U$$0.BeamController.y_position).
Adding SRST signal on $flatten\multiplexer.\U$$0.\BeamController.$22 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\BeamController.$procmux$1270_Y, Q = \multiplexer.U$$0.BeamController.x_position, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3371 ($sdff) from module top (D = \multiplexer.U$$0.BeamController.next_x_position, Q = \multiplexer.U$$0.BeamController.x_position).
Adding SRST signal on $flatten\multiplexer.\U$$0.\BeamController.$21 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\BeamController.$procmux$1283_Y, Q = \multiplexer.U$$0.BeamController.counter, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3377 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.\BeamController.$procmux$1281_Y, Q = \multiplexer.U$$0.BeamController.counter).
Adding SRST signal on $flatten\multiplexer.\U$$0.\BeamController.$19 ($dff) from module top (D = \multiplexer.U$$0.BeamController.dwelling, Q = \multiplexer.U$$0.BeamController.prev_dwelling, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.\1byteWriter.$2 ($dff) from module top (D = $flatten\multiplexer.\U$$0.\1byteWriter.$procmux$1209_Y, Q = \multiplexer.U$$0.1byteWriter.fsm_state, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.$327 ($dff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$497_Y, Q = \multiplexer.U$$0.fsm_state, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3395 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$495_Y, Q = \multiplexer.U$$0.fsm_state).
Adding SRST signal on $flatten\multiplexer.\U$$0.$326 ($dff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$534_Y, Q = \multiplexer.U$$0.data_stale, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3401 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$532_Y, Q = \multiplexer.U$$0.data_stale).
Adding SRST signal on $flatten\multiplexer.\U$$0.$325 ($dff) from module top (D = \multiplexer.U$$0.eflnp, Q = \multiplexer.U$$0.asdf, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.$324 ($dff) from module top (D = \multiplexer.U$$0.ConfigHdlr_config_flag_released, Q = \multiplexer.U$$0.eflnp, rval = 1'0).
Adding SRST signal on $flatten\multiplexer.\U$$0.$323 ($dff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$647_Y, Q = \multiplexer.U$$0.config_flag_latched, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3421 ($sdff) from module top (D = $flatten\multiplexer.\U$$0.$procmux$644_Y, Q = \multiplexer.U$$0.config_flag_latched).
Adding SRST signal on $flatten\i2c_target.\bus.$26 ($dff) from module top (D = \i2c_target.bus.U$$1.stage1, Q = \i2c_target.bus.sda_r, rval = 1'1).
Adding SRST signal on $flatten\i2c_target.\bus.$25 ($dff) from module top (D = \i2c_target.bus.U$$0.stage1, Q = \i2c_target.bus.scl_r, rval = 1'1).
Adding SRST signal on $flatten\i2c_target.$78 ($dff) from module top (D = $flatten\i2c_target.$procmux$2506_Y, Q = \i2c_target.bus_scl_o, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3429 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2506_Y, Q = \i2c_target.bus_scl_o).
Adding SRST signal on $flatten\i2c_target.$77 ($dff) from module top (D = $flatten\i2c_target.$procmux$2519_Y, Q = \i2c_target.write, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3447 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2519_Y, Q = \i2c_target.write).
Adding SRST signal on $flatten\i2c_target.$76 ($dff) from module top (D = $flatten\i2c_target.$procmux$2544_Y, Q = \i2c_target.data_i, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3463 ($sdff) from module top (D = \i2c_target.shreg_i, Q = \i2c_target.data_i).
Adding SRST signal on $flatten\i2c_target.$75 ($dff) from module top (D = $flatten\i2c_target.$procmux$2581_Y, Q = \i2c_target.shreg_o, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3473 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2581_Y, Q = \i2c_target.shreg_o).
Adding SRST signal on $flatten\i2c_target.$74 ($dff) from module top (D = $flatten\i2c_target.$procmux$2668_Y, Q = \i2c_target.bus_sda_o, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3507 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2668_Y, Q = \i2c_target.bus_sda_o).
Adding SRST signal on $flatten\i2c_target.$73 ($dff) from module top (D = $flatten\i2c_target.$procmux$2742_Y, Q = \i2c_target.shreg_i, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3559 ($sdff) from module top (D = $flatten\i2c_target.$24 [7:0], Q = \i2c_target.shreg_i).
Adding SRST signal on $flatten\i2c_target.$72 ($dff) from module top (D = $flatten\i2c_target.$procmux$2761_Y, Q = \i2c_target.bitno, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$3567 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2761_Y, Q = \i2c_target.bitno).
Adding SRST signal on $flatten\i2c_target.$71 ($dff) from module top (D = $flatten\i2c_target.$procmux$2799_Y, Q = \i2c_target.fsm_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$3593 ($sdff) from module top (D = $flatten\i2c_target.$procmux$2799_Y, Q = \i2c_target.fsm_state).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\skid.$49 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$procmux$1816_Y, Q = \fx2_crossbar.out_fifo_0.skid.level, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3633 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$procmux$1816_Y, Q = \fx2_crossbar.out_fifo_0.skid.level).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\skid.$48 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$procmux$1822_Y, Q = \fx2_crossbar.out_fifo_0.skid.consume, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3641 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$18 [1:0], Q = \fx2_crossbar.out_fifo_0.skid.consume).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\skid.$47 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$procmux$1828_Y, Q = \fx2_crossbar.out_fifo_0.skid.produce, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3647 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\skid.$12 [1:0], Q = \fx2_crossbar.out_fifo_0.skid.produce).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\inner.$76 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1836_Y, Q = \fx2_crossbar.out_fifo_0.inner.r_rdy, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3653 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1836_Y, Q = \fx2_crossbar.out_fifo_0.inner.r_rdy).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\inner.$75 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1844_Y, Q = \fx2_crossbar.out_fifo_0.inner.inner_level, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3661 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1844_Y, Q = \fx2_crossbar.out_fifo_0.inner.inner_level).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\inner.$74 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1850_Y, Q = \fx2_crossbar.out_fifo_0.inner.consume, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3669 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$28 [8:0], Q = \fx2_crossbar.out_fifo_0.inner.consume).
Adding SRST signal on $flatten\fx2_crossbar.\out_fifo_0.\inner.$73 ($dff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$procmux$1856_Y, Q = \fx2_crossbar.out_fifo_0.inner.produce, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3675 ($sdff) from module top (D = $flatten\fx2_crossbar.\out_fifo_0.\inner.$12 [8:0], Q = \fx2_crossbar.out_fifo_0.inner.produce).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.\inner.$76 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1882_Y, Q = \fx2_crossbar.in_fifo_0.inner.r_rdy, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3681 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1882_Y, Q = \fx2_crossbar.in_fifo_0.inner.r_rdy).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.\inner.$75 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1890_Y, Q = \fx2_crossbar.in_fifo_0.inner.inner_level, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3689 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1890_Y, Q = \fx2_crossbar.in_fifo_0.inner.inner_level).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.\inner.$74 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1896_Y, Q = \fx2_crossbar.in_fifo_0.inner.consume, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3697 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$28 [8:0], Q = \fx2_crossbar.in_fifo_0.inner.consume).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.\inner.$73 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$procmux$1902_Y, Q = \fx2_crossbar.in_fifo_0.inner.produce, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$3703 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.\inner.$12 [8:0], Q = \fx2_crossbar.in_fifo_0.inner.produce).
Adding SRST signal on $flatten\fx2_crossbar.\in_fifo_0.$14 ($dff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.$procmux$1872_Y, Q = \fx2_crossbar.in_fifo_0.queued, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:266:slice$3709 ($sdff) from module top (D = $flatten\fx2_crossbar.\in_fifo_0.$3 [9:0], Q = \fx2_crossbar.in_fifo_0.queued).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$16 ($dff) from module top (D = $flatten\fx2_crossbar.\bus.$9, Q = \fx2_crossbar.bus.nrdy_o, rval = 4'0000).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$15 ($dff) from module top (D = \fx2_crossbar.bus.nrdy_i, Q = \fx2_crossbar.bus.nrdy_r, rval = 4'0000).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$14 ($dff) from module top (D = \fx2_crossbar.bus.slrd_r, Q = \fx2_crossbar.bus.slrd_p, rval = 1'0).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$13 ($dff) from module top (D = \fx2_crossbar.bus.slrd, Q = \fx2_crossbar.bus.slrd_r, rval = 1'0).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$12 ($dff) from module top (D = \fx2_crossbar.bus.addr_r, Q = \fx2_crossbar.bus.addr_p, rval = 2'00).
Adding SRST signal on $flatten\fx2_crossbar.\bus.$11 ($dff) from module top (D = \fx2_crossbar.bus_addr, Q = \fx2_crossbar.bus.addr_r, rval = 2'00).
Adding SRST signal on $flatten\fx2_crossbar.$97 ($dff) from module top (D = $flatten\fx2_crossbar.$procmux$1702_Y, Q = \fx2_crossbar.fsm_state, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$3721 ($sdff) from module top (D = $flatten\fx2_crossbar.$procmux$1702_Y, Q = \fx2_crossbar.fsm_state).
Adding SRST signal on $flatten\fx2_crossbar.$96 ($dff) from module top (D = $flatten\fx2_crossbar.$procmux$1728_Y, Q = \fx2_crossbar.bus_addr, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3733 ($sdff) from module top (D = $flatten\fx2_crossbar.$auto$proc_rom.cc:149:do_switch$381, Q = \fx2_crossbar.bus_addr).
Adding SRST signal on $flatten\fx2_crossbar.$95 ($dff) from module top (D = $flatten\fx2_crossbar.$procmux$1734_Y, Q = \fx2_crossbar.bus_data__oe, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3735 ($sdff) from module top (D = $flatten\fx2_crossbar.$procmux$1734_Y, Q = \fx2_crossbar.bus_data__oe).
Adding SRST signal on $flatten\fx2_crossbar.$94 ($dff) from module top (D = $flatten\fx2_crossbar.$procmux$1742_Y, Q = \fx2_crossbar.bus_sloe, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3743 ($sdff) from module top (D = $flatten\fx2_crossbar.$procmux$1742_Y, Q = \fx2_crossbar.bus_sloe).
Adding EN signal on $flatten\cd_sync.$11 ($dff) from module top (D = $flatten\cd_sync.$5 [9:0], Q = \cd_sync.timer).
Adding EN signal on $flatten\cd_sync.$10 ($dff) from module top (D = 1'1, Q = \cd_sync.ready).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 266 unused cells and 257 unused wires.
<suppressed ~334 debug messages>

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~33 debug messages>

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~163 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~474 debug messages>
Removed a total of 158 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 158 unused wires.
<suppressed ~1 debug messages>

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.16. Rerunning OPT passes. (Maybe there is more to do..)

2.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~165 debug messages>

2.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.20. Executing OPT_DFF pass (perform DFF optimizations).

2.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.23. Finished OPT passes. (There is nothing left to do.)

2.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 26 address bits (of 32) from memory init port top.$flatten\fx2_crossbar.$auto$mem.cc:319:emit$384 ($flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382).
Removed top 2 bits (of 4) from mux cell top.$flatten\i2c_target.$procmux$2852 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\i2c_target.$procmux$2815 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\i2c_target.$procmux$2789 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2785_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2719_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2591_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2570_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2531_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2516_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\i2c_target.$procmux$2507_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\i2c_target.$37 ($eq).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\i2c_target.$28 ($or).
Removed top 1 bits (of 9) from port A of cell top.$flatten\i2c_target.$28 ($or).
Removed top 1 bits (of 4) from port Y of cell top.$flatten\i2c_target.$17 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2468_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2467_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2466_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2465_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2464_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2463_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2462_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2461_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2460_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2459_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2458_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2457_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2456_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2455_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2454_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2453_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2452_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2451_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\registers.$procmux$2450_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3512 ($ne).
Removed top 3 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2381_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2354_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2328_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2303_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2279_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2256_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2234_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2213_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2193_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2174_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2156_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2139_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\registers.$procmux$2011_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$1983_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\registers.$procmux$1968_CMP0 ($eq).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$64 ($sub).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$49 ($add).
Removed top 1 bits (of 10) from mux cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$34 ($mux).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$30 ($add).
Removed top 1 bits (of 10) from mux cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$15 ($mux).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$11 ($add).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$46 ($sub).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$35 ($add).
Removed top 1 bits (of 3) from mux cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$24 ($mux).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$20 ($add).
Removed top 1 bits (of 3) from mux cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$15 ($mux).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$11 ($add).
Removed top 1 bits (of 11) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.$5 ($add).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$64 ($sub).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$49 ($add).
Removed top 1 bits (of 10) from mux cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$34 ($mux).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$30 ($add).
Removed top 1 bits (of 10) from mux cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$15 ($mux).
Removed top 1 bits (of 10) from port Y of cell top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$11 ($add).
Removed top 1 bits (of 2) from FF cell top.$auto$ff.cc:266:slice$3719 ($sdff).
Removed top 2 bits (of 3) from port B of cell top.$flatten\fx2_crossbar.$procmux$1721_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\fx2_crossbar.$procmux$1720_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\fx2_crossbar.$procmux$1681_CMP0 ($eq).
Removed top 1 bits (of 4) from port A of cell top.$flatten\fx2_crossbar.$8 ($and).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3082 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3084 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3086 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3098 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3100 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3102 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3104 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3106 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3108 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3110 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3185 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3183 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3181 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3306 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3304 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3302 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3300 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3298 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3296 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3294 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3330 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3328 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3326 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3324 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3322 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3320 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3318 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3316 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3314 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3312 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3310 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3308 ($ne).
Removed top 10 bits (of 24) from port Y of cell top.$flatten\multiplexer.\U$$0.\XInt.$3 ($mul).
Removed top 10 bits (of 24) from port Y of cell top.$flatten\multiplexer.\U$$0.\YInt.$3 ($mul).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.$138 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3740 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3730 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3728 ($ne).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.$procmux$469 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3452 ($ne).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.$procmux$664 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3484 ($ne).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$5 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.\a_adc.$procmux$1609_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.\y_dac.$procmux$1629_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.\x_dac.$procmux$1645_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.$procmux$1578_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.$procmux$1555_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\MuxBus.$procmux$1551_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3606 ($ne).
Removed top 6 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1393 ($mux).
Removed top 7 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1390 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1374 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1372_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1369_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1366_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1363_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1360_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1357_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1354_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1351_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1348_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1345_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1342_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1339_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1336_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1333_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1330_CMP0 ($eq).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\multiplexer.\U$$0.\BeamController.$15 ($add).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$3524 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\Writer.$procmux$1163_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\multiplexer.\U$$0.\RasterReader.$procmux$1101_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1071_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1054_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1037_CMP0 ($eq).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$7 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$7 ($add).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.\DwellAvgr.$procmux$848 ($mux).
Removed top 2 bits (of 16) from port A of cell top.$flatten\multiplexer.\U$$0.\DwellAvgr.$13 ($add).
Removed top 1 bits (of 11) from port Y of cell top.$flatten\cd_sync.$7 ($add).
Removed top 1 bits (of 2) from FF cell top.$auto$ff.cc:266:slice$3720 ($sdff).
Removed top 2 bits (of 8) from FF cell top.$auto$ff.cc:266:slice$3163 ($sdffe).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.$procmux$467 ($mux).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.$procmux$465 ($mux).
Removed top 2 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$996 ($pmux).
Removed top 2 bits (of 16) from mux cell top.$flatten\multiplexer.\U$$0.$procmux$463 ($mux).
Removed top 2 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1001 ($mux).
Removed top 2 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$994 ($mux).
Removed top 2 bits (of 8) from mux cell top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$999 ($mux).
Removed top 1 bits (of 11) from wire top.$flatten\cd_sync.$5.
Removed top 1 bits (of 11) from wire top.$flatten\fx2_crossbar.\in_fifo_0.$3.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$10.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$12.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$28.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$29.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$47.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\in_fifo_0.\inner.$62.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$10.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$12.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$28.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$29.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$47.
Removed top 1 bits (of 10) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\inner.$62.
Removed top 1 bits (of 3) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$10.
Removed top 1 bits (of 3) from wire top.$flatten\fx2_crossbar.\out_fifo_0.\skid.$12.
Removed top 1 bits (of 4) from wire top.$flatten\i2c_target.$15.
Removed top 1 bits (of 9) from wire top.$flatten\i2c_target.$24.
Removed top 1 bits (of 4) from wire top.$flatten\i2c_target.$procmux$2789_Y.
Removed top 1 bits (of 4) from wire top.$flatten\i2c_target.$procmux$2815_Y.
Removed top 2 bits (of 4) from wire top.$flatten\i2c_target.$procmux$2852_Y.
Removed top 2 bits (of 16) from wire top.$flatten\multiplexer.\U$$0.$procmux$463_Y.
Removed top 2 bits (of 16) from wire top.$flatten\multiplexer.\U$$0.$procmux$465_Y.
Removed top 2 bits (of 16) from wire top.$flatten\multiplexer.\U$$0.$procmux$467_Y.
Removed top 1 bits (of 17) from wire top.$flatten\multiplexer.\U$$0.\BeamController.$13.
Removed top 3 bits (of 5) from wire top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1374_Y.
Removed top 7 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1390_Y.
Removed top 6 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1393_Y.
Removed top 1 bits (of 17) from wire top.$flatten\multiplexer.\U$$0.\DwellAvgr.$11.
Removed top 16 bits (of 17) from wire top.$flatten\multiplexer.\U$$0.\DwellAvgr.$12.
Removed top 2 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1001_Y.
Removed top 2 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$994_Y.
Removed top 2 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$996_Y.
Removed top 2 bits (of 8) from wire top.$flatten\multiplexer.\U$$0.\VectorReader.$procmux$999_Y.

2.14. Executing PEEPOPT pass (run peephole optimizers).

2.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

2.16. Executing SHARE pass (SAT-based resource sharing).

2.17. Executing TECHMAP pass (map to technology primitives).

2.17.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~140 debug messages>

2.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\cd_sync.$7 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.$5 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.\inner.$11 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.\inner.$30 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.\inner.$49 ($add).
  creating $macc model for $flatten\fx2_crossbar.\in_fifo_0.\inner.$64 ($sub).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\inner.$11 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\inner.$30 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\inner.$49 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\inner.$64 ($sub).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\skid.$11 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\skid.$20 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\skid.$35 ($add).
  creating $macc model for $flatten\fx2_crossbar.\out_fifo_0.\skid.$46 ($sub).
  creating $macc model for $flatten\i2c_target.$17 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\BeamController.$15 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\DwellAvgr.$13 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$5 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\XInt.$3 ($mul).
  creating $macc model for $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$7 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$7 ($add).
  creating $macc model for $flatten\multiplexer.\U$$0.\YInt.$3 ($mul).
  creating $alu model for $macc $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$7.
  creating $alu model for $macc $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$7.
  creating $alu model for $macc $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$5.
  creating $alu model for $macc $flatten\multiplexer.\U$$0.\DwellAvgr.$13.
  creating $alu model for $macc $flatten\multiplexer.\U$$0.\BeamController.$15.
  creating $alu model for $macc $flatten\i2c_target.$17.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\skid.$46.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\skid.$35.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\skid.$20.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\skid.$11.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\inner.$64.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\inner.$49.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\inner.$30.
  creating $alu model for $macc $flatten\fx2_crossbar.\out_fifo_0.\inner.$11.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.\inner.$64.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.\inner.$49.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.\inner.$30.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.\inner.$11.
  creating $alu model for $macc $flatten\fx2_crossbar.\in_fifo_0.$5.
  creating $alu model for $macc $flatten\cd_sync.$7.
  creating $macc cell for $flatten\multiplexer.\U$$0.\XInt.$3: $auto$alumacc.cc:365:replace_macc$3788
  creating $macc cell for $flatten\multiplexer.\U$$0.\YInt.$3: $auto$alumacc.cc:365:replace_macc$3789
  creating $alu model for $flatten\fx2_crossbar.\in_fifo_0.$11 ($ge): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\ConfigHdlr.$2 ($le): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\ConfigHdlr.$4 ($le): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$2 ($ge): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$4 ($lt): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$2 ($ge): new $alu
  creating $alu model for $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$4 ($lt): new $alu
  creating $alu model for $flatten\registers.$20 ($lt): new $alu
  creating $alu cell for $flatten\registers.$20: $auto$alumacc.cc:485:replace_alu$3798
  creating $alu cell for $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$4: $auto$alumacc.cc:485:replace_alu$3809
  creating $alu cell for $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$2: $auto$alumacc.cc:485:replace_alu$3814
  creating $alu cell for $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$4: $auto$alumacc.cc:485:replace_alu$3827
  creating $alu cell for $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$2: $auto$alumacc.cc:485:replace_alu$3832
  creating $alu cell for $flatten\multiplexer.\U$$0.\ConfigHdlr.$4: $auto$alumacc.cc:485:replace_alu$3845
  creating $alu cell for $flatten\multiplexer.\U$$0.\ConfigHdlr.$2: $auto$alumacc.cc:485:replace_alu$3858
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.$11: $auto$alumacc.cc:485:replace_alu$3867
  creating $alu cell for $flatten\cd_sync.$7: $auto$alumacc.cc:485:replace_alu$3880
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.$5: $auto$alumacc.cc:485:replace_alu$3883
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.\inner.$11: $auto$alumacc.cc:485:replace_alu$3886
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.\inner.$30: $auto$alumacc.cc:485:replace_alu$3889
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.\inner.$49: $auto$alumacc.cc:485:replace_alu$3892
  creating $alu cell for $flatten\fx2_crossbar.\in_fifo_0.\inner.$64: $auto$alumacc.cc:485:replace_alu$3895
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\inner.$11: $auto$alumacc.cc:485:replace_alu$3898
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\inner.$30: $auto$alumacc.cc:485:replace_alu$3901
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\inner.$49: $auto$alumacc.cc:485:replace_alu$3904
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\inner.$64: $auto$alumacc.cc:485:replace_alu$3907
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\skid.$11: $auto$alumacc.cc:485:replace_alu$3910
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\skid.$20: $auto$alumacc.cc:485:replace_alu$3913
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\skid.$35: $auto$alumacc.cc:485:replace_alu$3916
  creating $alu cell for $flatten\fx2_crossbar.\out_fifo_0.\skid.$46: $auto$alumacc.cc:485:replace_alu$3919
  creating $alu cell for $flatten\i2c_target.$17: $auto$alumacc.cc:485:replace_alu$3922
  creating $alu cell for $flatten\multiplexer.\U$$0.\BeamController.$15: $auto$alumacc.cc:485:replace_alu$3925
  creating $alu cell for $flatten\multiplexer.\U$$0.\DwellAvgr.$13: $auto$alumacc.cc:485:replace_alu$3928
  creating $alu cell for $flatten\multiplexer.\U$$0.\MuxBus.\sample_clock.$5: $auto$alumacc.cc:485:replace_alu$3931
  creating $alu cell for $flatten\multiplexer.\U$$0.\XYScanGen.\x_counter.$7: $auto$alumacc.cc:485:replace_alu$3934
  creating $alu cell for $flatten\multiplexer.\U$$0.\XYScanGen.\y_counter.$7: $auto$alumacc.cc:485:replace_alu$3937
  created 28 $alu and 2 $macc cells.

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

2.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~165 debug messages>

2.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.6. Executing OPT_DFF pass (perform DFF optimizations).

2.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 14 unused wires.
<suppressed ~6 debug messages>

2.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.9. Rerunning OPT passes. (Maybe there is more to do..)

2.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~165 debug messages>

2.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.13. Executing OPT_DFF pass (perform DFF optimizations).

2.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.16. Finished OPT passes. (There is nothing left to do.)

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.fx2_crossbar.out_fifo_0.skid.r_port write port 0.

2.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382'[0] in module `\top': merging output FF to cell.
Checking read port `\fx2_crossbar.out_fifo_0.skid.r_port'[0] in module `\top': no output FF found.
Checking read port address `\fx2_crossbar.out_fifo_0.skid.r_port'[0] in module `\top': address FF has fully-defined init value, not supported.

2.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

2.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382
mapping memory top.fx2_crossbar.in_fifo_0.inner.storage via $__ICE40_RAM4K_
mapping memory top.fx2_crossbar.out_fifo_0.inner.storage$1 via $__ICE40_RAM4K_
using FF mapping for memory top.fx2_crossbar.out_fifo_0.skid.r_port
<suppressed ~218 debug messages>

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.25.2. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.25.3. Continuing TECHMAP pass.
Using template $paramod$dd3348ae87356301b9facf18ec8783aacc96eb8d\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~27 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~256 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

2.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$3430 ($sdffe) from module top.

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 212 unused wires.
<suppressed ~5 debug messages>

2.27.5. Rerunning OPT passes. (Removed registers in this run.)

2.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

2.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.27.8. Executing OPT_DFF pass (perform DFF optimizations).

2.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.27.10. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382 in module \top:
  created 64 $dff cells and 0 static cells of width 2.
Extracted data FF from read port 0 of top.$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382: $$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdreg[0]
  read interface: 1 $dff and 63 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \fx2_crossbar.out_fifo_0.skid.r_port in module \top:
  created 3 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 3 $mux cells.
  write interface: 3 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~45 debug messages>

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][7]$4171.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][7]$4171.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][6]$4168.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][6]$4168.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][5]$4165.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][5]$4165.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][4]$4162.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][4]$4162.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][3]$4159.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][3]$4159.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][1]$4153.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][1]$4153.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][17]$4201.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][17]$4201.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][25]$4225.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][25]$4225.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][27]$4231.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][27]$4231.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][5]$4093.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][5]$4093.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][3]$4087.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][3]$4087.
    dead port 1/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][1]$4081.
    dead port 2/2 on $mux $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][1]$4081.
Removed 24 multiplexer ports.
<suppressed ~143 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$opt_dff.cc:254:combine_resets$3363: { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1311_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1324_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1327_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1330_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1333_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1336_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1339_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1342_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1345_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1348_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1351_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1354_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1357_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1360_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1363_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1366_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1369_CMP $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1372_CMP $auto$rtlil.cc:2412:Not$3043 \registers_$signal }
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][26]$4228:
      Old ports: A=2'10, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][13]$a$4142
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][13]$a$4142 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][13]$a$4142 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][2]$4156:
      Old ports: A=2'10, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][1]$a$4106
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][1]$a$4106 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][1]$a$4106 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][16]$4198:
      Old ports: A=2'11, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][8]$a$4127
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][8]$a$4127 [0]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][8]$a$4127 [1] = $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][8]$a$4127 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][0]$4150:
      Old ports: A=2'01, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][0]$a$4103
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][0]$a$4103 [0]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][0]$a$4103 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][5][8]$4174:
      Old ports: A=2'10, B=2'00, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][4]$a$4115
      New ports: A=1'1, B=1'0, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][4]$a$4115 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][4]$a$4115 [0] = 1'0
    New ctrl vector for $pmux cell $flatten\fx2_crossbar.$procmux$1702: { $flatten\fx2_crossbar.$procmux$1721_CMP $flatten\fx2_crossbar.$procmux$1720_CMP $auto$opt_reduce.cc:134:opt_pmux$4288 }
    Consolidated identical input bits for $mux cell $flatten\fx2_crossbar.$procmux$1718:
      Old ports: A=3'100, B=3'011, Y=$flatten\fx2_crossbar.$procmux$1718_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\fx2_crossbar.$procmux$1718_Y [2] $flatten\fx2_crossbar.$procmux$1718_Y [0] }
      New connections: $flatten\fx2_crossbar.$procmux$1718_Y [1] = $flatten\fx2_crossbar.$procmux$1718_Y [0]
    Consolidated identical input bits for $mux cell $flatten\fx2_crossbar.$procmux$1760:
      Old ports: A=4'0000, B={ $flatten\fx2_crossbar.$18 2'00 }, Y=\fx2_crossbar.bus.nrdy_i
      New ports: A=2'00, B=$flatten\fx2_crossbar.$18, Y=\fx2_crossbar.bus.nrdy_i [3:2]
      New connections: \fx2_crossbar.bus.nrdy_i [1:0] = 2'00
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2581: $flatten\i2c_target.$procmux$2591_CMP
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2668: { $flatten\i2c_target.$procmux$2516_CMP $auto$opt_reduce.cc:134:opt_pmux$4292 $auto$opt_reduce.cc:134:opt_pmux$4290 }
    New ctrl vector for $pmux cell $flatten\i2c_target.$procmux$2761: $auto$opt_reduce.cc:134:opt_pmux$4294
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2789:
      Old ports: A=3'101, B=3'000, Y=$auto$wreduce.cc:461:run$3771 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$3771 [0]
      New connections: $auto$wreduce.cc:461:run$3771 [2:1] = { $auto$wreduce.cc:461:run$3771 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2795:
      Old ports: A={ 1'0 $auto$wreduce.cc:461:run$3771 [2:0] }, B=4'0001, Y=$flatten\i2c_target.$procmux$2795_Y
      New ports: A=$auto$wreduce.cc:461:run$3771 [2:0], B=3'001, Y=$flatten\i2c_target.$procmux$2795_Y [2:0]
      New connections: $flatten\i2c_target.$procmux$2795_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2807:
      Old ports: A=4'1000, B=4'0001, Y=$flatten\i2c_target.$procmux$2807_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\i2c_target.$procmux$2807_Y [3] $flatten\i2c_target.$procmux$2807_Y [0] }
      New connections: $flatten\i2c_target.$procmux$2807_Y [2:1] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2815:
      Old ports: A=3'111, B=3'001, Y=$auto$wreduce.cc:461:run$3772 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$3772 [1]
      New connections: { $auto$wreduce.cc:461:run$3772 [2] $auto$wreduce.cc:461:run$3772 [0] } = { $auto$wreduce.cc:461:run$3772 [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2817:
      Old ports: A={ 1'0 $auto$wreduce.cc:461:run$3772 [2:0] }, B=4'0000, Y=$flatten\i2c_target.$procmux$2817_Y
      New ports: A=$auto$wreduce.cc:461:run$3772 [2:0], B=3'000, Y=$flatten\i2c_target.$procmux$2817_Y [2:0]
      New connections: $flatten\i2c_target.$procmux$2817_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2822:
      Old ports: A=4'0100, B=4'0001, Y=$flatten\i2c_target.$procmux$2822_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\i2c_target.$procmux$2822_Y [2] $flatten\i2c_target.$procmux$2822_Y [0] }
      New connections: { $flatten\i2c_target.$procmux$2822_Y [3] $flatten\i2c_target.$procmux$2822_Y [1] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2833:
      Old ports: A=4'0110, B=4'0001, Y=$flatten\i2c_target.$procmux$2833_Y
      New ports: A=2'10, B=2'01, Y=$flatten\i2c_target.$procmux$2833_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2833_Y [3:2] = { 1'0 $flatten\i2c_target.$procmux$2833_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2844:
      Old ports: A=4'0101, B=4'0100, Y=$flatten\i2c_target.$procmux$2844_Y
      New ports: A=1'1, B=1'0, Y=$flatten\i2c_target.$procmux$2844_Y [0]
      New connections: $flatten\i2c_target.$procmux$2844_Y [3:1] = 3'010
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2852:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:461:run$3773 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$3773 [0]
      New connections: $auto$wreduce.cc:461:run$3773 [1] = $auto$wreduce.cc:461:run$3773 [0]
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2860:
      Old ports: A={ 2'00 $auto$wreduce.cc:461:run$3773 [1:0] }, B=4'0001, Y=$flatten\i2c_target.$procmux$2860_Y
      New ports: A=$auto$wreduce.cc:461:run$3773 [1:0], B=2'01, Y=$flatten\i2c_target.$procmux$2860_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2860_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2867:
      Old ports: A=4'0010, B=4'0000, Y=$flatten\i2c_target.$procmux$2867_Y
      New ports: A=1'1, B=1'0, Y=$flatten\i2c_target.$procmux$2867_Y [1]
      New connections: { $flatten\i2c_target.$procmux$2867_Y [3:2] $flatten\i2c_target.$procmux$2867_Y [0] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ByteReplace.$procmux$814:
      Old ports: A=8'00000000, B=8'11111111, Y=\multiplexer.U$$0.ByteReplace.replaced_onebyte
      New ports: A=1'0, B=1'1, Y=\multiplexer.U$$0.ByteReplace.replaced_onebyte [0]
      New connections: \multiplexer.U$$0.ByteReplace.replaced_onebyte [7:1] = { \multiplexer.U$$0.ByteReplace.replaced_onebyte [0] \multiplexer.U$$0.ByteReplace.replaced_onebyte [0] \multiplexer.U$$0.ByteReplace.replaced_onebyte [0] \multiplexer.U$$0.ByteReplace.replaced_onebyte [0] \multiplexer.U$$0.ByteReplace.replaced_onebyte [0] \multiplexer.U$$0.ByteReplace.replaced_onebyte [0] \multiplexer.U$$0.ByteReplace.replaced_onebyte [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1317:
      Old ports: A=5'00000, B=5'10011, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1317_Y
      New ports: A=1'0, B=1'1, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1317_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1317_Y [4:1] = { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1317_Y [0] 2'00 $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1317_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y
      New ports: A=1'0, B=1'1, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [7:1] = { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1383_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y
      New ports: A=1'0, B=1'1, Y=$flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [7:1] = { $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [0] $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1438_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\RasterReader.$procmux$1117:
      Old ports: A=2'10, B=2'00, Y=$flatten\multiplexer.\U$$0.\RasterReader.$procmux$1117_Y
      New ports: A=1'1, B=1'0, Y=$flatten\multiplexer.\U$$0.\RasterReader.$procmux$1117_Y [1]
      New connections: $flatten\multiplexer.\U$$0.\RasterReader.$procmux$1117_Y [0] = 1'0
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1010: $auto$opt_reduce.cc:134:opt_pmux$4296
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1027: $auto$opt_reduce.cc:134:opt_pmux$4298
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1044: $auto$opt_reduce.cc:134:opt_pmux$4300
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1061: $auto$opt_reduce.cc:134:opt_pmux$4302
    New ctrl vector for $pmux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1078: $auto$opt_reduce.cc:134:opt_pmux$4304
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$970:
      Old ports: A=3'110, B=3'000, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$970_Y
      New ports: A=1'1, B=1'0, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$970_Y [1]
      New connections: { $flatten\multiplexer.\U$$0.\VectorReader.$procmux$970_Y [2] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$970_Y [0] } = { $flatten\multiplexer.\U$$0.\VectorReader.$procmux$970_Y [1] 1'0 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4293: { $flatten\i2c_target.$procmux$2531_CMP $flatten\i2c_target.$procmux$2591_CMP $flatten\i2c_target.$procmux$2719_CMP }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][6]$4096:
      Old ports: A=2'00, B=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][6]$b$4098, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$4076
      New ports: A=1'0, B=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][13]$a$4142 [1], Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$4076 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$4076 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][2]$4084:
      Old ports: A=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][2]$a$4085, B=2'10, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$4070
      New ports: A=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][4][4]$a$4115 [1], B=1'1, Y=$memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$4070 [1]
      New connections: $memory$flatten\fx2_crossbar.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$4070 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2795:
      Old ports: A=$auto$wreduce.cc:461:run$3771 [2:0], B=3'001, Y=$flatten\i2c_target.$procmux$2795_Y [2:0]
      New ports: A={ $auto$wreduce.cc:461:run$3771 [0] $auto$wreduce.cc:461:run$3771 [0] }, B=2'01, Y={ $flatten\i2c_target.$procmux$2795_Y [2] $flatten\i2c_target.$procmux$2795_Y [0] }
      New connections: $flatten\i2c_target.$procmux$2795_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2797:
      Old ports: A=$flatten\i2c_target.$procmux$2795_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2797_Y
      New ports: A=$flatten\i2c_target.$procmux$2795_Y [2:0], B=3'000, Y=$flatten\i2c_target.$procmux$2797_Y [2:0]
      New connections: $flatten\i2c_target.$procmux$2797_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2809:
      Old ports: A=$flatten\i2c_target.$procmux$2807_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2809_Y
      New ports: A={ $flatten\i2c_target.$procmux$2807_Y [3] $flatten\i2c_target.$procmux$2807_Y [0] }, B=2'00, Y={ $flatten\i2c_target.$procmux$2809_Y [3] $flatten\i2c_target.$procmux$2809_Y [0] }
      New connections: $flatten\i2c_target.$procmux$2809_Y [2:1] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2817:
      Old ports: A=$auto$wreduce.cc:461:run$3772 [2:0], B=3'000, Y=$flatten\i2c_target.$procmux$2817_Y [2:0]
      New ports: A={ $auto$wreduce.cc:461:run$3772 [1] 1'1 }, B=2'00, Y=$flatten\i2c_target.$procmux$2817_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2817_Y [2] = $flatten\i2c_target.$procmux$2817_Y [1]
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2824:
      Old ports: A=$flatten\i2c_target.$procmux$2822_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2824_Y
      New ports: A={ $flatten\i2c_target.$procmux$2822_Y [2] $flatten\i2c_target.$procmux$2822_Y [0] }, B=2'00, Y={ $flatten\i2c_target.$procmux$2824_Y [2] $flatten\i2c_target.$procmux$2824_Y [0] }
      New connections: { $flatten\i2c_target.$procmux$2824_Y [3] $flatten\i2c_target.$procmux$2824_Y [1] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2835:
      Old ports: A=$flatten\i2c_target.$procmux$2833_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2835_Y
      New ports: A=$flatten\i2c_target.$procmux$2833_Y [1:0], B=2'00, Y=$flatten\i2c_target.$procmux$2835_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2835_Y [3:2] = { 1'0 $flatten\i2c_target.$procmux$2835_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2846:
      Old ports: A=$flatten\i2c_target.$procmux$2844_Y, B=4'0001, Y=$flatten\i2c_target.$procmux$2846_Y
      New ports: A={ 1'1 $flatten\i2c_target.$procmux$2844_Y [0] }, B=2'01, Y={ $flatten\i2c_target.$procmux$2846_Y [2] $flatten\i2c_target.$procmux$2846_Y [0] }
      New connections: { $flatten\i2c_target.$procmux$2846_Y [3] $flatten\i2c_target.$procmux$2846_Y [1] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2862:
      Old ports: A=$flatten\i2c_target.$procmux$2860_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2862_Y
      New ports: A=$flatten\i2c_target.$procmux$2860_Y [1:0], B=2'00, Y=$flatten\i2c_target.$procmux$2862_Y [1:0]
      New connections: $flatten\i2c_target.$procmux$2862_Y [3:2] = 2'00
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2797:
      Old ports: A=$flatten\i2c_target.$procmux$2795_Y [2:0], B=3'000, Y=$flatten\i2c_target.$procmux$2797_Y [2:0]
      New ports: A={ $flatten\i2c_target.$procmux$2795_Y [2] $flatten\i2c_target.$procmux$2795_Y [0] }, B=2'00, Y={ $flatten\i2c_target.$procmux$2797_Y [2] $flatten\i2c_target.$procmux$2797_Y [0] }
      New connections: $flatten\i2c_target.$procmux$2797_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i2c_target.$procmux$2848:
      Old ports: A=$flatten\i2c_target.$procmux$2846_Y, B=4'0000, Y=$flatten\i2c_target.$procmux$2848_Y
      New ports: A={ $flatten\i2c_target.$procmux$2846_Y [2] $flatten\i2c_target.$procmux$2846_Y [0] }, B=2'00, Y={ $flatten\i2c_target.$procmux$2848_Y [2] $flatten\i2c_target.$procmux$2848_Y [0] }
      New connections: { $flatten\i2c_target.$procmux$2848_Y [3] $flatten\i2c_target.$procmux$2848_Y [1] } = 2'00
  Optimizing cells in module \top.
Performed a total of 47 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

2.29.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$3154 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1010_Y, Q = \multiplexer.U$$0.VectorReader.data [39:32]).
Adding EN signal on $auto$ff.cc:266:slice$3145 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1027_Y, Q = \multiplexer.U$$0.VectorReader.data [31:24]).
Adding EN signal on $auto$ff.cc:266:slice$3136 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1044_Y, Q = \multiplexer.U$$0.VectorReader.data [23:16]).
Adding EN signal on $auto$ff.cc:266:slice$3127 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1061_Y, Q = \multiplexer.U$$0.VectorReader.data [15:8]).
Adding EN signal on $auto$ff.cc:266:slice$3118 ($sdffe) from module top (D = $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1078_Y, Q = \multiplexer.U$$0.VectorReader.data [7:0]).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 138 unused wires.
<suppressed ~2 debug messages>

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~145 debug messages>

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4329: { $auto$opt_dff.cc:194:make_patterns_logic$3119 $auto$opt_dff.cc:194:make_patterns_logic$3109 $auto$opt_dff.cc:194:make_patterns_logic$3097 $auto$opt_dff.cc:194:make_patterns_logic$4326 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4319: { $auto$opt_dff.cc:194:make_patterns_logic$3137 $auto$opt_dff.cc:194:make_patterns_logic$3109 $auto$opt_dff.cc:194:make_patterns_logic$3101 $auto$opt_dff.cc:194:make_patterns_logic$4316 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4309: { $auto$opt_dff.cc:194:make_patterns_logic$3155 $auto$opt_dff.cc:194:make_patterns_logic$3109 $auto$opt_dff.cc:194:make_patterns_logic$3105 $auto$opt_dff.cc:194:make_patterns_logic$4306 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4314: { $auto$opt_dff.cc:194:make_patterns_logic$3146 $auto$opt_dff.cc:194:make_patterns_logic$3109 $auto$opt_dff.cc:194:make_patterns_logic$3103 $auto$opt_dff.cc:194:make_patterns_logic$4311 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4324: { $auto$opt_dff.cc:194:make_patterns_logic$4321 $auto$opt_dff.cc:194:make_patterns_logic$3128 $auto$opt_dff.cc:194:make_patterns_logic$3109 $auto$opt_dff.cc:194:make_patterns_logic$3099 }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [7:1] = { $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1008_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [7:1] = { $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1025_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [7:1] = { $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1042_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [7:1] = { $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1059_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076:
      Old ports: A=8'x, B=8'00000000, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y
      New ports: A=1'x, B=1'0, Y=$flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [0]
      New connections: $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [7:1] = { $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [0] $flatten\multiplexer.\U$$0.\VectorReader.$procmux$1076_Y [0] }
  Optimizing cells in module \top.
Performed a total of 10 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

2.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\fx2_crossbar.out_fifo_0.skid.r_port[2]$4250 ($dff) from module top (D = \fx2_crossbar.out_fifo_0.skid.storage_w_data, Q = \fx2_crossbar.out_fifo_0.skid.r_port[2]).
Adding EN signal on $memory\fx2_crossbar.out_fifo_0.skid.r_port[1]$4248 ($dff) from module top (D = \fx2_crossbar.out_fifo_0.skid.storage_w_data, Q = \fx2_crossbar.out_fifo_0.skid.r_port[1]).
Adding EN signal on $memory\fx2_crossbar.out_fifo_0.skid.r_port[0]$4246 ($dff) from module top (D = \fx2_crossbar.out_fifo_0.skid.storage_w_data, Q = \fx2_crossbar.out_fifo_0.skid.r_port[0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3716 ($sdff) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3716 ($sdff) from module top.

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 22 unused wires.
<suppressed ~9 debug messages>

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3715 ($sdff) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3715 ($sdff) from module top.

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~11 debug messages>

2.29.23. Rerunning OPT passes. (Maybe there is more to do..)

2.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

2.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.27. Executing OPT_DFF pass (perform DFF optimizations).

2.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.30. Rerunning OPT passes. (Maybe there is more to do..)

2.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

2.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.34. Executing OPT_DFF pass (perform DFF optimizations).

2.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.37. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$b6ec48645094baeb70d6b93add0cdbbe7498ad3c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $or.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$0f9ef3943735053e2437cb2dfebddb8617beb01b\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_ice40_alu for cells of type $alu.
Using template $paramod$4bdb94ac02745db6fc41e2e497d9b9793cd51dc6\_80_ice40_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_80_ice40_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:1ef046be63c9541309f2f19c4ef998a798f64488$paramod$9a804b3e8f3576614913ca1805e89d49da3495fd\_90_shift_shiftx for cells of type $shift.
Using template $paramod$constmap:7e7b0a15aaca16161841ffdeb0270bfb1257cf5d$paramod$fa9ab3dca0ac473ae0e24327e78834a0d64c1ba0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using extmapper maccmap for cells of type $macc.
  add \multiplexer.U$$0.XInt.input * \multiplexer.U$$0.ConfigHdlr.step_size_locked (16x8 bits, unsigned)
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
  add \multiplexer.U$$0.YInt.input * \multiplexer.U$$0.ConfigHdlr.step_size_locked (16x8 bits, unsigned)
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$56f7ce6d87f8add68ca646dc02d7695a3189f8e5\_90_pmux for cells of type $pmux.
Using template $paramod$29dcfde687ab76cd03c4ee062fb9520b20dbe845\_90_pmux for cells of type $pmux.
Using template $paramod$9351575993bc1ded3ef48c9c097ff84ad426822b\_90_pmux for cells of type $pmux.
Using template $paramod$6b13a40758f99a9f9d91b330b30c684edeea7407\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$57f63e8a3282e053be0430389b09fa050ac7dca0\_90_pmux for cells of type $pmux.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001110 for cells of type $fa.
Using template $paramod$091610cd349a68bd5539cffd7126f0d76e9bca00\_80_ice40_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~2378 debug messages>

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2388 debug messages>

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1872 debug messages>
Removed a total of 624 cells.

2.32.3. Executing OPT_DFF pass (perform DFF optimizations).

2.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 255 unused cells and 2279 unused wires.
<suppressed ~256 debug messages>

2.32.5. Finished fast OPT passes.

2.33. Executing ICE40_OPT pass (performing simple optimizations).

2.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3798.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3798.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3880.slice[0].carry: CO=\cd_sync.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3883.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.queued [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3886.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.inner.produce [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3889.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.inner.consume [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3892.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.inner.inner_level [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3895.slice[0].carry: CO=\fx2_crossbar.in_fifo_0.inner.inner_level [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3898.slice[0].carry: CO=\fx2_crossbar.out_fifo_0.inner.produce [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3901.slice[0].carry: CO=\fx2_crossbar.out_fifo_0.inner.consume [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3904.slice[0].carry: CO=\fx2_crossbar.out_fifo_0.inner.inner_level [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3907.slice[0].carry: CO=\fx2_crossbar.out_fifo_0.inner.inner_level [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3922.slice[0].carry: CO=\i2c_target.bitno [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3925.slice[0].carry: CO=\multiplexer.U$$0.BeamController.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3928.slice[16].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3931.slice[0].carry: CO=\multiplexer.U$$0.MuxBus.sample_clock.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3934.slice[0].carry: CO=\multiplexer.U$$0.XYScanGen.x_counter.current_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3937.slice[0].carry: CO=\multiplexer.U$$0.XYScanGen.y_counter.current_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7133.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7414.slice[0].carry: CO=1'0

2.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

2.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$7578 ($_SDFF_PP0_) from module top (D = $flatten\multiplexer.\U$$0.\ConfigHdlr.$procmux$1305.Y_B, Q = \multiplexer.U$$0.eflnp, rval = 1'0).

2.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 6 unused wires.
<suppressed ~5 debug messages>

2.33.6. Rerunning OPT passes. (Removed registers in this run.)

2.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7133.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7414.slice[1].carry: CO=1'0

2.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.10. Executing OPT_DFF pass (perform DFF optimizations).

2.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.12. Rerunning OPT passes. (Removed registers in this run.)

2.33.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7133.slice[2].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7414.slice[2].carry: CO=1'0

2.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.16. Executing OPT_DFF pass (perform DFF optimizations).

2.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.18. Rerunning OPT passes. (Removed registers in this run.)

2.33.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7133.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7414.slice[3].carry: CO=1'0

2.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.22. Executing OPT_DFF pass (perform DFF optimizations).

2.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.24. Rerunning OPT passes. (Removed registers in this run.)

2.33.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7133.slice[4].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$7414.slice[4].carry: CO=1'0

2.33.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.28. Executing OPT_DFF pass (perform DFF optimizations).

2.33.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.30. Rerunning OPT passes. (Removed registers in this run.)

2.33.31. Running ICE40 specific optimizations.

2.33.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.34. Executing OPT_DFF pass (perform DFF optimizations).

2.33.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.36. Finished OPT passes. (There is nothing left to do.)

2.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~660 debug messages>

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~14 debug messages>

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$3880.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3883.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3886.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3889.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3892.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3895.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3898.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3901.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3904.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3907.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3922.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3925.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3928.slice[16].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3931.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3934.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3937.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7133.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7133.slice[1].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7133.slice[2].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7133.slice[3].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7133.slice[4].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7414.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7414.slice[1].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7414.slice[2].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7414.slice[3].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$7414.slice[4].carry ($lut).

2.38. Executing ICE40_OPT pass (performing simple optimizations).

2.38.1. Running ICE40 specific optimizations.

2.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~762 debug messages>

2.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1887 debug messages>
Removed a total of 629 cells.

2.38.4. Executing OPT_DFF pass (perform DFF optimizations).

2.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 13 unused cells and 4370 unused wires.
<suppressed ~20 debug messages>

2.38.6. Rerunning OPT passes. (Removed registers in this run.)

2.38.7. Running ICE40 specific optimizations.

2.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.10. Executing OPT_DFF pass (perform DFF optimizations).

2.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.12. Rerunning OPT passes. (Removed registers in this run.)

2.38.13. Running ICE40 specific optimizations.

2.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.16. Executing OPT_DFF pass (perform DFF optimizations).

2.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.18. Finished OPT passes. (There is nothing left to do.)

2.39. Executing TECHMAP pass (map to technology primitives).

2.39.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.40. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

2.41. Executing ABC9 pass.

2.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module top.
Found 0 SCCs.

2.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.5. Executing PROC pass (convert processes to netlists).

2.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.41.5.4. Executing PROC_INIT pass (extract init attributes).

2.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

2.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.41.5.12. Executing OPT_EXPR pass (perform const folding).

2.41.6. Executing TECHMAP pass (map to technology primitives).

2.41.6.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~127 debug messages>

2.41.7. Executing OPT pass (performing simple optimizations).

2.41.7.1. Executing OPT_EXPR pass (perform const folding).

2.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

2.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

2.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

2.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

2.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

2.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

2.41.7.8. Executing OPT_EXPR pass (perform const folding).

2.41.7.9. Finished OPT passes. (There is nothing left to do.)

2.41.8. Executing TECHMAP pass (map to technology primitives).

2.41.8.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

2.41.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

2.41.9. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

2.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~1279 debug messages>

2.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

2.41.13. Executing TECHMAP pass (map to technology primitives).

2.41.13.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using template SB_CARRY for cells of type SB_CARRY.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
No more expansions possible.
<suppressed ~154 debug messages>

2.41.14. Executing OPT pass (performing simple optimizations).

2.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

2.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

2.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

2.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

2.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

2.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

2.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.41.14.16. Finished OPT passes. (There is nothing left to do.)

2.41.15. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

2.41.16. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 2024 cells with 10750 new cells, skipped 4080 cells.
  replaced 5 cell types:
    1095 $_OR_
     346 $_XOR_
       1 $_ANDNOT_
      32 $_ORNOT_
     550 $_MUX_
  not replaced 18 cell types:
     412 $_NOT_
    1405 $_AND_
       2 $paramod$f99246623db89700451daf7d443842de27e23616\SB_RAM40_4K
      77 SB_IO
       1 SB_GB_IO
      60 SB_DFF
      55 SB_DFFE
      17 SB_DFFSR
     506 SB_DFFESR
       2 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000010000101
     638 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000010101
      32 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000010100001
     545 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011001011
     268 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
       2 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000001100010
      32 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000100010010
      22 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011100000
       4 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000100001011

2.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.41.16.3. Executing XAIGER backend.
<suppressed ~681 debug messages>
Extracted 5221 AND gates and 15577 wires from module `top' to a netlist network with 761 inputs and 1480 outputs.

2.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

2.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    761/   1480  and =    4701  lev =   63 (2.81)  mem = 0.16 MB  box = 1545  bb = 1277
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    761/   1480  and =    4274  lev =   36 (1.63)  mem = 0.15 MB  ch =  238  box = 1545  bb = 1277
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =    4274.  Ch =   219.  Total mem =    1.50 MB. Peak cut mem =    0.08 MB.
ABC: P:  Del = 9125.00.  Ar =    1610.0.  Edge =     5888.  Cut =    27955.  T =     0.00 sec
ABC: P:  Del = 9062.00.  Ar =    1582.0.  Edge =     5968.  Cut =    27403.  T =     0.00 sec
ABC: P:  Del = 9062.00.  Ar =    1458.0.  Edge =     4938.  Cut =    28501.  T =     0.00 sec
ABC: F:  Del = 9062.00.  Ar =    1384.0.  Edge =     4773.  Cut =    23734.  T =     0.00 sec
ABC: A:  Del = 9062.00.  Ar =    1364.0.  Edge =     4438.  Cut =    23806.  T =     0.01 sec
ABC: A:  Del = 9062.00.  Ar =    1362.0.  Edge =     4433.  Cut =    23733.  T =     0.01 sec
ABC: Total time =     0.03 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    761/   1480  and =    4488  lev =   35 (1.56)  mem = 0.15 MB  box = 1545  bb = 1277
ABC: Mapping (K=4)  :  lut =   1329  edge =    4278  lev =   13 (0.85)  levB =   26  mem = 0.07 MB
ABC: LUT = 1329 : 2=327 24.6 %  3=384 28.9 %  4=618 46.5 %  Ave = 3.22
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.71 seconds, total: 0.71 seconds

2.41.16.6. Executing AIGER frontend.
<suppressed ~4494 debug messages>
Removed 6538 unused cells and 13273 unused wires.

2.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     1449
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      268
ABC RESULTS:           input signals:      136
ABC RESULTS:          output signals:     1453
Removing temp directory.

2.41.17. Executing TECHMAP pass (map to technology primitives).

2.41.17.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

2.41.17.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod$f99246623db89700451daf7d443842de27e23616\SB_RAM40_4K for cells of type $paramod$f99246623db89700451daf7d443842de27e23616\SB_RAM40_4K.
No more expansions possible.
<suppressed ~277 debug messages>

2.42. Executing ICE40_WRAPCARRY pass (wrap carries).

2.43. Executing TECHMAP pass (map to technology primitives).

2.43.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 326 unused cells and 17897 unused wires.

2.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1615
  1-LUT              120
  2-LUT              342
  3-LUT              533
  4-LUT              620
  with \SB_CARRY    (#0)  146
  with \SB_CARRY    (#1)  147

Eliminating LUTs.
Number of LUTs:     1615
  1-LUT              120
  2-LUT              342
  3-LUT              533
  4-LUT              620
  with \SB_CARRY    (#0)  146
  with \SB_CARRY    (#1)  147

Combining LUTs.
Number of LUTs:     1561
  1-LUT              120
  2-LUT              283
  3-LUT              489
  4-LUT              669
  with \SB_CARRY    (#0)  146
  with \SB_CARRY    (#1)  147

Eliminated 0 LUTs.
Combined 54 LUTs.
<suppressed ~7733 debug messages>

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod$9c6e6a10ea00e5b0682f6243b802d7839a398197\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$4e09fb85ad5980549134c5674f63e37de31e60bc\$lut for cells of type $lut.
Using template $paramod$66caeb00a39d236782a97659e3bd99621b74681b\$lut for cells of type $lut.
Using template $paramod$75d5c453cca75cc7a7ca320c4fb7be0932b6aaa7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$ec1227fa1ff2a4593d2cda719386ae4915c8cbcb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$b26fbfdb68e98cf016d61a8611b449e9f4a30f3c\$lut for cells of type $lut.
Using template $paramod$d2b5e7b5429639878c0a614cf001753581eebd9c\$lut for cells of type $lut.
Using template $paramod$b86b68a00733dbecb31d58a14a13683475a2002a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$ba7c22fadfbf9ee7abcb895a21403114111dd201\$lut for cells of type $lut.
Using template $paramod$1dcd863a932cfa15be531521435980b1e8189f4c\$lut for cells of type $lut.
Using template $paramod$b40080b643baa8bb528ec249e10d82b2d80dfed9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011101 for cells of type $lut.
Using template $paramod$fe1497207981e9e4f2f9556fad9970ec052e0a6d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$d7856980c8e3df62f97c26ab34037f33a9e831b5\$lut for cells of type $lut.
Using template $paramod$13a4df659496fb715f9256a6b4c8e0896e768f5d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$a4dc042990bf0f48722f562498103f0e30d86f49\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010010 for cells of type $lut.
Using template $paramod$3c2e406914f4f19b69f52234abecac5ea40848c0\$lut for cells of type $lut.
Using template $paramod$b2e8d279775d333b39e310bd45fd5952acdde290\$lut for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod$7d813eb49700f971f2635a434700eafdfa816bc3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$d76edc10344198fdbbc083cbc9765a888a1f48f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$239a649c3c5dcff42e28a38401931acf401ef810\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$16894c241be5ea1f024e9339dea788b4dbe184ae\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$bea08a495d16293f8cc454a45845d26cde0762b6\$lut for cells of type $lut.
Using template $paramod$0f9804149b480dfbeb1748217679f835813c66a6\$lut for cells of type $lut.
Using template $paramod$4e79aa6839e287ee36e65fa83c13a532a028e9cd\$lut for cells of type $lut.
Using template $paramod$734cd1512f671d92bc4f41153da0d9781801dd98\$lut for cells of type $lut.
Using template $paramod$a41d0e3b97911dca5b893a7d849ab04257ab9d97\$lut for cells of type $lut.
Using template $paramod$62e34d236b5cf9e50e7481784c0097067a15fba4\$lut for cells of type $lut.
Using template $paramod$fdcae86fcfd036c1880a04306ae771a9d7579c31\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$c6705c2d9a5ca1e5236b47844e83005fc173deff\$lut for cells of type $lut.
Using template $paramod$dd04db71dd446d0caaf01be10c27ff36f1a03004\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$3fd12db03aeee29b04c450792ea328ef1bb1f18d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101101 for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$acf49cb7bd2805dee4b4ebb218aa5924b1be7704\$lut for cells of type $lut.
Using template $paramod$762dcdf49521c1aa2145fa6746ab6d57dd5df22e\$lut for cells of type $lut.
Using template $paramod$8a36c35629d1abe9c2ed67c9558e751d534d2376\$lut for cells of type $lut.
Using template $paramod$519b6e2dbfd66920b2d4aeae7cc975bcfc27990a\$lut for cells of type $lut.
Using template $paramod$2e242b3870fd1c78b14e7f95ffa17bf0b3a3339c\$lut for cells of type $lut.
Using template $paramod$2f2b9b736b3ea0a0b958cef6434418c8f6a25d02\$lut for cells of type $lut.
Using template $paramod$2991a9166162362f9843a52417028067813fc539\$lut for cells of type $lut.
Using template $paramod$daac9b1e7bb2ac018f7132a3fbe0026ddd7b1a71\$lut for cells of type $lut.
Using template $paramod$9c9c977d4ef412c658600f27af104e72c77928d0\$lut for cells of type $lut.
Using template $paramod$d6b00b06719051e8e0d21d321c25f50651e7dd46\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$ef14303192218c8dd28cb97c03357085cb7c4d4d\$lut for cells of type $lut.
Using template $paramod$0abe4e2ff3255c188b048bf35af20e8558580054\$lut for cells of type $lut.
Using template $paramod$2955ab75367a3dc9d6f50d3655eebcd4f615031f\$lut for cells of type $lut.
Using template $paramod$3f6fe0730f7978b946a57d55a78e206b053e637b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111001 for cells of type $lut.
Using template $paramod$595b4955041ceff09e28d600fe79275c24ba9878\$lut for cells of type $lut.
Using template $paramod$a70c36ce9c272ff5b653554a904c7bf311d2f478\$lut for cells of type $lut.
Using template $paramod$1e9293a24ea166516c118dac83c9fc5510b473fd\$lut for cells of type $lut.
Using template $paramod$be5308abcd11e5d87888ef8da44ef0b0d06a59e3\$lut for cells of type $lut.
Using template $paramod$718208d0d7c444e4924e09c40d40e7ac2bd4dfe6\$lut for cells of type $lut.
Using template $paramod$923a34bca12d215b7d61635060bb4ef616b5625f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101000 for cells of type $lut.
Using template $paramod$325e90edf97670f9dea57833ae1f51a5e8bcddea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101110 for cells of type $lut.
Using template $paramod$034a69dd110db95ee917f313eafd6833fc6595f9\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$4e0dac06d9d9602cfb659e01e0850b77eec5b798\$lut for cells of type $lut.
Using template $paramod$ca2532991f2c847ac990e1deeca1e91108bc2da0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010101 for cells of type $lut.
Using template $paramod$17fd36fab32bce162e5828682c2ba9fa7f9e273b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$039cb9cfde3b9173e6974746c4f867554e44440a\$lut for cells of type $lut.
Using template $paramod$eab8c2e20ad6848564bec45c7148558972138f5b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$6f3f060a82077d7722793a80a7f81ffcda8e7f4d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110101 for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110100 for cells of type $lut.
Using template $paramod$64c98a93c00f2932cdb01ce29e3a216b58ad51fe\$lut for cells of type $lut.
Using template $paramod$826d4fba61f8b6b8d18c13232c0323a45a626066\$lut for cells of type $lut.
Using template $paramod$b8c12e9f20286ec99dd92b2fd58c920f7e7cec0f\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$a18f441632f9abbb6cede8800eba30cc4f555a16\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$d21d214a5aa271f2d9da3f90f22432c0ecee130f\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$f0773b2e1ec54f4b5730a332b99958a07b433091\$lut for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod$6deead41a97e885fdfb7651ed7486bc07c319d2a\$lut for cells of type $lut.
Using template $paramod$097153982708ad51b09797fee31ad916db08d575\$lut for cells of type $lut.
Using template $paramod$a1cfe99817bd6d57a83efd5e1c3fc26a743b692f\$lut for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$44ed8d08d91fc8a474e535e2b1bd5026ed8a67bd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110011 for cells of type $lut.
Using template $paramod$4bf055ca8a75a6b2e0a7cc21f3141b6576bbc879\$lut for cells of type $lut.
Using template $paramod$1f313f85ef575d13bac75382f04905a8c8be8f57\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011101 for cells of type $lut.
Using template $paramod$4abcf8dfd78e0cdc9647afe91eafecd6d6f750d2\$lut for cells of type $lut.
Using template $paramod$7ffc04c088a4897014506d1e561a14b627924059\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$9a269ffb0efb6ad342cb106a4e0636e23fdfd547\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod$8614da24b3846fe751594d00fba789cfcb7b874c\$lut for cells of type $lut.
Using template $paramod$8d7a8d6e3356de09670738ba85f2c6b874f6b06d\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$234fd643079033ba0cbc98ff572df9b7b7a0dc86\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001000 for cells of type $lut.
Using template $paramod$93db06c297a6661cfcd3b2db90b2096708bc0e55\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$3834e2239f05e6b9b27d483b2e01a04de47c5bd6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod$d5a37b92345ff038953b03524b014e8a09fc93d9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001110 for cells of type $lut.
Using template $paramod$234bf0b8008173938795a53831f595f8ec3ba6eb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod$f1a1d9f676e9a8dfefb9d549b9b2c26a026e27e6\$lut for cells of type $lut.
Using template $paramod$1241d759e3df4cac11dc7c99c36b0d1b07f7a673\$lut for cells of type $lut.
Using template $paramod$5c7d886f3b88971ac55fed4bca034a87bf180f7d\$lut for cells of type $lut.
Using template $paramod$4cab3b31c601551ff65536bf4f533afa0b2094ee\$lut for cells of type $lut.
Using template $paramod$b2077130d89736f5191d0d24f7f6ffd3bddb0a2d\$lut for cells of type $lut.
Using template $paramod$dbdbcb07b9994e498bb1324e5c006c6aa08a7a37\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$e3f0f1b1a91dadf82d87013c252f9f5fc0dc6888\$lut for cells of type $lut.
Using template $paramod$ecf2a17c061c17763d12592309f482d512af5e13\$lut for cells of type $lut.
Using template $paramod$f72adea4079fc83d9a23745aebe7501f2b8f741d\$lut for cells of type $lut.
Using template $paramod$d1429df3e731f6dd7f726da18ff4c6820308f56f\$lut for cells of type $lut.
Using template $paramod$7996097aa7e74872f48a5ea7d10d2b685895e6b4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101011 for cells of type $lut.
Using template $paramod$610895a8fdbf27a4d2da55f6513bb969354802ea\$lut for cells of type $lut.
Using template $paramod$10a6d42c84663fca6c1622800fdec61acbd34667\$lut for cells of type $lut.
Using template $paramod$ab2e45f7a350a5d7d54d88d8019d5256ae32568f\$lut for cells of type $lut.
Using template $paramod$d0fe7556ef6223c467da0bfe5c6e9cca5c3fc0e5\$lut for cells of type $lut.
Using template $paramod$868427562418b5dc988caeac6a54689ec9c9025e\$lut for cells of type $lut.
Using template $paramod$37275f9005096a8b3beded7be16e5d19f7397fa0\$lut for cells of type $lut.
Using template $paramod$1578333f1a5078051b84dbcbad362e8087bf5284\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110010 for cells of type $lut.
Using template $paramod$fe7077462a386258cea7b409718bda7873cfae08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$c64dec5f9cba92e7fb1a4ba3987a6ac85d9a3898\$lut for cells of type $lut.
Using template $paramod$21f957a7073b1ba634cad0df400394ca323de2fc\$lut for cells of type $lut.
Using template $paramod$8d6488bf3eded5ffc8423c5b07a7c26381708325\$lut for cells of type $lut.
Using template $paramod$98162d862d449f7c67182f5a43cdfe4123defff8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$2953feb5e102bcccc236b4c0e38de7253e9dd640\$lut for cells of type $lut.
Using template $paramod$8d14a58b74f1cab713b6be40769748b6eaed87d1\$lut for cells of type $lut.
Using template $paramod$bc9180cdfcd49ad6f178d338e90551ccba0f90ae\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$1d45edc614defc815d133246b330a66b08944a6c\$lut for cells of type $lut.
Using template $paramod$6be53ab59e0a69757fc32adb071ddcb64e8c87b6\$lut for cells of type $lut.
Using template $paramod$32c48a69e3acd22031599a3593da71076425a763\$lut for cells of type $lut.
Using template $paramod$255b0049df4cb49b23955e4a3117758a889578dd\$lut for cells of type $lut.
Using template $paramod$277dcd4f32f9ff0b69173d34a380238aee0f3973\$lut for cells of type $lut.
Using template $paramod$290d57e1500747537d7d777ca08fb349661e9d21\$lut for cells of type $lut.
Using template $paramod$1f116a4fc36138e62c139e0719579ffdfdaf55b4\$lut for cells of type $lut.
Using template $paramod$9d86735a665af3c1da46d993ca9fb8a1a8b4a873\$lut for cells of type $lut.
Using template $paramod$f4a57baab64c324d23e33ace5aa73e6c32ea0405\$lut for cells of type $lut.
Using template $paramod$77ab94a08ffff4d7c841b8b03bb4ee5b5303db7f\$lut for cells of type $lut.
Using template $paramod$f0523e491c61256768c054c02f31e4957edb6109\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000111 for cells of type $lut.
Using template $paramod$81a1c70a44627b4583ef634127f9138f86659a4c\$lut for cells of type $lut.
Using template $paramod$09db1b832f9e1cae5c3d7feed1f3bed172b082fb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod$d017bb1379dfae5c49537b3fbd1cdc27d426859f\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101011 for cells of type $lut.
Using template $paramod$5a8dec98fa0483f3fd99eb443e24ef5e9fd77eeb\$lut for cells of type $lut.
Using template $paramod$e1ed79c0cf8e1eb859c3fb6c12aef8c739555508\$lut for cells of type $lut.
Using template $paramod$a4b09ab155a7d006f93ce393ab43ef0f0eacbc9e\$lut for cells of type $lut.
Using template $paramod$031639056602a9dab4a0894878194a35372df974\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod$a988852add2bdce7c1dfac786401ba7c7bc832c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110011 for cells of type $lut.
Using template $paramod$5307f40f1b453046eb68ee1a10c3f82d605af6fc\$lut for cells of type $lut.
Using template $paramod$9a20e5eb914da7530de8ea5af782be66b9acb237\$lut for cells of type $lut.
Using template $paramod$ec6c71d259df49ae0842190ffaff1179e43a8db4\$lut for cells of type $lut.
Using template $paramod$df6b12cebabc3b2db650658c5e894d03a346e968\$lut for cells of type $lut.
Using template $paramod$b600d182ae966d09f33a746441e104587fe7a58f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$865395c0228487a64a8e4011cecafc2c64b79f2b\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$0331e023d83b8009e60defb446ce9fa640b122c7\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~4762 debug messages>
Removed 0 unused cells and 3623 unused wires.

2.46. Executing AUTONAME pass.
Renamed 85537 objects in module top (197 iterations).
<suppressed ~3841 debug messages>

2.47. Executing HIERARCHY pass (managing design hierarchy).

2.47.1. Analyzing design hierarchy..
Top module:  \top

2.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.48. Printing statistics.

=== top ===

   Number of wires:               2404
   Number of wire bits:           5994
   Number of public wires:        2404
   Number of public wire bits:    5994
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2530
     SB_CARRY                      251
     SB_DFF                         60
     SB_DFFE                        55
     SB_DFFESR                     506
     SB_DFFSR                       17
     SB_GB_IO                        1
     SB_IO                          77
     SB_LUT4                      1561
     SB_RAM40_4K                     2

2.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3. Executing JSON backend.

End of script. Logfile hash: 5400c1fa4d, CPU: user 6.35s system 0.74s
Yosys 0.33 (git sha1 2584903a060, clang 14.0.3 -fPIC -Os)
Time spent: 19% 47x opt_expr (1 sec), 14% 11x techmap (1 sec), ...
